Id,PostTypeId,Title,Body,AcceptedAnswerId,AcceptedAnswer
"70552008","1","Java hidden properties without Spring","<p>I am currently creating a Java program that uses a MongoDB database and I am storing the connection information in a properties file.</p>
<p>But my project is opensource on GitHub and I cannot store the connection information in the properties file.</p>
<p>And so I wanted to ask you if it is possible to give the login information from docker run.</p>
<p>example : <code>docker run registry/image -args db.password=psw db.username=user</code></p>
<p>I have seen solutions in stackoverflow but all solutions use Spring features, but my project does not use Spring framework.</p>
","70556743","<p>We have multiple solutions for this:</p>
<h2>Secret Docker</h2>
<p>Create a file with the properties syntax:</p>
<pre><code>//secret-file.txt
db.password=psw
db.username=user
</code></pre>
<p>With this file create a <em>docker secret</em> in your docker :</p>
<pre class=""lang-sh prettyprint-override""><code>$ docker secret create test-secret secret-file.txt
</code></pre>
<p>And use this with the java library <a href=""https://github.com/carsdotcom/docker-secrets-java"" rel=""noreferrer""><em>docker-secrets</em></a> in your java program :</p>
<pre class=""lang-java prettyprint-override""><code>Map&lt;String, String&gt; secrets = DockerSecrets.loadFromFile(&quot;test-secret&quot;);
System.out.println(secrets.get(&quot;db.password&quot;)) // readonly
</code></pre>
<p>For more example, look <a href=""https://github.com/carsdotcom/docker-secrets-java"" rel=""noreferrer"">here</a>.</p>
<hr />
<h2>Environment variables</h2>
<p>Set the environment variables in the docker with <code>-e</code> argument :</p>
<pre class=""lang-sh prettyprint-override""><code>$ docker run -e DB_PASSWORD=pwd -e DB_USERNAME=user registry/image:tag
</code></pre>
<p>And use these variables with <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/System.html#getenv(java.lang.String)"" rel=""noreferrer""><code>System::getenv</code></a> in your java program :</p>
<pre class=""lang-java prettyprint-override""><code>System.out.println(System.getenv(&quot;DB_PASSWORD&quot;))
</code></pre>
<hr />
<h2>VM Arguments</h2>
<p><em>This solution depends on your base image that was used to create your Docker container.</em></p>
<p>Give <em>VM Arguments</em> to the <em>docker run</em> command :</p>
<pre class=""lang-sh prettyprint-override""><code>$ docker run -e JAVA_OPTS=&quot;-Ddb.password=pwd -Ddb.username=user&quot; registry/image:tag
</code></pre>
<p>And use these variables with <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/System.html#getProperty(java.lang.String)"" rel=""noreferrer""><code>System::getProperty</code></a> in your java program :</p>
<pre class=""lang-java prettyprint-override""><code>System.out.println(System.getProperty(&quot;db.password&quot;))
</code></pre>
<hr />
<h2>Program arguments</h2>
<p>Give arguments to docker run command :</p>
<p><em>It is important to give the arguments after declaring the image.</em></p>
<pre class=""lang-sh prettyprint-override""><code>$ docker run registry/image:tag pwd user
</code></pre>
<p>And use these arguments with <em>main</em> method in your java program :</p>
<pre class=""lang-java prettyprint-override""><code>public static void main(String[] args) {
    System.out.println(&quot;The password: &quot; + args[0]);
    System.out.println(&quot;The username: &quot; + args[1]);
}
</code></pre>
<p>For better handling of arguments, you can use the Apache's <a href=""http://commons.apache.org/cli/"" rel=""noreferrer""><em>commons-cli</em></a> java library or use <a href=""http://jewelcli.lexicalscope.com/related.html"" rel=""noreferrer"">a another library</a>.</p>
"
"70601508","1","Can I use Java 16 record with JPA entity?","<p>I am trying to do something similar like below.</p>
<pre><code>@Entity
@Table(name=&quot;Sample&quot;)
public record Sample(Integer id, String name) {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name=&quot;user_id&quot;)
    private Integer id;

    @Column(name=&quot;username&quot;)
    private String name;

}
</code></pre>
<p>However, it gives me error &quot;User declared non-static fields id are not permitted in a record&quot;
and same for name field as well.</p>
<p>Is there a way to use new java feature &quot;record&quot; with JPA annotation?</p>
","70601646","<p>See the article, <a href=""https://wkorando.github.io/sip-of-java/015.html"" rel=""noreferrer""><em>Using Records as Projections in JPA</em></a> by Billy Korando. The following is a brief summary.</p>
<h1>Records cannot be Entities</h1>
<p><a href=""https://en.wikipedia.org/wiki/Jakarta_Persistence"" rel=""noreferrer""><em>Jakarta Persistence</em> </a> (<em>JPA</em>; formerly <em>Java Persistence API</em>) implementations such as <a href=""https://en.wikipedia.org/wiki/Hibernate_(framework)"" rel=""noreferrer""><em>Hibernate</em></a> depend on features either forbidden or not recommended by the <a href=""https://openjdk.java.net/jeps/395"" rel=""noreferrer"">JEP 395: Records</a> spec: no-arg constructors, non-final fields, setters, etc.</p>
<p>➥ So, no, records cannot be used as JPA <code>Entity</code>.</p>
<h1>Other uses of records</h1>
<p>You can use records with:</p>
<ul>
<li><code>CriteriaBuilder</code></li>
<li><code>TypedQuery</code></li>
<li><code>NativeQuery</code></li>
<li>Mapping definition</li>
</ul>
<p>Spring data has some support as well.</p>
<p>See that article linked above for details, and for links to two other articles.</p>
"
"70575180","1","Log4j2 vulnerability and Lombok annotation @log4j2","<p>We are using spring boot 2.1.5 and starter parent as pom dependency.</p>
<p>Spring boot is using default logback for logging and we haven't explicitly switched to Log4j2 or changes any configurations. Below is our project dependency tree.</p>
<p><a href=""https://i.stack.imgur.com/IwucP.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/IwucP.png"" alt=""enter image description here"" /></a></p>
<p>We have lot of lombok @log4j2 annotations in our project. But, we find in dependency tree we do not have any log4j2-core jar dependency (that has been found vulnerable to recent issues with log4j).</p>
<pre><code>@Log4j2
@Service
@DependsOn(&quot;applicationDependencyCheck&quot;)
</code></pre>
<p>Is lombok @log4j2 not dependent on log4j2-core.jar. Is it correct to assume this would show up in maven dependency tree or are we missing something.</p>
<p>This is our lombok entry -</p>
<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;
    &lt;artifactId&gt;lombok&lt;/artifactId&gt;
    &lt;optional&gt;true&lt;/optional&gt;
&lt;/dependency&gt;
</code></pre>
<p>Please share some insights.</p>
<p>thanks</p>
","70576095","<p>In lombok documentation you can find it here <a href=""https://projectlombok.org/api/lombok/extern/log4j/Log4j2.html"" rel=""nofollow noreferrer"">https://projectlombok.org/api/lombok/extern/log4j/Log4j2.html</a></p>
<blockquote>
<p>@Log4j2  public class LogExample {  }</p>
<p>will generate:</p>
<p>public class LogExample {
private static final org.apache.logging.log4j.Logger log = org.apache.logging.log4j.LogManager.getLogger(LogExample.class);  }</p>
</blockquote>
<p>Both classes are present in log4j <strong>API jar</strong></p>
<ul>
<li><a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/LogManager.html"" rel=""nofollow noreferrer"">https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/LogManager.html</a></li>
<li><a href=""https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/Logger.html"" rel=""nofollow noreferrer"">https://logging.apache.org/log4j/2.x/log4j-api/apidocs/org/apache/logging/log4j/Logger.html</a></li>
</ul>
<p>There are no known vulnerabilities listed here <a href=""https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api"" rel=""nofollow noreferrer"">https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api</a></p>
<p>As described here <a href=""https://logging.apache.org/log4j/2.x/log4j-api/index.html"" rel=""nofollow noreferrer"">https://logging.apache.org/log4j/2.x/log4j-api/index.html</a> log4j api is just an interface.</p>
<p>I think in such case your code does not depend on log4j core. You can double check the output of build (e.g. maven /target folder, war file etc)</p>
"
"70593561","1","Cannot be resolved to absolute file path because it does not reside in the file system","<p><strong>My Code:</strong></p>
<pre><code>XWPFDocument doc = new XWPFDocument(OPCPackage.open(ResourceUtils.getFile(&quot;classpath:assets/OPTIONS_&quot; + jubilar1.getJubiLanguage().toUpperCase() + &quot;.docx&quot;)));
</code></pre>
<p>I have already tried instead of .getFile(), extractJarFileFromURL or resource.getInputStream() but all this does not work. When I package my project and run it as a jar file and it tries to open the following file it always returns the following message.</p>
<p><strong>Error:</strong></p>
<blockquote>
<p>java.io.FileNotFoundException: class path resource [assets/OPTIONS_DE.
docx] cannot be resolved to absolute file path because it does not
reside in the file system:
jar:file:/home/tkf6y/IdeaProjects/hrapps/backend/target/backend-3.0.0.jar!/BOOT-INF/classes!/assets/OPTIONS_EN.docx</p>
</blockquote>
","70604475","<p>So yes it was the problem, as you are now using an InputStream as I suggested. The problem was (and always has been) the getFile stuff. What I suggest to do is don't use what you have now but rather do a new ClassPathResource(your location).getInputStream()) instead, it is easier, or even use a ResourceLoader (a Spring interface you can inject) and then use the path you had an again use getInputStream(). –</p>
"
"70576798","1","Boolean recursive static method that gets an array of integers","<p>I'm trying to write a method that would Return true if it is possible to divide all the members of an array into two different groups of equal size so that the sum of the members of the two groups is equal. If this is not possible, the method Return false.</p>
<h3>The conditions are:</h3>
<ul>
<li><strong>The method should be recursive with no use of loops at all, So are all the auxiliary methods
Can not contain loops.</strong><br /></li>
<li><strong>The array is neither null nor empty.</strong></li>
<li><strong>Do not modify the contents of the array (not even temporarily), and do not use an auxiliary array.</strong></li>
</ul>
<pre><code>public static boolean equalSplit (int[] arr){
    if(arr.length % 2 != 0) // if array length is not equal both sides
        return false;
    return equalSplit (arr, arr[0],(0 + arr.length-1) / 2 , arr.length-1);
} 
</code></pre>
<pre><code>public static boolean equalSplit (int[] arr, int start, int mid, int end){
       
}
</code></pre>
<p>I got stuck here and i have no clue what to do next.</p>
","70583488","<p>something like this should solve your problem and handle all cases.</p>
<pre><code>    public static boolean canBeDividedEqually(int[] arr) {
        if (arr.length % 2 != 0) {
            return false;
        }
        int sum = getSum(arr);
        if (sum % 2 != 0) {
            return false;
        }
        return canBeDividedEqually(arr, sum);

    }

    public static int getSum(int[] arr) {
        return getSum(arr, 0, 0);
    }

    private static int getSum(int[] arr, int sum, int index) {
        if (index &gt;= arr.length) {
            return sum;
        }
        return getSum(arr, sum + arr[index], index + 1);
    }

    private static boolean canBeDividedEqually(int[] arr, int sum) {
        // this can be optimized by canBeDividedEqually(arr, sum/2, arr[0], arr.length/2, 1, 1) because first element should always belong to first group, so we can start search from second element
        return canBeDividedEqually(arr, sum/2, 0, arr.length/2, 0, 0);
//        return canBeDividedEqually(arr, sum/2, arr[0], arr.length/2, 1, 1);
    }

    private static boolean canBeDividedEqually (int[] arr, int searchSum, int currentSum, int searchQuantity, int currentQuantity, int nextIndex) {
        if(searchSum == currentSum &amp;&amp; searchQuantity == currentQuantity) {
            return true;
        }
        if(searchSum &lt;= currentSum || searchQuantity &lt;= currentQuantity) {
            // we have too big sum or we take to much elements
            return false;
        }
        if(nextIndex + (searchQuantity - currentQuantity) &gt; arr.length) {
            // we need to take more elements than we have still available
            return false;
        }
        // add current element into account and search further
        if(canBeDividedEqually(arr, searchSum, currentSum + arr[nextIndex], searchQuantity, currentQuantity + 1, nextIndex + 1)) {
            System.out.println(&quot;true&quot;);
            return true;
        }
        // if above &quot;if&quot; statement is not true, then skip current element and try to search further
        return canBeDividedEqually(arr, searchSum, currentSum, searchQuantity, currentQuantity, nextIndex + 1);
    }
</code></pre>
"
"70595267","1","Why does this code use an oversized array instead of a Map?","<p><a href=""https://github.com/jboss/jboss-jstl-api_spec/blob/4ad412ae5be1ae606b8d33c188cb3d98bfcbe84c/src/main/java/org/apache/taglibs/standard/util/EscapeXML.java#L45"" rel=""noreferrer"">Here's JBoss JSTL implementation for the EscapeXML tag</a></p>
<pre><code>public class EscapeXML {

    private static final String[] ESCAPES;

    static {
        int size = '&gt;' + 1; // '&gt;' is the largest escaped value
        ESCAPES = new String[size];
        ESCAPES['&lt;'] = &quot;&amp;lt;&quot;;
        ESCAPES['&gt;'] = &quot;&amp;gt;&quot;;
        ESCAPES['&amp;'] = &quot;&amp;amp;&quot;;
        ESCAPES['\''] = &quot;&amp;#039;&quot;;
        ESCAPES['&quot;'] = &quot;&amp;#034;&quot;;
    }
  //omitted
}
</code></pre>
<p>Why is <code>ESCAPES</code> a 61 elements array? What are the implication of using a <code>Map&lt;Character,String&gt;</code> instead?</p>
","70638166","<p>I think the main reason is performance. Each map query needs to get the hashcode, and then calculate the position of the array in the map, and the array can be obtained directly. The following is a simple test, querying 10,000 times separately, the array is about 10 times faster than the map.</p>
<pre><code>array query result: cost time= 184041
map query result: cost time= 1677042
</code></pre>
<pre><code>import org.junit.Before;
import org.junit.Test;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Random;

/**
 * @author jahe
 * @date 2022/1/9
 * @note
 */
public class ArrayMapTest {
    private char[] chars = {'&lt;', '&gt;', '&amp;', '\'', '&quot;'};
    private char[] charsForQuery = new char[10000];
    @Before
    public void init(){
        Random random = new Random(5);
        random.nextInt(5);
        for (int i = 0; i &lt; charsForQuery.length; i++) {
            charsForQuery[i] = chars[random.nextInt(5)];
        }
        System.out.println(Arrays.toString(charsForQuery));
    }
    @Test
    public void test() {
        int size = '&gt;' + 1;
        String[] ESCAPES = new String[size];
        ESCAPES['&lt;'] = &quot;&amp;lt;&quot;;
        ESCAPES['&gt;'] = &quot;&amp;gt;&quot;;
        ESCAPES['&amp;'] = &quot;&amp;amp;&quot;;
        ESCAPES['\''] = &quot;&amp;#039;&quot;;
        ESCAPES['&quot;'] = &quot;&amp;#034;&quot;;
        long start = System.nanoTime();
        doTestForArray(ESCAPES);
        long end = System.nanoTime();
        System.out.println(&quot;array query result: cost time= &quot; + (end - start));

        Map&lt;Character, String&gt; map = new HashMap&lt;&gt;();
        map.put('&lt;', &quot;&amp;lt;&quot;);
        map.put('&gt;', &quot;&amp;gt;&quot;);
        map.put('&amp;', &quot;&amp;amp;&quot;);
        map.put('\'', &quot;&amp;#039;&quot;);
        map.put('&quot;', &quot;&amp;#034;&quot;);
        start = System.nanoTime();
        doTestForMap(map);
        end = System.nanoTime();
        System.out.println(&quot;map query result: cost time= &quot; + (end - start));

    }
    private void doTestForArray(String[] ESCAPES){
        for (char c : charsForQuery) {
            String str = ESCAPES[c];
        }
    }
    private void doTestForMap(Map&lt;Character, String&gt; map){
        for (char c : charsForQuery) {
            String s = map.get(c);
        }
    }
}
</code></pre>
"
"70601178","1","Java Generics: What is the benefit of using wildcards here?","<p>The <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/Collections.html#fill(java.util.List,T)"" rel=""noreferrer"">Collections.fill</a> method has the following header:</p>
<pre><code>public static &lt;T&gt; void fill(List&lt;? super T&gt; list, T obj)
</code></pre>
<p>Why is the wildcard necessary? The following header seems to work just as well:</p>
<pre><code>public static &lt;T&gt; void fill(List&lt;T&gt; list, T obj)
</code></pre>
<p>I cannot see a reason why the wildcard is needed; code such as the following works with the second header as well as the first:</p>
<pre><code>List&lt;Number&gt; nums = new ArrayList&lt;&gt;();
Integer i = 43;
fill(nums, i); //fill method written using second header
</code></pre>
<p>My question is: <strong>For what specific call of <code>fill</code> would the first header work but not the second? And if there is no such call, why include the wildcard?</strong> In this case, the wildcard does not make the method more concise nor add to readability (in my opinion).</p>
","70627059","<p>This is a really good question and the simple answer was guessed already:</p>
<blockquote>
<p>For the current version of the <code>fill(List&lt;? super T&gt; list, T obj)</code> there is no
such input that would be rejected given the signature is changed to <code>fill(List&lt;T&gt; list, T obj)</code>, so there is no benefit and the devs are likely followed the PECS principle</p>
</blockquote>
<p>The above statement derives from the principle that: if there is a such type <code>X</code> so that
<code>X</code> is a supertype of <code>T</code> then <code>List&lt;X&gt;</code> is a supertype of <code>List&lt;? super T&gt;</code> because of type contravariance.
Since we can always find such <code>X</code> (at the worst case it's the <code>Object</code> class) - the compiler can infer a suitable <code>List&lt;X&gt;</code> argument type given either form of <code>fill</code>.</p>
<p>So, knowing that fact we can interfere with the compiler and infer the type ourselves using &quot;type witness&quot; so the code breaks:</p>
<pre><code>List&lt;Object&gt; target = new ArrayList&lt;&gt;();
//Compiles OK as we can represent List&lt;Object&gt; as List&lt;? super Integer&gt; and it fits
Collections.&lt;Integer&gt;fill(target, 1);

//Compilation error as List&lt;Object&gt; is invariant to List&lt;Integer&gt; and not a valid substitute
Collections.&lt;Integer&gt;fillNew(target, 1);
</code></pre>
<p>This is all of course purely theoretical and nobody in their right mind would use the type argument there.</p>
<p><strong>HOWEVER</strong></p>
<p>While answering the question &quot;<em>What is the benefit of using wildcards here?</em>&quot; we yet considered only one side of the equation - us, consumers of the method and our experience but not library developers.</p>
<p>Hence this question is somewhat similar to why <code>Collections.enumeration(final Collection&lt;T&gt; c)</code> is declared the way it is and not <code>enumeration(Collection&lt;T&gt; c)</code> as <code>final</code> seems superfluous for the end-user.</p>
<p>We can speculate here about the real intention, but I can give a few subjective reasons:</p>
<ol>
<li>First: using <code>List&lt;? super T&gt;</code> (as well as <code>final</code> for <code>enumeration</code>) immediately disambiguates the code that tiny bit more and for the <code>&lt;? super T&gt;</code> specifically - it useful to show that only partial knowledge about the
type parameter is required and the <code>list</code> cannot be used to produce values of T, but only to consume them.
Quote:</li>
</ol>
<blockquote>
<p>Wildcards are useful in situations where only partial knowledge about the type parameter is required.
<em><a href=""https://docs.oracle.com/javase/specs/jls/se8/html/jls-4.html#jls-4.5.1"" rel=""nofollow noreferrer"">JLS 4.5.1. Type Arguments of Parameterized Types</a></em></p>
</blockquote>
<ol start=""2"">
<li>Second: it gives some freedom to the library owners to improve/update the method without breaking backward compatibility while conforming to the existing constraints.</li>
</ol>
<hr />
<p>Now let's try make up some hypothetical &quot;improvements&quot; to see what I mean (I'll call the form of <code>fill</code> that uses <code>List&lt;T&gt;</code> as <code>fillNew</code>):</p>
<p>#1 The decision is to make method to return the <code>obj</code> value (used to fill up the list) back:</p>
<pre><code>public static &lt;T&gt; void fill(List&lt;? super T&gt; list, T obj)
//becomes ↓↓↓
public static &lt;T&gt; T fill(List&lt;? super T&gt; list, T obj)
</code></pre>
<p>The updated method would work just fine for <code>fill</code> signature, but for <code>fillNew</code> - the inferred return type now isn't that obvious:</p>
<pre><code>List&lt;Number&gt; target = new ArrayList&lt;&gt;();
Long val = fill(target, 1L); //&lt;&lt;Here Long is the most specific type that fits both arguments
//Compilation error
Long val = fillNew(target, 1L); //&lt;&lt;Here Number is, so it cannot be assigned back

//More exotic case:
Integer val = fill(asList(true), 0); //val is Integer as expected
Comparable&lt;?&gt; val = fillNew(asList(true), 0); //val is now Comparable&lt;?&gt; as the most specific type 
</code></pre>
<p>#2 The decision to add an overloaded version of <code>fill</code> that is 10x more performant in cases when <code>T</code> is <code>Comparable&lt;T&gt;</code>:</p>
<pre><code>/* Extremely performant 10x version */
public static &lt;T extends Comparable&lt;T&gt;&gt; void fill(List&lt;? super T&gt; list, T value)
/* Normal version */
public static void fill(List&lt;? super T&gt; list, T value)

List&lt;Number&gt; target = new ArrayList&lt;&gt;();
fill(target, 1);  //&lt;&lt;&lt; Here the more performant version is used as T inferred to Integer and it implements Comparable&lt;Integer&gt;
fillNew(target, 1); //&lt;&lt; Still uses the slow version just because T is inferred to Number which is not Comparable
    
</code></pre>
<p>To sum up - the current signature of <code>fill</code> is more flexible/descriptive in my opinion for all parties (developers and library designers)</p>
"
"70581530","1","Error creating bean with name 'securityConfig': Requested bean is currently in creation:","<pre><code>package ro.contabilitateexpert.AccountExpert.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.config.BeanIds;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;

@EnableWebSecurity
public class SecurityConfig extends WebSecurityConfigurerAdapter {

    @Autowired
    private UserDetailsService userDetailsService;

    @Bean(BeanIds.AUTHENTICATION_MANAGER)
    @Override
    public AuthenticationManager authenticationManagerBean() throws Exception {
        return super.authenticationManagerBean();
    }

    @Override
    public void configure(HttpSecurity httpSecurity) throws Exception {
        httpSecurity.csrf().disable().authorizeRequests()
                .antMatchers(&quot;/api/auth/**&quot;)
                .permitAll()
                .anyRequest()
                .authenticated();
    }

    @Autowired
    public void configureGlobal(AuthenticationManagerBuilder authenticationManagerBuilder) throws Exception {
        authenticationManagerBuilder.userDetailsService(userDetailsService).passwordEncoder(passwordEncoder());
    }

    @Bean
    PasswordEncoder passwordEncoder() {
        return new BCryptPasswordEncoder();
    }
}
</code></pre>
<p>I have the following error :
Error creating bean with name 'securityConfig': Requested bean is currently in creation: Is there an unresolvable circular reference?</p>
<p>How can i solve it?</p>
","70595758","<p>After i changed to configure instead of configureGlobal with @Overrides and deleted @Autowired
Added @Configuration
Now the code is working,</p>
<p>Thanks to  Alexey Veleshko</p>
"
"70681453","1","How to implement fixed points of functors in Java","<p>I recently discovered how to <a href=""https://github.com/highj/highj"" rel=""nofollow noreferrer"">simulate higher order types in Java</a>  in a somewhat roundabout way like so</p>
<pre><code>interface H&lt;F, T&gt; { }
</code></pre>
<p>Here <code>H</code> encodes a higher order type that takes a type parameter <code>F</code> which itself takes parameter <code>T</code>.</p>
<p>Now this leaves me to wonder, can we use this to implement some more advanced constructs? E.g. fixed point of functors
like <a href=""https://hackage.haskell.org/package/data-fix-0.3.0/docs/Data-Fix.html"" rel=""nofollow noreferrer"">Fix in Haskell</a> and its corresponding <a href=""https://hackage.haskell.org/package/data-fix-0.3.0/docs/Data-Fix.html#g:6"" rel=""nofollow noreferrer"">catamorphisms</a>?</p>
","70681454","<p>Indeed this can be done by carefully translating the corresponding Haskell counterparts. Although this introduces a lot of line noise,
the implementation is quite close to the original:</p>

<pre class=""lang-java prettyprint-override""><code>// Encoding of higher kinded type F of T
public interface H&lt;F, T&gt; { }

public interface Functor&lt;F, T&gt; {
    &lt;R&gt; H&lt;F, R&gt; map(Function&lt;T, R&gt; f);
}

// newtype Fix f = Fix {unfix::f (Fix f)}
public static record Fix&lt;F extends H&lt;F, T&gt; &amp; Functor&lt;F, T&gt;, T&gt;(F f) {
    public Functor&lt;F, Fix&lt;F, T&gt;&gt; unfix() {
        return (Functor&lt;F, Fix&lt;F, T&gt;&gt;) f;
    }
}

// type Algebra f a = f a -&gt; a
public interface Algebra&lt;F, T&gt; extends Function&lt;H&lt;F, T&gt;, T&gt; {}

 // cata :: Functor f =&gt; Algebra f a -&gt; Fix f -&gt; a
 // cata alg = alg . fmap (cata alg) . unfix
public static &lt;F extends H&lt;F, T&gt; &amp; Functor&lt;F, T&gt;, T&gt; Function&lt;Fix&lt;F, T&gt;, T&gt; cata(Algebra&lt;F, T&gt; alg) {
    return fix -&gt; alg.apply(fix.unfix().map(cata(alg)));
}
</code></pre>
<p>Amazingly this works and can be used to implement e.g. <a href=""https://github.com/mduerig/java-functional/blob/master/src/michid/fun/fix/Expression.java#L25"" rel=""nofollow noreferrer"">interpreters for expression algebras</a></p>
<pre class=""lang-java prettyprint-override""><code>// evalExprF :: Algebra ExprF Int
// evalExprF (Const n) = n
// evalExprF (Add m n) = m + n
// evalExprF (Mul m n) = m * n
public static class ExprAlg implements Algebra&lt;Expr, Integer&gt; {
    @Override
    public Integer apply(H&lt;Expr, Integer&gt; hExpr) {
        return Expr.expr(hExpr).match(
            conzt -&gt; conzt.n,
            add   -&gt; add.t1 + add.t2,
            mul   -&gt; mul.t1 * mul.t2);
    }
}
</code></pre>
<p>Full working example in my <a href=""https://github.com/mduerig/java-functional"" rel=""nofollow noreferrer"">GitHub repository</a>.</p>
"
"70604058","1","ObjectMapper enable method is deprecated","<p>I'm upgrading the version of my project and I am currently using jackson-databind-2.13.0
.But I noticed that ObjectMapper's enable method is deprecated.</p>
<p>They said to use it like this instead.</p>
<pre><code>@deprecated Since 2.13 use {@code JsonMapper.builder().enable(...)}
</code></pre>
<p>But I couldn't use it.</p>
<p>Below is my ObjectMapper instance creation code. how can I change?</p>
<pre><code>      @Bean(name = {&quot;objectMapper&quot;})
      @Primary
      ObjectMapper objectMapper() {
        return newObjectMapper();
      }

  public static ObjectMapper newObjectMapper() {
    ObjectMapper objectMapper =
        new ObjectMapper()
            .disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)
            .configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false)
            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)
            .configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true)
            .setSerializationInclusion(JsonInclude.Include.NON_NULL)
            .enable(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES);
JavaTimeModule javaTimeModule = new JavaTimeModule();
javaTimeModule.addSerializer(OffsetDateTime.class, new OffsetDateTimeSerializer());
javaTimeModule.addDeserializer(OffsetDateTime.class, new OffsetDateTimeDeserializer());
javaTimeModule.addSerializer(LocalDate.class, new LocalDateSerializer());
javaTimeModule.addDeserializer(LocalDate.class, new LocalDateDeserializer());
objectMapper
    .registerModule(javaTimeModule)
    .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);

return objectMapper;
</code></pre>
<p>}</p>
<p>Solution:</p>
<pre><code>    ObjectMapper objectMapper = JsonMapper
    .builder()
    .enable(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES)
    .disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)
    .configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false)
    .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)
    .configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true)
    .serializationInclusion(Include.NON_NULL).build();
</code></pre>
","70605226","<p>I would suggest to rewrite your code to either</p>
<ol>
<li>Remove this bean and use a fully Spring Boot configured <code>ObjectMapper</code> (which has the name <code>jacksonObjectMapper</code>)</li>
<li>Use the <code>Jackson2ObjectMapperBuilder</code> to create an instance of the <code>ObjectMapper</code>.</li>
</ol>
<p>All of these solutions hide the intricate parts of constructing the <code>ObjectMapper</code> and will also put the burden of constructing it (properly) on the Spring Boot team, instead of you.</p>
<p>Now for option 1 you would need to remove your <code>@Bean</code> and place the following in your <code>application.properties</code>.</p>
<pre><code>spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false

spring.jackson.deserialization.FAIL_ON_UNKNOWN_PROPERTIES=false
spring.jackson.deserialization.ACCEPT_SINGLE_VALUE_AS_ARRAY=true

spring.jackson.mapper.ACCEPT_CASE_INSENSITIVE_PROPERTIES=true

spring.jackson.defaultPropertyInclusion=NON_NULL
</code></pre>
<p>When Spring (Boot) detects the <code>JavaTime</code> module on the classpath it will automatically be registered with the <code>ObjectMapper</code>, so no need to additionally add that (or the serializers for that matter).</p>
<p>These lines of configuration should you give the same configured <code>ObjectMapper</code> as your explicitly configured one. H</p>
<p>For the second option you can inject the <code>Jackson2ObjectMapperBuilder</code> into the method by using an argument, configure the things you want on there and call the <code>build</code> method in the end.</p>
<pre class=""lang-java prettyprint-override""><code>@Bean(name = {&quot;objectMapper&quot;})
@Primary
ObjectMapper objectMapper(Jackson2ObjectMapperBuilder builder) {
    return newObjectMapper(builder);
}

public static ObjectMapper newObjectMapper(Jackson2ObjectMapperBuilder builder) {
   return builder
            .serializationInclusion(NON_NULL)
            .failOnEmptyBeans(false)
            .failOnUnknownProperties(false)
           .featuresToEnable(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES, DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY)
           .featuresToDisable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)
.build();
</code></pre>
<p>You still don't need to register the <code>JavaTime</code> module as that is still being auto-detected for you.</p>
<p>In theory you could combine 1 and 2 but in your case that wouldn't add much, only some code to construct the <code>ObjectMapper</code>.</p>
<pre class=""lang-java prettyprint-override""><code>@Bean(name = {&quot;objectMapper&quot;})
@Primary
ObjectMapper objectMapper(Jackson2ObjectMapperBuilder builder) {
    return newObjectMapper(builder);
}

public static ObjectMapper newObjectMapper(Jackson2ObjectMapperBuilder builder) {
   return builder.build();
}
</code></pre>
"
"70692260","1","cvc-elt.1.a: Cannot find the declaration of element 'project'","<p>error: cvc-elt.1.a: Cannot find the declaration of element 'project'</p>
<p>I am getting this error constantly. Whenever I create a project using maven it starts displaying this error. I have even mentioned the 'maven-war-plugin' under plugin tag and then updated and refreshed the project as well.</p>
<pre><code>&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;
  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
  &lt;groupId&gt;com.myfirstmvcapp&lt;/groupId&gt;
  &lt;artifactId&gt;helloworldabc&lt;/artifactId&gt;
  &lt;packaging&gt;war&lt;/packaging&gt;
  &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
  &lt;name&gt;helloworldabc Maven Webapp&lt;/name&gt;
  &lt;url&gt;http://maven.apache.org&lt;/url&gt;
  &lt;dependencies&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;junit&lt;/groupId&gt;
      &lt;artifactId&gt;junit&lt;/artifactId&gt;
      &lt;version&gt;3.8.1&lt;/version&gt;
      &lt;scope&gt;test&lt;/scope&gt;
    &lt;/dependency&gt;
  &lt;/dependencies&gt;
  &lt;build&gt;
  &lt;plugins&gt;
  &lt;plugin&gt;
  &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
  &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;
  &lt;version&gt;3.3.1&lt;/version&gt;
  &lt;/plugin&gt;
  &lt;/plugins&gt;
    &lt;finalName&gt;helloworldabc&lt;/finalName&gt;
  &lt;/build&gt;
&lt;/project&gt;
</code></pre>
","70693979","<p>I have Found the Solution to this problem, Thanks to @M.Deinum who commented the solution below the question.</p>
<p>All I did was add https to the link in the tag, instead of http.</p>
<p>here is the previous code:</p>
<pre><code>&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;
  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
  &lt;groupId&gt;com.myfirstmvcapp&lt;/groupId&gt;
  &lt;artifactId&gt;helloworldabc&lt;/artifactId&gt;
  &lt;packaging&gt;war&lt;/packaging&gt;
  &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
  &lt;name&gt;helloworldabc Maven Webapp&lt;/name&gt;
  &lt;url&gt;http://maven.apache.org&lt;/url&gt;
  &lt;dependencies&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;junit&lt;/groupId&gt;
      &lt;artifactId&gt;junit&lt;/artifactId&gt;
      &lt;version&gt;3.8.1&lt;/version&gt;
      &lt;scope&gt;test&lt;/scope&gt;
    &lt;/dependency&gt;
  &lt;/dependencies&gt;
  &lt;build&gt;
  &lt;plugins&gt;
  &lt;plugin&gt;
  &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
  &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;
  &lt;version&gt;3.3.1&lt;/version&gt;
  &lt;/plugin&gt;
  &lt;/plugins&gt;
    &lt;finalName&gt;helloworldabc&lt;/finalName&gt;
  &lt;/build&gt;
&lt;/project&gt;
</code></pre>
<p>Here is the lastest code, all that is needed is to add https instead of http to the xsd link in the last link of project tag.</p>
<pre><code>&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;
  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
  &lt;groupId&gt;com.myfirstmvcapp&lt;/groupId&gt;
  &lt;artifactId&gt;helloworldabc&lt;/artifactId&gt;
  &lt;packaging&gt;war&lt;/packaging&gt;
  &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
  &lt;name&gt;helloworldabc Maven Webapp&lt;/name&gt;
  &lt;url&gt;http://maven.apache.org&lt;/url&gt;
  &lt;dependencies&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;junit&lt;/groupId&gt;
      &lt;artifactId&gt;junit&lt;/artifactId&gt;
      &lt;version&gt;3.8.1&lt;/version&gt;
      &lt;scope&gt;test&lt;/scope&gt;
    &lt;/dependency&gt;
  &lt;/dependencies&gt;
  &lt;build&gt;
  &lt;plugins&gt;
  &lt;plugin&gt;
  &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
  &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;
  &lt;version&gt;3.3.1&lt;/version&gt;
  &lt;/plugin&gt;
  &lt;/plugins&gt;
    &lt;finalName&gt;helloworldabc&lt;/finalName&gt;
  &lt;/build&gt;
&lt;/project&gt;
</code></pre>
"
"70568676","1","Arrange array so adjacent has less space that gives minimum sum","<p>I have an array of numbers with even size, here is my task:</p>
<p>a) Discard any 2 elements from the array.
b) Then pair the elements and calculate the sum of differences between the elements in the pair such that the sum is minimum.</p>
<p><strong>Example:</strong></p>
<pre><code>array size even say 8.
array elements : 1,3,4,6,3,4,100,200

Ans:
5
</code></pre>
<p><strong>Explanation:</strong></p>
<blockquote>
<p>Here I will remove 100 and 200, as pairing them gives me a difference of (200 - 100) = 100.
So remaining elements are [1,3,4,6,3,4]
Pairs with minimum sum are : (1 3) , (4 3), (6 4).
= |3-1| = 2, |4-3|=1,|6-4| = 2. So Sum = 2 + 1 + 2 = 5</p>
</blockquote>
<p><strong>Example:</strong></p>
<pre><code>array size even say 4.
array elements : 1,50,51,60

Ans:
1
</code></pre>
<p><strong>Explanation</strong>: Here I will remove 1 and 60 so I will get the minimum sum.
So the remaining elements are [50, 51], same as the adjacent   [50 51] = 1. My code will fail for this case and returns 49.</p>
<p>How to achieve this in java?</p>
<p>I tried sorting the elements like this but this is not the correct approach for all kinds of inputs.</p>
<pre><code>public static int process(int[] a) {
   int n = a.length;
   int n1 = n/2-1;
   Arrays.sort(arr);
   int sum = 0;
   for(int i=0; i&lt;n1*2; i+=2) {
     sum += a[i+1] - a[i];
   }
   return sum;
}
</code></pre>
","70622902","<p>In this kind of problem, the real issue is to find a good algorithm.<br />
this post will insists on this aspect. A C++ code is provided at the end just to illustrate it.</p>
<p>It is clear we must begin by sorting the array.<br />
A solution consists in iteratively calculate three sums, where</p>
<pre><code>sum0 is the minimum sum assuming no element has been removed
sum1 is the minimum sum assuming one element has been removed
sum2 is the minimum sum assuming two elements has been removed
</code></pre>
<p>During this process, the code must keep trace of the last element available to calculate a difference,
one for each sum (<code>i_dispo0, i_dispo1, i_dispo2</code>).</p>
<p>Principles:</p>
<pre><code>- if sum1 &gt; sum0: sum1 is replaced by sum0
- if sum2 &gt; sum1: sum2 is replaced by sum1
</code></pre>
<p><strong>Complexity:</strong> <code>O(n logn)</code>for sorting, <code>O(n)</code> for the optimization phase.</p>
<p><strong>Code:</strong></p>
<p>The algorithm is illustrated by the following simple code in C++.<br />
It should be easy to understand.</p>
<p><em>Output:</em>
5
1
2
0
2</p>
<pre class=""lang-cpp prettyprint-override""><code>#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;algorithm&gt;

int min_sum_diff (std::vector&lt;int&gt;&amp; arr) {
    int n = arr.size();
    if (n%2) exit (1);
    std::sort (arr.begin(), arr.end());
    int sum0 = 0, sum1 = arr[n-1] - arr[0] + 1, sum2 = arr[n-1] - arr[0] + 1;
    int i_dispo0 = -1, i_dispo1 = -1, i_dispo2 = -1;
    for (int i = 0; i &lt; n; ++i) {
        int sum0_old = sum0;
        int sum1_old = sum1;
        if (i_dispo0 == -1) {
            i_dispo0 = i;
        } else {
            sum0 += arr[i] - arr[i_dispo0];
            i_dispo0 = -1;
        }
        if (i_dispo1 == -1) {
            i_dispo1 = i;
        } else {
            int add = arr[i] - arr[i_dispo1];
            if (sum0_old &lt; sum1 + add) {
                sum1 = sum0_old;
                i_dispo1 = i;
            } else {
                sum1 += add;
                i_dispo1 = -1;
            }
        }
        if (i_dispo2 == -1) {
            i_dispo2 = i;
        } else {
            sum2 += arr[i] - arr[i_dispo2];
            i_dispo2 = -1;
        }
        
        if (sum2 &gt; sum1_old) {
            sum2 = sum1_old;
            i_dispo2 = i;
        }
        //std::cout &lt;&lt; i &lt;&lt; &quot; : &quot; &lt;&lt; sum0 &lt;&lt; &quot;  &quot; &lt;&lt; sum1 &lt;&lt; &quot;  &quot; &lt;&lt; sum2 &lt;&lt; '\n';
    }
    return sum2;
}

int main() {
    std::vector&lt;std::vector&lt;int&gt;&gt; examples = {
        {1, 3, 4, 6, 3, 4, 100, 200},   // -&gt; 5
        {1, 50, 51, 60},                // -&gt; 1
        {1,2,100,200,400,401},          // -&gt; 2
        {1, 10, 10, 20, 30, 30},        // -&gt; 0
        {1, 10, 11, 20, 30, 31}         // -&gt; 2
    };
    for (std::vector&lt;int&gt;&amp; arr: examples) {
        int sum = min_sum_diff (arr);
        std::cout &lt;&lt; sum &lt;&lt; '\n';
    }
    return 0;
}
</code></pre>
"
"70654559","1","How to give certificate to Java Websocket?","<p>Forgive me for the newb question, but I am confused and obviously not understanding the fundamentals or explanations of how to use a Websocket server hosted over <code>HTTPS</code>. Everything I find online leads me to have more questions than answers.</p>
<p>I have a Websocket server hosted on my <code>HTTPS</code> website using Java code.</p>
<p>This is my <code>WebsocketServer.java</code> file:</p>
<pre><code>import org.java_websocket.WebSocket;
import org.java_websocket.handshake.ClientHandshake;
import org.java_websocket.server.WebSocketServer;

import java.net.InetSocketAddress;
import java.util.HashSet;
import java.util.Set;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

public class WebsocketServer extends WebSocketServer {

    private static final Logger logger = LogManager.getLogger(WebsocketServer.class);

    private static int TCP_PORT = 6868;

    private static Set&lt;WebSocket&gt; conns;

    public WebsocketServer() {
        super(new InetSocketAddress(TCP_PORT));
        conns = new HashSet&lt;&gt;();
    }

    @Override
    public void onOpen(WebSocket conn, ClientHandshake handshake) {
        conns.add(conn);
        logger.info(&quot;New connection from &quot; + conn.getRemoteSocketAddress().getAddress().getHostAddress());
        logger.info(&quot;Size of connection list: &quot; + conns.size());
    }

    @Override
    public void onClose(WebSocket conn, int code, String reason, boolean remote) {
        conns.remove(conn);
        logger.info(&quot;Closed connection to &quot; + conn.getRemoteSocketAddress().getAddress().getHostAddress());
    }

    @Override
    public void onMessage(WebSocket conn, String message) {
        logger.info(&quot;Message from client: {}&quot;, message);
        // for (WebSocket sock : conns) {
        // sock.send(&quot;SENDING BACK&quot; + message);
        // }
    }

    @Override
    public void onError(WebSocket conn, Exception ex) {

        // ex.printStackTrace();
        try {
            if (conn != null) {
                conns.remove(conn);
                // do some thing if required
            }
            logger.info(&quot;ERROR from {}&quot;, conn.getRemoteSocketAddress().getAddress().getHostAddress());
        } catch (Exception e) {
            logger.info(&quot;onError: WebSocketServer may already be running&quot;);

        }

    }

    public Set&lt;WebSocket&gt; getConns() {
        return conns;
    }

}

</code></pre>
<p>Then I started the <code>WebsocketServer</code> like this:</p>
<pre><code>WebsocketServer websocketServer;
// Start socket server
websocketServer = new WebsocketServer();
websocketServer.start();
</code></pre>
<p>And on the client side, I connect to it like this:</p>
<pre><code>    // APP_WEB_SOCKET is the url to my site: api.my_custom_domain.com
    var connection = new WebSocket(&quot;wss://&quot; + APP_WEB_SOCKET + &quot;:6868&quot;);
</code></pre>
<p><strong>QUESTIONS:</strong>
I keep reading that I need a certificate if I want to use <code>wss</code> over <code>HTTPS</code>, but cannot find any documents that explain what this means in a way that I can understand.</p>
<p>My app is hosted in AWS Elastic Beanstalk environment. Do I need to somehow add a certificate to the setup of the <code>WebsocketServer</code> in my Java code?
Example:</p>
<pre><code>WebsocketServer websocketServer;
// Start socket server
websocketServer = new WebsocketServer();

// example guessing
websocketServer.cert = &quot;SOMETHING&quot;;??
websocketServer.start();
</code></pre>
<p>Does the client code need to be changed at all?</p>
<p>Who needs the certificate?</p>
<p>If someone could please explain what I am missing or point me in the correct direction, I would really appreciate it.</p>
","70698577","<p>Keep it easy.<br />
Certs inside your application are complex - they are hard to manage and you will get problems to run your application in a modern cloud environment (start new environments, renew certs, scale your application, ...).</p>
<p>Simple conclusion: <strong>Dont implement any certs.</strong></p>
<h2>How-to get encrypted connections?</h2>
<p>As Mike already pointed out in the comments: WebSockets are just upgraded HTTP(S) connections. A normal webserver (nginx, apache) takes care about the certs. It can be done in kubernetes (as ingress-controller) or with a &quot;bare-metal&quot; webserver.<br />
Both of them should act as a reverse-proxy. This means: Your java-application doesn't know anything about certs. It has just unencrypted connections - like in your code on port <code>6868</code>.<br />
But the client will not use this port. <code>6868</code> is only internally reachable.</p>
<p>The client will call your reverse-proxy at the normal HTTPS port (=443). The reverse-proxy will forward the connection to your java-application.</p>
<p>Here some links for further information:</p>
<ul>
<li><a href=""https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/"" rel=""nofollow noreferrer"">nginx reverse-proxy</a></li>
<li><a href=""https://www.nginx.com/blog/websocket-nginx/"" rel=""nofollow noreferrer"">nginx reverse-proxy for websocket</a></li>
<li><a href=""https://medium.com/@mirela95/apache-http-server-as-reverse-proxy-with-java-back-end-application-running-on-tomcat-9c8c9210783e"" rel=""nofollow noreferrer"">tutorial for java behind reverse-proxy</a></li>
<li><a href=""https://letsencrypt.org/getting-started/"" rel=""nofollow noreferrer"">LetsEncrypt for automatic and free certs</a></li>
</ul>
"
"70695039","1","org.h2.jdbc.JdbcSQLSyntaxErrorException after H2 version upgrade","<p>I recently upgraded h2 version from 1.4.200 to 2.0.206. Some of the queries that used to work in the older version are not working properly after the upgrade.</p>
<pre class=""lang-sql prettyprint-override""><code>CREATE TABLE SOMETABLE (
  ID INT(11) NOT NULL AUTO_INCREMENT,
  SOURCE_ID VARCHAR(255) NOT NULL,
  MESSAGE VARCHAR(255) NOT NULL,
  PRIMARY KEY (`ID`)
);
</code></pre>
<pre class=""lang-sql prettyprint-override""><code>CREATE TABLE IF NOT EXISTS SOMEOTHERTABLE (
    ID VARCHAR(255) NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    CREATED_TIME TIMESTAMP NOT NULL,
    LAST_MODIFIED TIMESTAMP NOT NULL,
    HAS_FILE BOOLEAN(1) NOT NULL,
    PRIMARY KEY (ID)
);
</code></pre>
<p>For both these, I get similar errors</p>
<pre><code>org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement &quot;  CREATE TABLE SOMETABLE ( ID INT([*]11) NOT NULL AUTO_INCREMENT, SOURCE_ID VARCHAR(255) NOT NULL, MESSAGE VARCHAR(255) NOT NULL, PRIMARY KEY (`ID`) )&quot;; expected &quot;ARRAY, INVISIBLE, VISIBLE, NOT, NULL, AS, DEFAULT, GENERATED, ON, NOT, NULL, AUTO_INCREMENT, DEFAULT, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, AUTO_INCREMENT, ., )&quot;;
</code></pre>
<pre><code>org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement &quot;  CREATE TABLE IF NOT EXISTS SOMEOTHERTABLE ( ID VARCHAR(255) NOT NULL, NAME VARCHAR(255) NOT NULL, CREATED_TIME TIMESTAMP NOT NULL, LAST_MODIFIED TIMESTAMP NOT NULL, HAS_FILE BOOLEAN([*]1) NOT NULL, PRIMARY KEY (ID) )&quot;; expected &quot;ARRAY, INVISIBLE, VISIBLE, NOT, NULL, AS, DEFAULT, GENERATED, ON, NOT, NULL, AUTO_INCREMENT, DEFAULT, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, AUTO_INCREMENT, ., )&quot;;
</code></pre>
<p>It seems that in both these cases, having <code>INT(11)</code> and <code>BOOLEAN(1)</code> is the issue. Are those not allowed anymore in the new version? If so, how should I change those? Any help regarding this is appreciated.</p>
","70696184","<p>Why do you have such definitions? Documentation of H2 1.4.200 doesn't allow any parameters for these data types.</p>
<p><code>INT(11)</code> is allowed only in MySQL and MariaDB compatibility modes, but the specified precision is ignored by H2. This definition is rejected in all other compatibility modes in H2 2.0, you need to use <code>INT</code> or <code>INTEGER</code>.</p>
<p><code>BOOLEAN(1)</code> is not allowed at all, if it worked in 1.4.200, it was a bug in the parser. You need to use <code>BOOLEAN</code>.</p>
<p><code>AUTO_INCREMENT</code> clause also should normally be used only in MySQL and MariaDB compatibility modes, but it works in Regular mode too. The proper clause is <code>GENERATED BY DEFAULT AS IDENTITY</code> and explicit <code>NOT NULL</code> constraint isn't required for primary key and identity columns, you can remove it. Constraints also should normally be specified after all other clauses, <code>NOT NULL</code> before identity options is actually accepted by H2, but this wrong order of clauses isn't documented and isn't supported.</p>
"
"70570084","1","Code reuse: returning lists of enum fields with common getter methods","<p>I have two enums:</p>
<h3>Main Menu Options</h3>
<pre><code>public enum MainMenuOptions {
    
    EXIT(&quot;Exit&quot;),
    VIEW_RESERVATIONS(&quot;View Reservations By Host&quot;),
    CREATE_RESERVATION(&quot;Create A Reservation&quot;),
    EDIT_RESERVATION(&quot;Edit A Reservation&quot;),
    CANCEL_RESERVATION(&quot;Cancel A Reservation&quot;);
    
    private final String message;
    
    MainMenuOptions(String message) {
        this.message = message;
    }
    
    public String getMessage() {
        return message;
    }
    
    public static List&lt;String&gt; asListString() {
        return Arrays.stream(MainMenuOptions.values())
                .map(MainMenuOptions::getMessage)
                .collect(Collectors.toList());
    }
}
</code></pre>
<h3>Host Selection Method Options</h3>
<pre><code>public enum HostSelectionMethodOptions {
    
    FIND_ALL(&quot;Find all&quot;),
    FIND_BY_LASTNAME_PREFIX(&quot;Find by last name prefix&quot;),
    FIND_BY_CITY_STATE(&quot;Find by city &amp; state&quot;);
    
    String message;
    
    HostSelectionMethod(String message) {
        this.message = message;
    }
    
    public String getMessage() {
        return message;
    }
    
    public static List&lt;String&gt; asListString() {
        return Arrays.stream(HostSelectionMethod.values())
                .map(HostSelectionMethod::getMessage)
                .collect(Collectors.toList());
    }
}
</code></pre>
<p>Both enums share the same field</p>
<pre><code>private final String message;
</code></pre>
<p>The same getter</p>
<pre><code>public String getMessage() {
    return message;
}
</code></pre>
<p>And the same asListString() method</p>
<pre><code>public static List&lt;String&gt; asListString() {
    return Arrays.stream(MainMenuOptions.values())
            .map(MainMenuOptions::getMessage)
            .collect(Collectors.toList());
}
</code></pre>
<h3>How can I DRY out these enums?</h3>
<p>I expect to have more enums with the same fields and methods, and it seems silly to write out the same thing over and over again for each one.</p>
<ul>
<li>I tried making both of the enums extend a superclass, but enums cannot have extends clauses</li>
<li>I can create an interface that specifies the contract for the asListString() method, but that doesn't allow me to actually reuse any code.</li>
</ul>
<p>The flavor I was hoping the code could have is something like this:</p>
<pre><code>public class Utils {
    
    public static List&lt;String&gt; enumAsListString(Enum e) {
        return e.values().stream.map(e::getMessage).collect(Collectors.toList());
    }
}
</code></pre>
","70570794","<p>This is probably one of the cases where you need to pick one between being DRY and using enums.</p>
<p>Enums don't go very far as far as code reuse is concerned, in Java at least; and the main reason for this is that primary benefits of using enums are reaped in static code - I mean <em>static</em> as in &quot;not dynamic&quot;/&quot;runtime&quot;, rather than <code>static</code> :). Although you can &quot;reduce&quot; code duplication, you can hardly do much of that without introducing dependency (yes, that applies to adding a common API/interface, extracting the implementation of <code>asListString</code> to a utility class). And that's still an undesirable trade-off.</p>
<p>Furthermore, if you <strong>must</strong> use an enum (for such reasons as built-in support for serialization, database mapping, JSON binding, or, well, because it's data enumeration, etc.), you have no choice but to duplicate method declarations to an extent, even if you can share the implementation: static methods just can't be inherited, and interface methods (of which <code>getMessage</code> would be one) shall need an implementation everywhere. I mean this way of being &quot;DRY&quot; will have many ways of being inelegant.</p>
<p>If I were you, I would simply make this data completely dynamic</p>
<pre><code>final class MenuOption {
    private final String category; //MAIN_MENU, HOT_SELECTION
    private final String message; //Exit, View Reservation By Host, etc.
    public static MenuOption of(String key, String message) {
        return new MenuOption(key, message);
    }
}
</code></pre>
<p>This is very scalable, although it introduces the need to validate data where enums would statically prevent bad options, and possibly custom code where an enum would offer built-in support.</p>
<p>It can be improved with a &quot;category&quot; enum, which gives static access to menu lists, and a single place for <code>asListString()</code>:</p>
<pre><code>enum MenuCategory {
    MAIN_MENU(
        MenuOption.of(&quot;Exit&quot;), 
        MenuOption.of(&quot;View Reservations By Host&quot;)
    ),
    HOT_SELECTION(
        MenuOption.of(&quot;Find All&quot;)
    );
    
    private final List&lt;MenuOption&gt; menuOptions;
    
    MenuCategory(MenuOption... options) {
        this.menuOptions = List.of(options); //unmodifiable
    }
    
    public List&lt;String&gt;asListString() {
        return this.menuOptions.stream()
                   .map(MenuOption::getMessage)
                   .collect(Collectors.toList());
    }
}
</code></pre>
<p>It should be clear that you can replace <code>class MenuOption</code> with a bunch of enums implementing a common interface, which should change little to nothing in <code>MenuCategory</code>. I wouldn't do that, but it's an option.</p>
"
"70686277","1","ERROR No qualifying bean of type 'org.springframework.security.oauth2.jwt.JwtDecoder' available","<p>I am trying to write a test for my controller but the test environment fails to load with the given stackTrace.</p>
<pre><code>    @PreAuthorize(&quot;hasAuthority('my.scope')&quot;)
    @GetMapping(value = &quot;/path&quot;, produces = APPLICATION_JSON_VALUE)
    public ResponseEntity&lt;Map&lt;String, Set&lt;String&gt;&gt;&gt; getPath() {
        return myService.pathFunction()
            .map(ResponseEntity::ok);
    }
</code></pre>
<p>and following is how I've configured my security config</p>
<pre><code>@Configuration
@EnableWebSecurity
@EnableGlobalMethodSecurity(securedEnabled = true, prePostEnabled = true)
public class WebConfig extends WebSecurityConfigurerAdapter {

    private static final String PRINCIPAL = &quot;sub&quot;;

    @Override
    protected void configure(HttpSecurity http) throws Exception {

        JwtAuthenticationConverter authenticationConverter =
            new JwtAuthenticationConverter();
        authenticationConverter.setJwtGrantedAuthoritiesConverter(...);
        authenticationConverter.setPrincipalClaimName(PRINCIPAL);

        http.csrf().disable()
            .cors()
            .and()
            .authorizeRequests().antMatchers(&quot;/actuator/**&quot;).permitAll()
            .anyRequest().authenticated()
            .and()
            .oauth2ResourceServer()
            .jwt()
            .jwtAuthenticationConverter(authenticationConverter);
    }
}
</code></pre>
<p><strong>The controller is working as needed but my test fails with this error. I am not using any customer JwtDecoder</strong></p>
<pre><code>@WebMvcTest(controllers = Controller.class)
class ControllerTest {

    @MockBean
    private MyService myService;

    @Autowired
    private MockMvc mockMvc;

    @Test
    @WithMockUser(authorities = {&quot;my.scope&quot;})
    void controllerTest() throws Exception{
        Map&lt;String, Set&lt;String&gt;&gt; mapResponse = Map.of(&quot;key&quot;, Set.of(&quot;foo1&quot;, &quot;foo2&quot;));
        Mockito.when(myService.pathFunction()).thenReturn(Optional.of(mapResponse));

        MockHttpServletResponse result = mockMvc.perform(get(&quot;/configuration/api-registry&quot;)
                .contentType(MediaType.APPLICATION_JSON))
            .andExpect(status().isOk())
            .andReturn()
            .getResponse();

        String response = result.getContentAsString();
        assertTrue(response.contains(&quot;foo1&quot;));
    }

}
</code></pre>
<p>How do I run this test ?</p>
<pre><code>java.lang.IllegalStateException: Failed to load ApplicationContext

Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springSecurityFilterChain' defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.security.oauth2.jwt.JwtDecoder' available
    ...
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.servlet.Filter]: Factory method 'springSecurityFilterChain' threw exception; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.security.oauth2.jwt.JwtDecoder' available
    at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
    at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
    ... 90 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.security.oauth2.jwt.JwtDecoder' available
    at ...
</code></pre>
","70694659","<p>I added mocking the decoder in the test as</p>
<pre><code>@MockBean
private JwtDecoder jwtDecoder;
</code></pre>
<p>and the test ran !</p>
"
"70702544","1","Why do I get an ambiguity error in this code?","<p>Let's say we have these 3 classes:</p>
<pre><code>class A { }
class B extends A { }

public class App {
    static void f(int i, A a) { }
    static void f(float j, B b) { }
   
    static public void main() {
        int i = 0;
        B b = new B();
        App.f(i, b);
    }
}
</code></pre>
<p>This produces the error:</p>
<pre class=""lang-none prettyprint-override""><code>App.java:11: error: reference to f is ambiguous
        App.f(i, b);
           ^
  both method f(int,A) in App and method f(float,B) in App match
1 error
</code></pre>
<p>Why does it not choose the type <code>f(int, A)</code> since <code>i</code> is an integer?</p>
","70702914","<p>It is ambiguous because of two reasons:</p>
<ul>
<li>both overloads are <em>applicable</em>, and;</li>
<li>neither overload is <em>more specific</em> than the other</li>
</ul>
<p>Notice that both the <code>f(int, A)</code> overload and the <code>f(float, B)</code> overload can be called with the parameters <code>(i, b)</code>, since there is an implicit conversion from <code>int</code> to <code>float</code>, and an implicit conversion from <code>B</code> to <code>A</code>.</p>
<p>What happens when there are more than one applicable method? Java is supposed to choose the most specific method. This is described in <a href=""https://docs.oracle.com/javase/specs/jls/se17/html/jls-15.html#jls-15.12.2.5"" rel=""noreferrer"">§15.12.2.5</a> of the language spec. It turns out that it is not the case that one of these overloads are more specific than the other.</p>
<blockquote>
<p>One applicable method m1 is more specific than another applicable
method m2, for an invocation with argument expressions e1, ..., ek, if
any of the following are true:</p>
<ul>
<li><p>m2 is generic [...]</p>
</li>
<li><p>m2 is not generic, and m1 and m2 are applicable by strict or loose invocation, and where m1 has formal parameter types S1, ..., Sn and m2
has formal parameter types T1, ..., Tn, the type Si is more specific
than Ti for argument ei for all i (1 ≤ i ≤ n, n = k).</p>
</li>
<li><p>m2 is not generic, and m1 and m2 are applicable by variable arity invocation [...]</p>
</li>
</ul>
</blockquote>
<p>Only the second point applies to the two overloads of <code>f</code>. For one of the overloads to be more specific than the other, <strong>every parameter type of one overload has to be more specific than the corresponding parameter type in the other overload.</strong></p>
<blockquote>
<p>A type S is more specific than a type T for any expression if S &lt;: T (<a href=""https://docs.oracle.com/javase/specs/jls/se17/html/jls-4.html#jls-4.10"" rel=""noreferrer"">§4.10</a>).</p>
</blockquote>
<p>Note that&quot;&lt;:&quot; is the subtyping relationship. <code>B</code> is clearly a subtype of <code>A</code>. <code>float</code> is actually a supertype (not subtype!) of <code>int</code>. This can be derived from the direct subtyping relations listed in <a href=""https://docs.oracle.com/javase/specs/jls/se17/html/jls-4.html#jls-4.10.1"" rel=""noreferrer"">§4.10.1</a>. Therefore, neither of the overloads is more specific than the other.</p>
<p>The language spec goes on to talk about <em>maximally specific</em> methods, which doesn't really apply to <code>f</code> here. Finally, it says:</p>
<blockquote>
<p><strong>Otherwise, the method invocation is ambiguous, and a compile-time error occurs.</strong></p>
</blockquote>
<h3>More Examples</h3>
<pre><code>static void f(int x) {}
static void f(float x) {}
</code></pre>
<p>when called with an <code>int</code> are not ambiguous because the <code>int</code> overload is more specific.</p>
<pre><code>static void f(int x, B a) {}
static void f(float x, A a) {}
</code></pre>
<p>when called with argument types <code>(int, A)</code> are not ambiguous because the <code>(int, B)</code> overload is more specific.</p>
<pre><code>static void f(int x, A a) {}
static void f(float x, A a) {}
</code></pre>
<p>when called with argument types<code>(int, A)</code> are not ambiguous because the <code>(int, A)</code> overload is more specific. Note that the subtyping relationship is reflexive (i.e. <code>A</code> is a subtype of <code>A</code>).</p>
"
"70860253","1","Java map function throws non-static method compiler error","<p>I have an odd problem, where I am struggling to understand the nature of &quot;static context&quot; in Java, despite the numerous SO questions regarding the topic.</p>
<p><strong>TL;DR:</strong></p>
<p>I have a design flaw, where ...</p>
<p><strong>This works:</strong></p>
<pre><code>List&lt;OrderExtnTrans&gt; list = orderType.getOrderExtnTransList();
this.dtoOrderExtnTransList = list.stream().map(OrderExtnTrans::toDto).collect(Collectors.toList());
</code></pre>
<p><strong>But this does not:</strong></p>
<pre><code>this.dtoOrderExtnTransList = orderType.getOrderExtnTransList().stream().map(OrderExtnTrans::toDto).collect(Collectors.toList());
</code></pre>
<p><a href=""https://i.stack.imgur.com/cEY1t.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/cEY1t.png"" alt=""Issue"" /></a>
The error shown in the second version is &quot;Non-static method cannot be referenced from a static context&quot;.</p>
<p><strong>The long version:</strong></p>
<p>Object Model:
The model consists of Business Type specific orders (eg. Stock exchange, payments), which inherit from a an order entity via an &quot;InheritanceType.JOINED&quot; inheritance strategy.
The parent order can be parameterized with the business type specific DTO object of that order, so for example DtoStockExchangeOrder. This is to enable, that JPA objects can be mapped to their DTO equivalent within the Entity, rather than in a service (which I did previously. It worked, but its &quot;less clean&quot;).</p>
<p><strong>JPA Order:</strong></p>
<pre><code>@Entity
@Table(name = &quot;ORDER_BASE&quot;)
@Inheritance(strategy = InheritanceType.JOINED)
public class Order&lt;DtoOrderType extends DtoOrder&gt; implements Serializable {

    @OneToMany(fetch = FetchType.LAZY, mappedBy = &quot;order&quot;, orphanRemoval = true)
    private List&lt;OrderExtnTrans&gt; orderExtnTransList = new ArrayList&lt;&gt;();

}
</code></pre>
<p><strong>JPA Order - Business Type specific example:</strong></p>
<pre><code>@Entity
@Table(name = &quot;ORDER_STEX&quot;)
@Inheritance(strategy = InheritanceType.JOINED)
public class OrderStex extends Order&lt;DtoOrderStex&gt; implements Serializable {
</code></pre>
<p>Likewise, DTO orders follow the same pattern, where they can be parameterized with the business type specific JPA entity, to enable the relevant mapping:</p>
<p><strong>DTO Order:</strong></p>
<pre><code>public class DtoOrder&lt;OrderType extends Order&gt; extends DtoEntity {
</code></pre>
<p><strong>DTO Order - Business Type Specific Example</strong></p>
<pre><code>public class DtoOrderStex extends DtoOrder&lt;OrderStex&gt; {
</code></pre>
<p>The DTOEntity class it inherits from is just a &quot;wrapper&quot; class, consisting of an ID and a name.</p>
<p>Now the tricky part:
The DTOOrder class has a constructor which populates the fields that are common to all business types, like the list of process status transitions, an order goes through in its life cycle (placed, cancelled, executed, etc..). Staying with the example of the process status transitions, these are also modelled as JPA entities in the database, with their corresponding DTO counterparts (likewise parameterized, that part works fine).</p>
<p>Here the constructor:</p>
<pre><code>public DtoOrder(OrderType orderType) {
    super(orderType);
    // this is the part from above, which works (but it shows a warning: Unchecked assignment: 'java.util.List' to 'java.util.List&lt;com.tradingvessel.core.persistence.model.OrderExtnTrans&gt;' )
    List&lt;OrderExtnTrans&gt; list = orderType.getOrderExtnTransList();
    this.dtoOrderExtnTransList = list.stream().map(OrderExtnTrans::toDto).collect(Collectors.toList());
    // this is how I would have expected it to work, but it does not, with the error shown above: &quot;Non-static method cannot be referenced from a static context&quot;
    this.dtoOrderExtnTransList = orderType.getOrderExtnTransList().stream().map(OrderExtnTrans::toDto).collect(Collectors.toList());
}
</code></pre>
<p>If I comment out the non-working version, the application behaves as expected and throws no error, so &quot;logically&quot;, this works. But JAVA does not allow it as developed in the second version.</p>
<p>If instead of OrderType I use &quot;Order&quot;, it works as well, but obviously throws errors elsewhere, because the signature of the constructor changed. I assume another approach would be to parameterise the method based on the the caller of the constructor or to parameterise the parent class DtoOrder to know the type of the child class, but there should be a better way?</p>
<p>What am I doing wrong, and why does the upper version work as expected?</p>
","70873247","<p>Thanks for an interesting question, that shows some unexpected behaviour, that is behaving according to spec.</p>
<p>TL;DR (ie, the correct way of quickly and easily fixing this) is to add the <strong>&lt;?&gt;</strong> generic wildcard to Order in the DtoOrder class declaration, so :</p>
<pre><code>public class DtoOrder&lt;OrderType extends Order&lt;?&gt;&gt; extends DtoEntity {
</code></pre>
<p>This will make the all-in-one-line way in the constructor work ​:</p>
<pre><code>​this.dtoOrderExtnTransList = orderType.getOrderExtnTransList().stream().map(OrderExtnTrans::toDto).collect(Collectors.toList());
</code></pre>
<p>As for why this is the fix, this is because you have defined Order as a Generic type :</p>
<pre><code>public class Order&lt;DtoOrderType extends DtoOrder&gt; 
</code></pre>
<p>By NOT specifying the generic type, you are declaring it (and therefore making <code>OrderType</code> as well) as a <strong>raw-type</strong>.</p>
<p>Generally we are used to <code>List&lt;SomeType&gt;</code> being generic, that at run-time undergoes type-erasure.  Further, that if we have old code like :</p>
<pre><code>List myRawTypeVariable = new ArrayList();
</code></pre>
<p>that <code>myRawType</code> is a raw type, in that we can add any <code>Object</code> and only get <code>Object</code>s out.</p>
<p>However, it turns out that (as you have discovered) raw types go further than that, and type-erasure has compile-time implications as well.</p>
<p>The Java Language Specification (JLS) says this (source : <a href=""https://docs.oracle.com/javase/specs/jls/se8/html/jls-4.html#jls-4.8"" rel=""nofollow noreferrer"">https://docs.oracle.com/javase/specs/jls/se8/html/jls-4.html#jls-4.8</a> )</p>
<blockquote>
<p>The type of a constructor (§8.8), instance method (§8.4, §9.4), or
non-static field (§8.3) of a raw type C that is not inherited from its
superclasses or superinterfaces is the raw type that corresponds to
the erasure of its type in the generic declaration corresponding to C.</p>
</blockquote>
<p>Note that this is NOT limiting type erasure to ONLY those of the generic type;  The types of ALL instance methods get taken to their raw types !</p>
<p>In other words, by not specifying the generic type of <code>Order</code>, you are making <code>Order</code> a raw type - and therefore turning off all Generic type-checking for that class (except for methods, etc otherwise specified, from inheritance or interfaces).</p>
<p>So even though <code>getOrderExtnTransList()</code> is declared as returning a <code>List&lt;String&gt;</code>, because you are using <code>Order</code> as a raw-type, it's dropping the <code>&lt;String&gt;</code> generic and treating that method as simply returning a <code>List</code> (effectively a <code>List&lt;Object&gt;</code> ).</p>
<p>You can confirm this by trying to insert a <code>peek</code>, so :</p>
<pre><code>   ​this.dtoOrderExtnTransList = orderType.getOrderExtnTransList().stream().peek(s -&gt; s.
</code></pre>
<p>then try to do an auto-complete.   You'll find that the options are only the members for <code>Object</code>, not the <code>endsWith</code>, etc members for <code>String</code>.</p>
<p>This, in turn, means that when it hits <code>.map(OrderExtnTrans::toDto)</code>, instead of interpreting this for a <code>OrderExtnTrans</code> coming down the stream :</p>
<pre><code> `.map(o -&gt; o.toDto())`, 
</code></pre>
<p>it thinks you mean</p>
<pre><code>  `.map(o -&gt; OrderExtnTrans.toDto(o))` 
</code></pre>
<p>which is what is appropriate for an <code>Object</code> coming down the stream - and that is why it complains about <code>toDto</code> being a non-static method.</p>
<p>As stated, the solution is to simply not treat <code>Order</code> as a raw-type, instead to make it generic by adding the &lt;?&gt; as above.</p>
"
"70667172","1","PortUnreachableExceptions spamming log after updating Spring Boot Parent","<p>After upgrading from <code>spring-boot-parent</code> version 2.5.5 to 2.6.0, I started seeing these error messages spamming the logs:</p>
<p><code>[INFO] [stdout] 2022-01-11 13:40:01.157  WARN 76859 --- [    udp-epoll-2] i.m.s.reactor.netty.channel.FluxReceive  : [6d1243de, L:/127.0.0.1:58160 - R:localhost/127.0.0.1:8125] An exception has been observed post termination, use DEBUG level to see the full stack: java.net.PortUnreachableException: readAddress(..) failed: Connection refused</code></p>
<p>Using DEBUG level:</p>
<pre><code>[INFO] [stdout] 2022-01-11 13:38:29.733  WARN 76479 --- [    udp-epoll-2] i.m.s.reactor.netty.channel.FluxReceive  : [43aad7ce, L:/127.0.0.1:38108 - R:localhost/127.0.0.1:8125] An exception has been observed post termination
[INFO] [stdout] 
[INFO] [stdout] java.net.PortUnreachableException: readAddress(..) failed: Connection refused
[INFO] [stdout]     at io.micrometer.shaded.io.netty.channel.epoll.EpollDatagramChannel.translateForConnected(EpollDatagramChannel.java:575)
[INFO] [stdout]     at io.micrometer.shaded.io.netty.channel.epoll.EpollDatagramChannel.access$400(EpollDatagramChannel.java:56)
[INFO] [stdout]     at io.micrometer.shaded.io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe.epollInReady(EpollDatagramChannel.java:503)
[INFO] [stdout]     at io.micrometer.shaded.io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480)
[INFO] [stdout]     at io.micrometer.shaded.io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)
[INFO] [stdout]     at io.micrometer.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
[INFO] [stdout]     at io.micrometer.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
[INFO] [stdout]     at io.micrometer.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
[INFO] [stdout]     at java.base/java.lang.Thread.run(Thread.java:833)
[INFO] [stdout] Caused by: io.micrometer.shaded.io.netty.channel.unix.Errors$NativeIoException: readAddress(..) failed: Connection refused
</code></pre>
<p>I can't find much about it in the <a href=""https://github.com/spring-projects/spring-boot/releases/tag/v2.6.0"" rel=""noreferrer"">release notes</a>, except for a dependency upgrade that seems relevant:</p>
<blockquote>
<p>Upgrade to Micrometer 1.8.0 <a href=""https://github.com/spring-projects/spring-boot/issues/28516"" rel=""noreferrer"">#28516</a></p>
</blockquote>
<p>But the linked issue is not informative. Neither were Micronaut's own <a href=""https://github.com/micrometer-metrics/micrometer/releases/tag/v1.8.0"" rel=""noreferrer"">release notes for version 1.8.0</a> (except for the JVM crash notice, which we did run into - a surprising and rather unfortunate side-effect of upgrading Spring Boot, but I digress)</p>
<p>We don't (consciously) use Micrometer, so I tried disabling it in the <code>application.yml</code> file (<code>micrometer.enabled: false</code> and <code>instrumentation.micrometer.enabled: false</code>), but to no avail.</p>
<p>Despite lots of googling (for various permutations of elements of the error message and digging through code on GitHub), I haven't been able to find how to fix this message, let alone figure out what causes it.</p>
<p>Now I could of course suppress this message in the logging configuration, but I'd like to know what it's actually trying to achieve here, and whether it is useful for our application. And if not, disable it completely.</p>
","70700918","<p>assuming statsd is not used and configured on your side, since it's pointed to localhost, you may disable it by setting</p>
<pre><code>management.metrics.export.statsd.enabled
</code></pre>
<p>to false</p>
"
"70709971","1","What is 'serviceability memory category' of Native Memory Tracking?","<p>I have an java app (JDK13) running in a docker container. Recently I moved the app to JDK17 (OpenJDK17) and found a gradual increase of memory usage by docker container.</p>
<p>During investigation I found that the 'serviceability memory category' NMT grows constantly (15mb per an hour). I checked the page <a href=""https://docs.oracle.com/en/java/javase/17/troubleshoot/diagnostic-tools.html#GUID-5EF7BB07-C903-4EBD-A9C2-EC0E44048D37"" rel=""noreferrer"">https://docs.oracle.com/en/java/javase/17/troubleshoot/diagnostic-tools.html#GUID-5EF7BB07-C903-4EBD-A9C2-EC0E44048D37</a> but this category is not mentioned there.</p>
<p>Could anyone explain what this serviceability category means and what can cause such gradual increase?
Also there are some additional new memory categories comparing to JDK13. Maybe someone knows where I can read details about them.</p>
<p>Here is the result of command <code>jcmd 1 VM.native_memory summary</code></p>
<pre><code>Native Memory Tracking:

(Omitting categories weighting less than 1KB)

Total: reserved=4431401KB, committed=1191617KB
-                 Java Heap (reserved=2097152KB, committed=479232KB)
                            (mmap: reserved=2097152KB, committed=479232KB) 
 
-                     Class (reserved=1052227KB, committed=22403KB)
                            (classes #29547)
                            (  instance classes #27790, array classes #1757)
                            (malloc=3651KB #79345) 
                            (mmap: reserved=1048576KB, committed=18752KB) 
                            (  Metadata:   )
                            (    reserved=139264KB, committed=130816KB)
                            (    used=130309KB)
                            (    waste=507KB =0.39%)
                            (  Class space:)
                            (    reserved=1048576KB, committed=18752KB)
                            (    used=18149KB)
                            (    waste=603KB =3.21%)
 
-                    Thread (reserved=387638KB, committed=40694KB)
                            (thread #378)
                            (stack: reserved=386548KB, committed=39604KB)
                            (malloc=650KB #2271) 
                            (arena=440KB #752)
 
-                      Code (reserved=253202KB, committed=76734KB)
                            (malloc=5518KB #23715) 
                            (mmap: reserved=247684KB, committed=71216KB) 
 
-                        GC (reserved=152419KB, committed=92391KB)
                            (malloc=40783KB #34817) 
                            (mmap: reserved=111636KB, committed=51608KB) 
 
-                  Compiler (reserved=1506KB, committed=1506KB)
                            (malloc=1342KB #2557) 
                            (arena=165KB #5)
 
-                  Internal (reserved=5579KB, committed=5579KB)
                            (malloc=5543KB #33822) 
                            (mmap: reserved=36KB, committed=36KB) 
 
-                     Other (reserved=231161KB, committed=231161KB)
                            (malloc=231161KB #347) 
 
-                    Symbol (reserved=30558KB, committed=30558KB)
                            (malloc=28887KB #769230) 
                            (arena=1670KB #1)
 
-    Native Memory Tracking (reserved=16412KB, committed=16412KB)
                            (malloc=575KB #8281) 
                            (tracking overhead=15837KB)
 
-        Shared class space (reserved=12288KB, committed=12136KB)
                            (mmap: reserved=12288KB, committed=12136KB) 
 
-               Arena Chunk (reserved=18743KB, committed=18743KB)
                            (malloc=18743KB) 
 
-                   Tracing (reserved=32KB, committed=32KB)
                            (arena=32KB #1)
 
-                   Logging (reserved=7KB, committed=7KB)
                            (malloc=7KB #289) 
 
-                 Arguments (reserved=1KB, committed=1KB)
                            (malloc=1KB #53) 
 
-                    Module (reserved=1045KB, committed=1045KB)
                            (malloc=1045KB #5026) 
 
-                 Safepoint (reserved=8KB, committed=8KB)
                            (mmap: reserved=8KB, committed=8KB) 
 
-           Synchronization (reserved=204KB, committed=204KB)
                            (malloc=204KB #2026) 
 
-            Serviceability (reserved=31187KB, committed=31187KB)
                            (malloc=31187KB #49714) 
 
-                 Metaspace (reserved=140032KB, committed=131584KB)
                            (malloc=768KB #622) 
                            (mmap: reserved=139264KB, committed=130816KB) 
 
-      String Deduplication (reserved=1KB, committed=1KB)
                            (malloc=1KB #8) 
</code></pre>
<p>The detailed information about increasing part of memory is:</p>
<pre><code>[0x00007f6ccb970cbe] OopStorage::try_add_block()+0x2e
[0x00007f6ccb97132d] OopStorage::allocate()+0x3d
[0x00007f6ccbb34ee8] StackFrameInfo::StackFrameInfo(javaVFrame*, bool)+0x68
[0x00007f6ccbb35a64] ThreadStackTrace::dump_stack_at_safepoint(int)+0xe4
                             (malloc=6755KB type=Serviceability #10944)
</code></pre>
<p><strong>Update#1 from 2022-01-17:</strong></p>
<p>Thanks to @Aleksey Shipilev for help! We were able to find a place which causes the issue, is related to many ThreadMXBean#.dumpAllThreads calls. Here is MCVE, Test.java:</p>
<p>Run with:</p>
<pre><code>java -Xmx512M -XX:NativeMemoryTracking=detail Test.java 
</code></pre>
<p>and check periodically serviceability category in result of</p>
<pre><code>jcmd YOUR_PID VM.native_memory summary 
</code></pre>
<p>Test java:</p>
<pre><code>import java.lang.management.ManagementFactory;
import java.lang.management.ThreadInfo;
import java.lang.management.ThreadMXBean;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;

public class Test {

    private static final int RUNNING = 40;
    private static final int WAITING = 460;

    private final Object monitor = new Object();
    private final ThreadMXBean threadMxBean = ManagementFactory.getThreadMXBean();
    private final ExecutorService executorService = Executors.newFixedThreadPool(RUNNING + WAITING);

    void startRunningThread() {
        executorService.submit(() -&gt; {
            while (true) {
            }
        });
    }

    void startWaitingThread() {
        executorService.submit(() -&gt; {
            try {
                monitor.wait();
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        });
    }

    void startThreads() {
        for (int i = 0; i &lt; RUNNING; i++) {
            startRunningThread();
        }

        for (int i = 0; i &lt; WAITING; i++) {
            startWaitingThread();
        }
    }

    void shutdown() {
        executorService.shutdown();
        try {
            executorService.awaitTermination(5, TimeUnit.SECONDS);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }

    
    public static void main(String[] args) throws InterruptedException {
        Test test = new Test();

        Runtime.getRuntime().addShutdownHook(new Thread(test::shutdown));

        test.startThreads();

        for (int i = 0; i &lt; 12000; i++) {
            ThreadInfo[] threadInfos = test.threadMxBean.dumpAllThreads(false, false);
            System.out.println(&quot;ThreadInfos: &quot; + threadInfos.length);

            Thread.sleep(100);
        }

        test.shutdown();
    }
}
</code></pre>
","70713288","<p>Unfortunately (?), the easiest way to know for sure what those categories map to is to look at OpenJDK source code. The NMT tag you are looking for is <a href=""https://github.com/openjdk/jdk/search?q=mtServiceability"" rel=""noreferrer"">mtServiceability</a>. This would show that &quot;serviceability&quot; are basically diagnostic interfaces in JDK/JVM: JVMTI, heap dumps, etc.</p>
<p>But the same kind of thing is clear from observing that stack trace sample you are showing mentions <code>ThreadStackTrace::dump_stack_at_safepoint</code> -- that is something that dumps the thread information, for example for <code>jstack</code>, heap dump, etc. If you have a suspicion for the memory leak in that code, you might try to build a MCVE demonstrating it, and submitting the bug against OpenJDK, or showing it to a fellow OpenJDK developer. You probably know better what your application is doing to cause thread dumps, focus there.</p>
<p>That being said, I don't see <a href=""https://github.com/openjdk/jdk/blob/ac98b22040f854de79813a1c2a97fc399d3bcc42/src/hotspot/share/services/threadService.cpp#L570-L600"" rel=""noreferrer"">any obvious memory leaks</a> in <code>StackFrameInfo</code>, neither can I reproduce any leak with stress tests, so maybe what you are seeing is &quot;just&quot; thread dumping over the larger and larger thread stacks. Or you capture it when thread dump is happening. Or... It is hard to say without the MCVE.</p>
<p><strong>Update</strong>: After playing with MCVE, I realized that it reproduces with 17.0.1, but not with either mainline development JDK, or JDK 18 EA, or JDK 17.0.2 EA. I tested with 17.0.2 EA before, so was not seeing it, dang. Bisection between 17.0.1 and 17.0.2 EA shows it was fixed with <a href=""https://bugs.openjdk.java.net/browse/JDK-8273902"" rel=""noreferrer"">JDK-8273902</a> backport. 17.0.2 releases this week, so the bug should disappear after you upgrade.</p>
"
"70555241","1","Spring Boot, OAuth2 authentication is lost between requests","<p>EDIT:</p>
<p>log from org.springframework.security:</p>
<pre><code>2022-01-17 12:31:03.495 IST
2022-01-17 10:31:03.495 DEBUG [080-exec-5] o.s.s.w.s.SessionManagementFilter - Request requested invalid session id D5F8BA31A3D7466AK3K3C8EA26A4F037
Default

2022-01-17 12:31:03.495 IST
2022-01-17 10:31:03.495 DEBUG [080-exec-5] o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
Debug

2022-01-17 12:31:03.495 IST
&quot;Request requested invalid session id D5F8BA31A3D7466AK3K3C8EA26A4F037&quot;
Debug

2022-01-17 12:31:03.495 IST
&quot;Set SecurityContextHolder to anonymous SecurityContext&quot;
Default

2022-01-17 12:31:03.494 IST
2022-01-17 10:31:03.494 DEBUG [080-exec-5] o.s.s.w.c.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
Debug

2022-01-17 12:31:03.494 IST
&quot;Set SecurityContextHolder to empty SecurityContext&quot;
Default

2022-01-17 12:31:03.493 IST
2022-01-17 10:31:03.493 DEBUG [080-exec-5] o.s.security.web.FilterChainProxy - Securing GET /logo192.png
Debug

2022-01-17 12:31:03.493 IST
&quot;Securing GET /logo192.png&quot;
</code></pre>
<p>***<strong>But if I look in the logs some requests after I can get the valid auth:</strong></p>
<p>Debug
2022-01-17 12:31:03.945 IST
&quot;Set SecurityContextHolder to SecurityContextImpl [Authentication=OAuth2AuthenticationToken [Principal=com.<em><strong>.security.oauth.CustomOAuth2User@</strong></em>, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=***, SessionId=9438C880A19C93AADJI206B9B8B3386], Granted Authorities=[ROLE_USER, SCOPE_https://www.googleapis.com/auth/userinfo.email, SCOPE_https://www.googleapis.com/auth/userinfo.profile, SCOPE_openid]]]&quot;
Debug</p>
<p>2022-01-17 12:31:03.945 IST
&quot;Retrieved SecurityContextImpl [Authentication=OAuth2AuthenticationToken [Principal=com.<em><strong>.security.oauth.CustomOAuth2User@</strong></em>, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=***, SessionId=9438C880A19C93AADJI206B9B8B3386], Granted Authorities=[ROLE_USER, SCOPE_https://www.googleapis.com/auth/userinfo.email, SCOPE_https://www.googleapis.com/auth/userinfo.profile, SCOPE_openid]]]&quot;
Debug</p>
<p>2022-01-17 12:31:03.945 IST
&quot;Retrieved SecurityContextImpl [Authentication=OAuth2AuthenticationToken [Principal=com.<em><strong>.security.oauth.CustomOAuth2User@</strong></em>, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=***, SessionId=9438C880A19C93AADJI206B9B8B3386], Granted Authorities=[ROLE_USER, SCOPE_https://www.googleapis.com/auth/userinfo.email, SCOPE_https://www.googleapis.com/auth/userinfo.profile, SCOPE_openid]]]&quot;
Default</p>
<p>2022-01-17 12:31:03.944 IST
2022-01-17 10:31:03.944 DEBUG [080-exec-8] o.s.security.web.FilterChainProxy - Securing GET /auth/api/getBasicInfo</p>
<p>it looks like the session id is inconsistent</p>
<hr />
<p>I use spring security builtin oauth2 social login option,
I implemented an OAuth2LoginSuccess class with the onAuthenticationSuccess method and inside of it I fetch the user the corresponds to the social id I got from the oauth:</p>
<pre><code>CustomOAuth2User oAuth2User = (CustomOAuth2User) authentication.getPrincipal();
int sociald = oAuth2User.getAttribute(&quot;id&quot;);
User user = usersUtils.getUserBySocailId(socialId);
enter code here
// add the user details to the Auth
SecurityContextHolder.clearContext();
((OAuth2AuthenticationToken) authentication).setDetails(user);
SecurityContextHolder.getContext().setAuthentication(authentication);
</code></pre>
<p>If I debug inside the onAuthenticationSuccess I can see a valid auth with all the user details.</p>
<p>after the login I redirect to the home page and i send a auth get request to the server to check if there is a user logged in.</p>
<p>the problem is that 50% of the times the request is completed successfuly and the user can make authenticated requets.</p>
<p>but the other 50% i get redirected automaticly to Login page and when i check the log is see that Spring boot says that the user is unauthenticated and the auth is lost.</p>
<p>But in the onAuthenticationSuccess i can always see the correct auth.</p>
<p>My ApplicationSecurityConfig looks like this:</p>
<pre><code>    http.csrf().disable().authorizeRequests()
            .antMatchers(&quot;/login*&quot;, &quot;/signin/**&quot;, &quot;/signup/**&quot;, &quot;/oauth2/**&quot;).permitAll()
            .antMatchers(Constants.ADMIN_PREFIX + &quot;/**&quot;).hasRole(&quot;ADMIN&quot;)
            .antMatchers(Constants.AUTH_PREFIX + &quot;/**&quot;).hasAnyRole(&quot;ADMIN&quot;, &quot;USER&quot;)
            .antMatchers(Constants.PUBLIC_PREFIX + &quot;/**&quot;).permitAll()
            .anyRequest().permitAll()
            .and()
            .exceptionHandling().authenticationEntryPoint(new UnauthenticatedRequestHandler())
            .and()
            .formLogin()
            .passwordParameter(&quot;password&quot;)
            .usernameParameter(&quot;email&quot;)
            .loginPage(&quot;/Login&quot;)
            .loginProcessingUrl(&quot;/loginSecure&quot;).permitAll().successHandler(new LoginSuccess()).failureHandler(new FailureSuccess())
            .and()
            .oauth2Login()
            .loginPage(&quot;/Login&quot;)
            .userInfoEndpoint()
            .userService(oAuth2UserService)
            .and()
            .successHandler(new OAuth2LoginSuccess())
            .and()
            .rememberMe()
            .rememberMeParameter(&quot;remember-me&quot;)
            .tokenValiditySeconds((int) TimeUnit.DAYS.toSeconds(21))
.userDetailsService(this.applicationUserService)
            .and()
            .logout()
         .clearAuthentication(true).invalidateHttpSession(true).logoutSuccessUrl(&quot;/login&quot;)
            .addLogoutHandler(new CustomLogOutHandler());
</code></pre>
<p>And this is the function i check if the user is logged in:</p>
<pre><code>   @GetMapping(Constants.AUTH_PREFIX + &quot;/checkUserLogged&quot;)
public Integer checkUserLogged(Authentication authentication,HttpServletRequest request) {
    try{
        if (authentication != null) {
            User (User) authentication.getDetails();
            if (user == null) {
                return -1;
            }
            return user.getId();
        }
    }
    catch (Exception e){
        logger.warning(e.getLocalizedMessage());
    }
    return -1;
}
</code></pre>
<p>but when the problem occur it dosen't get to run the controller because spring security return unauthrozed error before.</p>
<p>Thank you in advance for your help</p>
","70755813","<p>I found the solution, I hope this could help.</p>
<p>The thing that caused the problem for me was that GCP and GAE use multiple instances of the server, and if the user is logged in a certain instance
does not mean the other instances are familiar with it too because the Spring HTTPSession is in-memory.</p>
<p>I Switched the Session platform to use the spring-session jdbc using the following configuration in the application.properties :</p>
<pre><code>spring.session.store-type=jdbc
</code></pre>
<p>-- you can use redis instead of jdbc, as long as the session is stored in a shared place among all instances.</p>
<p>also added the transaction manager to the SecurtityConfig:</p>
<pre><code>@Bean
public PlatformTransactionManager transactionManager(DataSource dataSource) {
    return new DataSourceTransactionManager(dataSource);
}
</code></pre>
<p>and added the following configurations :</p>
<pre><code>    http.csrf().disable()
            .sessionManagement()
            .maximumSessions(1)
            .and()
            .sessionCreationPolicy(SessionCreationPolicy.ALWAYS)
</code></pre>
<p>In addition like @stringy05 mentioned the authrizenClient Repository needs ti be updated too:</p>
<pre><code>    /**
 * Use the servlet container session store for authorized OAuth2 Clients
 */
@Bean
public OAuth2AuthorizedClientRepository authorizedClientRepository() {
    return new HttpSessionOAuth2AuthorizedClientRepository();
}
</code></pre>
<p>and add the .authorizedClientRepository line to the httpconfig:</p>
<pre><code>....
                .oauth2Login()
            .loginPage(&quot;/Login&quot;)
            .authorizedClientRepository(authorizedClientRepository)
            .authorizationEndpoint().and()
            .userInfoEndpoint()
            .userService(oAuth2UserService)
            .and()
            .successHandler(new OAuth2LoginSuccess())
</code></pre>
<p>....</p>
<p>Regarding the GAE, I added the following line to the app.yaml file:</p>
<pre><code>  network:
    session_affinity: true
</code></pre>
"
"70664036","1","Find the missing module","<p>My question: when building a minimal JRE, how can one make sure that no required module is missing?</p>
<hr />
<p>To illustrate the question, here is an example where I want to build a minimal JRE for my project. Let's assume for this example that logback is my only dependency.</p>
<p>I run the following command to see what modules are required:</p>
<pre class=""lang-none prettyprint-override""><code>$ jar --file=logback-core-1.2.3.jar --describe-module
No module descriptor found. Derived automatic module.

logback.core@1.2.3 automatic
requires java.base mandated
contains ch.qos.logback.core
contains ch.qos.logback.core.boolex
etc. (there are more &quot;contains ch.qos.logback.XXX&quot; lines)
</code></pre>
<p>It looks like I only need the <code>java.base</code> module and I build my minimal JRE accordingly:</p>
<pre><code>jlink --output jre-min --add-modules java.base
</code></pre>
<p>However when running the project with the minimal JRE, I encounter issues using logback's email logger (malformed emails over TLS). Through trial and error, I find that <code>jdk.crypto.cryptoki</code> module is also required:</p>
<pre><code>jlink --output jre-min --add-modules java.base,jdk.crypto.cryptoki
</code></pre>
<p>Now my project works fine. How could I have avoided the trial &amp; error step?</p>
","70733470","<p>The JAR you're using there has &quot;no module descriptor&quot; (see first line of output) and thus can't tell you what modules it depends on, so you have to find out yourself. The canonical tool for that is <code>jdeps</code> but it may not be enough.</p>
<h2>Static Dependencies</h2>
<p>I wrote <a href=""https://nipafx.dev/jdeps-tutorial-analyze-java-project-dependencies/"" rel=""noreferrer"">a jdeps tutorial</a> that gets you started, but the interesting bit is <a href=""https://nipafx.dev/jdeps-tutorial-analyze-java-project-dependencies/#configuring-jdeps-output"" rel=""noreferrer"">this section</a>. The gist is this command:</p>
<pre><code>jdeps --class-path 'jars/*' -summary -recursive logback-core-1.2.3.jar
</code></pre>
<p>Where <code>jars</code> contains all Logback dependencies. (If you don't have those at hand, you can leave <code>--class-path</code> and <code>-recursive</code> out, but then you don't know which modules the dependencies.) Besides a few other things, the output will list the dependencies on JDK modules.</p>
<h2>Dynamic Dependencies</h2>
<p><code>jdeps</code> works by analyzing the byte code, which means it will only find dependencies that are statically linked. Consequently, if a JAR uses reflection, <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/ServiceLoader.html"" rel=""noreferrer"">the service loader</a>, or other mechanisms to avoid explicitly mentioning the classes it wants to use, <code>jdeps</code> will not notice them.</p>
<p>To find those cases, you can run an app with the <code>java</code> command-line option <code>-XX:DumpLoadedClassList=classes.lst</code> - it will generate a file <code>classes.lst</code> that lists all loaded classes.</p>
<h2>Minimal Runtime</h2>
<p>Note that the base module <em>java.base</em> uses a lot of services that are provided by other modules, for example locale data by <em>jdk.localedata</em>. That means a minimal runtime (i.e. one where service provider modules are not included) may miss things that an app needs (in the example, maybe locales).</p>
<p>You can list services with <code>java --describe-module java.base</code> (see list of <code>uses ...</code> in output) and then find potentiual providers for each with <code>jlink</code>'s <code>--suggest-providers</code> option.</p>
<p>You can include all of possible providers with <code>jlink</code>'s <code>--bind-services</code> option, but that immediately abandons the idea of a &quot;minimal&quot; runtime as it will include a lot of modules. If you're going for &quot;minimal&quot;, probably better to include them one by one as needed.</p>
<p>Whatever you do, make sure to thoroughly test your app on the custom-made runtime.</p>
"
"70890854","1","2 files found with path 'lib/arm64-v8a/libc++_shared.so' from inputs...-react native","<p>I am trying to enable package of <a href=""https://github.com/tanersener/ffmpeg-kit/tree/main/react-native"" rel=""noreferrer"">ffmpeg-kit-react-native</a> in react-native.
The sample commands given in the <a href=""https://github.com/tanersener/ffmpeg-kit/tree/main/react-native#3-using"" rel=""noreferrer"">example</a> executes successfully. But I want to use <code>libwebp</code> for converting gif files to webp which is under <a href=""https://github.com/tanersener/ffmpeg-kit#8-packages"" rel=""noreferrer"">package</a> named <code>video</code>. As <a href=""https://github.com/tanersener/ffmpeg-kit/tree/main/react-native#221-enabling-a-package-on-android"" rel=""noreferrer"">instrcuted</a> . I have to enable the <a href=""https://github.com/tanersener/ffmpeg-kit#8-packages"" rel=""noreferrer"">package</a> to use some libraries.</p>
<blockquote>
<p>2.2.1 Enabling a Package on Android
Edit android/build.gradle file and add the package name in ext.ffmpegKitPackage variable.</p>
<pre class=""lang-java prettyprint-override""><code>ext {
   ffmpegKitPackage = &quot;&lt;package name&gt;&quot;
}
</code></pre>
</blockquote>
<p>So I added a line in the <code>node_module/ffmpeg-kit-react-native/android/build.gradle</code></p>
<pre><code>android {
  compileSdkVersion 30

  defaultConfig {
    minSdkVersion safeExtGet('ffmpegKitPackage', 'https').contains(&quot;-lts&quot;) ? 16 : 24
    targetSdkVersion 30
    versionCode 451
    versionName &quot;4.5.1&quot;
  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }
  lintOptions {
    disable 'GradleCompatible'
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  rootProject.ext.ffmpegKitPackage = &quot;video&quot; // Added this line here 

}
</code></pre>
<p>Error:</p>
<pre class=""lang-none prettyprint-override""><code>* What went wrong:
Execution failed for task ':app:mergeDebugNativeLibs'.
&gt; A failure occurred while executing com.android.build.gradle.internal.tasks.MergeJavaResWorkAction
   &gt; 2 files found with path 'lib/arm64-v8a/libc++_shared.so' from inputs:
      - C:\Users\ADMIN\.gradle\caches\transforms-3\7403ebe5571a2ce5a6a5fc9876af4814\transformed\jetified-react-native-0.66.4\jni
      - C:\Users\ADMIN\.gradle\caches\transforms-3\4be54e44fe38656741a8345504588323\transformed\jetified-ffmpeg-kit-video-4.5.1-1\jni
     If you are using jniLibs and CMake IMPORTED targets, see
     https://developer.android.com/r/tools/jniLibs-vs-imported-targets
</code></pre>
<p>I have tried ./gradlew clean but problem is still there.
How to fix this error? Thanks</p>
","70893407","<p>add this in your <code>node_module/ffmpeg-kit-react-native/android/build.gradle</code></p>
<pre class=""lang-kotlin prettyprint-override""><code>android{
  packagingOptions {
      pickFirst 'lib/x86/libc++_shared.so'
      pickFirst 'lib/x86_64/libc++_shared.so'
      pickFirst 'lib/armeabi-v7a/libc++_shared.so'
      pickFirst 'lib/arm64-v8a/libc++_shared.so'
  }
  rootProject.ext.ffmpegKitPackage = &quot;video&quot;
}
</code></pre>
<p>ffmpeg-kit-react-native has already talked about this error here. <a href=""https://github.com/tanersener/ffmpeg-kit/wiki/Tips#2-depending-another-android-library-containing-libc_sharedso"" rel=""noreferrer"">https://github.com/tanersener/ffmpeg-kit/wiki/Tips#2-depending-another-android-library-containing-libc_sharedso</a></p>
"
"71006506","1","Java collector teeing a list of inputs","<p>I am trying to implement a simple collector, which takes a list of collectors and simultaneously collects values in slightly different ways from a stream.</p>
<p>It is quite similar to <code>Collectors.teeing</code>, but differs in that it</p>
<ol>
<li>Receives a list of collectors instead of just two</li>
<li>Requires all collectors to produce a value of the same type</li>
</ol>
<p>The type signature I want to have is</p>
<pre><code>public static &lt;T, R&gt; Collector&lt;T, ?, List&lt;R&gt;&gt; list(
      final List&lt;Collector&lt;T, ?, R&gt;&gt; downstreamCollectors);
</code></pre>
<p>One way to create such a collector would be to recursively pair up teeing collectors, like so:</p>
<pre><code>public static &lt;T, R&gt; Collector&lt;T, ?, List&lt;R&gt;&gt; list(
    final List&lt;Collector&lt;T, ?, R&gt;&gt; downstreamCollectors) {
  return listrec(
      Collectors.collectingAndThen(downstreamCollectors.get(0), List::of),
      downstreamCollectors.stream().skip(1).toList());
}

private static &lt;T, R&gt; Collector&lt;T, ?, List&lt;R&gt;&gt; listrec(
    final Collector&lt;T, ?, List&lt;R&gt;&gt; teedCollectors,
    final List&lt;Collector&lt;T, ?, R&gt;&gt; downstreamCollectors) {
  if (downstreamCollectors.size() == 0) {
    return teedCollectors;
  } else {
    return listrec(
        teeing(
            teedCollectors,
            downstreamCollectors.get(0),
            (l, s) -&gt; Stream.concat(l.stream(), Stream.of(s)).toList()),
        downstreamCollectors.stream().skip(1).toList());
  }
}
</code></pre>
<p>Something feels a little &quot;off&quot; with this solution, so I am trying to create the collector myself, something like:</p>
<pre><code>public static &lt;T, R&gt; Collector&lt;T, ?, List&lt;R&gt;&gt; list2(
    final List&lt;Collector&lt;T, ?, R&gt;&gt; downstreamCollectors) {
  return Collector.of(
      () -&gt; downstreamCollectors.stream().map(c -&gt; c.supplier().get()).toList(),
      (accumulators, t) -&gt;
          IntStream.range(0, downstreamCollectors.size())
              .forEach(
                  i -&gt; downstreamCollectors.get(i).accumulator().accept(accumulators.get(i), t)),
      (accumulator1, accumulator2) -&gt;
          IntStream.range(0, downstreamCollectors.size())
              .mapToObj(
                  i -&gt;
                      downstreamCollectors
                          .get(i)
                          .combiner()
                          .apply(accumulator1.get(i), accumulator2.get(i)))
              .toList(),
      accumulators -&gt;
          IntStream.range(0, downstreamCollectors.size())
              .mapToObj(i -&gt; downstreamCollectors.get(i).finisher().apply(accumulators.get(i)))
              .toList());
}
</code></pre>
<p>Because of the unbounded wildcard in the downstream collectors' accumulator type, this doesn't compile. Changing the type signature to</p>
<pre><code>public static &lt;T, A, R&gt; Collector&lt;? super T, ?, List&lt;R&gt;&gt; list2(
    final List&lt;Collector&lt;? super T, A, R&gt;&gt; downstreamCollectors);
</code></pre>
<p>solves the problem, but unfortunately renders the method much less usable as the downstream collectors (like the built in collectors from <code>java.util.stream.Collectors</code>) typically would have a unbounded wildcard in the accumulator type.</p>
<p>Is there another way to implement this, keeping the wildcard in the method signature?</p>
<p>I am using OpenJDK 17.0.2.</p>
","71019502","<p>Handling a list of collectors with arbitrary accumulator types as a flat list can’t be done in a type safe way, as it would require declaring <em>n</em> type variables to capture these types, where <em>n</em> is the actual list size.</p>
<p>Therefore, you can only implement the processing as a composition of operations, each with a finite number of components know at compile time, like your recursive approach.</p>
<p>This still has potential for simplifications, like replacing <code>downstreamCollectors.size() == 0</code> with <code>downstreamCollectors.isEmpty()</code> or <code>downstreamCollectors.stream().skip(1).toList()</code> with a copying free <code>downstreamCollectors.subList(1, downstreamCollectors.size())</code>.</p>
<p>But the biggest impact has replacing the recursive code with a Stream Reduction operation:</p>
<pre class=""lang-java prettyprint-override""><code>public static &lt;T, R&gt; Collector&lt;T, ?, List&lt;R&gt;&gt; list(List&lt;Collector&lt;T, ?, R&gt;&gt; collectors) {
    return collectors.stream()
            .&lt;Collector&lt;T, ?, List&lt;R&gt;&gt;&gt;map(c-&gt; Collectors.collectingAndThen(c, List::of))
            .reduce((c1, c2) -&gt; teeing(c1, c2,
                        (l1, l2) -&gt; Stream.concat(l1.stream(), l2.stream()).toList()))
            .orElseThrow(() -&gt; new IllegalArgumentException(&quot;no collector specified&quot;));
}
</code></pre>
<p>This may work fairly well if you don’t have a really large number of collectors to compose. A disadvantage of this concise solution is that every result will be wrapped into a single element list before the actual merging of results and even the result merging may bear multiple list copying operations.</p>
<p>This result processing can be optimized using</p>
<pre class=""lang-java prettyprint-override""><code>public static &lt;T, R&gt; Collector&lt;T, ?, List&lt;R&gt;&gt; list(List&lt;Collector&lt;T, ?, R&gt;&gt; collectors) {
    int num = collectors.size();
    switch(num) {
        case 0: throw new IllegalArgumentException(&quot;no collector specified&quot;);
        case 1: return collectingAndThen(collectors.get(0), List::of);
        case 2: return teeing(collectors.get(0), collectors.get(1), List::of);
        case 3: return teeing(teeing(collectors.get(0), collectors.get(1), List::of),
                           collectors.get(2), (l,r) -&gt; List.of(l.get(0), l.get(1), r));
        default:
    }
    Collector&lt;T,?,List&lt;R&gt;&gt; c = teeing(collectors.get(0), collectors.get(1), (r1, r2) -&gt; {
        var list = new ArrayList&lt;R&gt;(num);
        list.add(r1);
        list.add(r2);
        return list;
    });
    for(int ix = 2; ix &lt; num; ix ++) {
        c = teeing(c, collectors.get(ix), (list, r) -&gt; { list.add(r); return list; });
    }
    return collectingAndThen(c, List::copyOf);
}
</code></pre>
<p>This provides special cases for small numbers of collectors whose results can be used to construct an immutable result list directly. For the other cases, all results are added to an <code>ArrayList</code> first, preventing excessive list copying, before converting the list to the final immutable list. This last step could be omitted, if getting an immutable result list is not important, I just tried to be as close to the <code>Stream.toList()</code> behavior of the original approach as possible.</p>
<p>There’s still an unbalanced recursive structure behind the scenes during the Stream processing which prohibits really large numbers of collectors. There are two approaches to solve this.</p>
<ol>
<li><p>Implement your own type safe variant of teeing which exposes the intermediate container type, to allow to build a balanced tree and collecting all results into a list by traversing this tree without additional intermediate storage.</p>
</li>
<li><p>Abandon the type safety and implement the collector with a flat list and raw types. Try to limit the unsafe code as much as possible.</p>
</li>
</ol>
<p>But this might not be needed when you have an estimate of the expected number of collectors to “tee” and find the first solution working good enough.</p>
"
"70756414","1","java.lang.reflect.InaccessibleObjectException: Unable to make field private final java.util.Comparator java.util.TreeMap.comparator accessible:module","<p>This is my first cucumber project and i followed a tutorial when setting everything up. It all seems to be the same but for some reason i get this:</p>
<p>java.lang.ExceptionInInitializerError.
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make field private final java.util.Comparator java.util.TreeMap.comparator accessible: module java.base does not &quot;opens java.util&quot; to unnamed module @74ad1f1f</p>
<p>Any idea how to solve this error ?</p>
<p>Below i have posted everything that comes out in my console as well as my pom file in case there is an issue with my dependencies eventhough the guy from the tutorial's pom file is identical.</p>
<p>This is everything that comes out in my Console.</p>
<pre><code>[31mFailed scenarios:[0m
[31muni/login/Login.feature:3 [0m# Scenario: Enter the system.
1 Scenarios ([31m1 failed[0m)
5 Steps ([31m1 failed[0m, [36m4 skipped[0m)
0m0.185s

java.lang.ExceptionInInitializerError
    at cucumber.deps.com.thoughtworks.xstream.XStream.setupConverters(XStream.java:820)
    at cucumber.deps.com.thoughtworks.xstream.XStream.&lt;init&gt;(XStream.java:574)
    at cucumber.deps.com.thoughtworks.xstream.XStream.&lt;init&gt;(XStream.java:530)
    at cucumber.runtime.xstream.LocalizedXStreams$LocalizedXStream.&lt;init&gt;(LocalizedXStreams.java:50)
    at cucumber.runtime.xstream.LocalizedXStreams.newXStream(LocalizedXStreams.java:37)
    at cucumber.runtime.xstream.LocalizedXStreams.get(LocalizedXStreams.java:29)
    at cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)
    at cucumber.runtime.Runtime.runStep(Runtime.java:300)
    at cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)
    at cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)
    at cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)
    at cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:102)
    at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)
    at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)
    at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
    at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
    at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
    at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
    at cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)
    at cucumber.api.junit.Cucumber.runChild(Cucumber.java:95)
    at cucumber.api.junit.Cucumber.runChild(Cucumber.java:38)
    at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
    at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
    at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
    at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
    at cucumber.api.junit.Cucumber.run(Cucumber.java:100)
    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:93)
    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)
    at ✽.Given Потребителят отваря екрана за вход в системата(uni/login/Login.feature:4)
Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make field private final java.util.Comparator java.util.TreeMap.comparator accessible: module java.base does not &quot;opens java.util&quot; to unnamed module @74ad1f1f
    at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:357)
    at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:297)
    at java.base/java.lang.reflect.Field.checkCanSetAccessible(Field.java:177)
    at java.base/java.lang.reflect.Field.setAccessible(Field.java:171)
    at cucumber.deps.com.thoughtworks.xstream.core.util.Fields.locate(Fields.java:39)
    at cucumber.deps.com.thoughtworks.xstream.converters.collections.TreeMapConverter.&lt;clinit&gt;(TreeMapConverter.java:50)
    at cucumber.deps.com.thoughtworks.xstream.XStream.setupConverters(XStream.java:820)
    at cucumber.deps.com.thoughtworks.xstream.XStream.&lt;init&gt;(XStream.java:574)
    at cucumber.deps.com.thoughtworks.xstream.XStream.&lt;init&gt;(XStream.java:530)
    at cucumber.runtime.xstream.LocalizedXStreams$LocalizedXStream.&lt;init&gt;(LocalizedXStreams.java:50)
    at cucumber.runtime.xstream.LocalizedXStreams.newXStream(LocalizedXStreams.java:37)
    at cucumber.runtime.xstream.LocalizedXStreams.get(LocalizedXStreams.java:29)
    at cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)
    at cucumber.runtime.Runtime.runStep(Runtime.java:300)
    at cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)
    at cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)
    at cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)
    at cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:102)
    at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)
    at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)
    at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
    at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
    at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
    at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
    at cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)
    at cucumber.api.junit.Cucumber.runChild(Cucumber.java:95)
    at cucumber.api.junit.Cucumber.runChild(Cucumber.java:38)
    at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
    at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
    at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
    at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
    at cucumber.api.junit.Cucumber.run(Cucumber.java:100)
    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:93)
    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)
    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)
</code></pre>
<p>And this is my pom.xml</p>
<pre><code>&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;
  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
  &lt;groupId&gt;uni.ais&lt;/groupId&gt;
  &lt;artifactId&gt;first-cucumber-project&lt;/artifactId&gt;
  &lt;version&gt;1.1.0-SNAPSHOT&lt;/version&gt;
  &lt;name&gt;first-cucumber-project-gr&lt;/name&gt;
  &lt;properties&gt;
    &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;
    &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;
    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
  &lt;/properties&gt;
  &lt;dependencies&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;info.cukes&lt;/groupId&gt;
        &lt;artifactId&gt;cucumber-java&lt;/artifactId&gt;
        &lt;version&gt;1.2.5&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;info.cukes&lt;/groupId&gt;
        &lt;artifactId&gt;cucumber-junit&lt;/artifactId&gt;
        &lt;version&gt;1.2.5&lt;/version&gt;
    &lt;/dependency&gt;
  &lt;/dependencies&gt;
&lt;/project&gt;
</code></pre>
","70776589","<p>I solved my problem. Turns out the JRE that eclipse had automatically downloaded and was using wasn't compatible with this version of cucumber. I manually changed the path to a jre 1.8 that i had in my ProgramFilex(x86)/Java folder and now everything works fine.</p>
"
"70786275","1","Reading encrypted private key in PKCS#8 format through bouncycastle, Java failing in docker container","<p>I am trying to read a PKCS#8 private key which looks like following:</p>
<p><strong>key.k8</strong> --&gt; (Sample key. Passphrase - 123456):</p>
<pre><code>-----BEGIN ENCRYPTED PRIVATE KEY-----
MIIFLTBXBgkqhkiG9w0BBQ0wSjApBgkqhkiG9w0BBQwwHAQILbKY9hPxYSoCAggA
MAwGCCqGSIb3DQIJBQAwHQYJYIZIAWUDBAEqBBCvaGt2Hmm2NpHpxbLvHKyOBIIE
0IQ7dVrAGXLZl0exYIvyxLAu6zO00jL6b3sb/agTcCFOz8JU6fBanxY0d5aYO4Dn
mynQG7BoljU470s0zIwW/wk0MmdUFl4nXWBX/4qnG0sZqZ9KZ7I8R/WrBkmpX8C/
4pjdVhu8Ht8dfOYbkbjMBTohDJz8vJ0QwDIXi9yFjjef+QjwrFOl6kAeDJFVMGqc
s7K/wOnhsL1XxfW9uTulPiZh5YTZKcatMkeGDR7c+cg5I+Mutim92diWuCekhNoa
uvhUy1M3cbs7Azp1Mhz+V0CDKklI95EvN4u23WhiJPCjAofC/e45/heOP3Dwm7WZ
zHEY1C/X8PsTl6MEEIF3ZJP+4Vr0corAs1L2FqE6oOng8dFFYmF5eRyBx6bxFd05
iYbfOH24/b3qtFKPC689kGEd0gWp1dwES35SNNK+cJqVRTjgI0oKhOai3rhbGnmp
tx4+JqploQgTorj4w9asbtZ/qZA2mYSSR/Q64SHv7LfoUCI9bgx73MqRQBgvI5yS
b4BoFBnuEgOduZLaGKGjKVW3m5/q8oiDAaspcSLCJMIrdOTYWJB+7mfxX4Xy0vEe
5m2jXpSLQmrfjgpSTpHDKi/3b6OzKOcHjSFBf8IoiHuLc5DVvLECzDUxxaMrTZ71
0YXvEPwl2R9BzEANwwR9ghJvFg1Be/d5W/WA1Efe6cNQNBlmErxD6l+4KDUgGjTr
Aaksp9SZAv8uQAsg7C57NFHpTA5Hznr5JctL+WlO+Gk0cAV6i4Py3kA6EcfatsnS
PqP2KbxT+rb2ATMUZqgWc20QvDt6j0CTA1BuVD1PNhnAUFvb2ocyEEXOra22DPPS
UPu6jirSIyFcjqFjJ9A1FD9L4/UuX2UkDSLqblFlYB1+G55KZp+EKz8SZoN5qXy1
LyMtnacEP5OtRDrOjopzVNiuV1Uv63M9QVi1hZlVLJEomgjWuvuyEuIwDaY2uryW
vx+jJEZyySFkb1JwAbrm+p6sCTFnbQ/URKC2cit/FJyKqNim6VQvGL8Sez34qV3z
D13QJgTZfsy+BaZoaQ6cJTXtJ8cN0IcQciOiDNBKMW66zO6ujS8G+KNviNQypDm6
h4sOgjMqLaZ4ezPEdNj/gaxV7Y15nVRu0re8dVkaa5t9ft/sh6A+yeTD5tS5hHkf
NI7uJPTaTXVoz7xq2PAJUTWujMLMZKtmNOzNqYvxWRy3tCOFobBQkMxqEBEwHd+x
SA+gFcJKJ+aNfCGZJ5fFr8rNlhtOF6uMwOAlfiUlP/pCUDUCKPjZVj4K95yNc8Io
jSZSPb5tGPe0HqXgc6IAfQarlUZt90oVtzL0OfOfTxe1bEzS2ccNadbx/6vjLBc4
q5UuUBppl3rXpbuZ7J1Rp3n2byF4APxFdT2LHKq+MYMfWUToau/TCMT4lFIM9tM8
7TuuyUT2PKzf/xlsl4iScw96z9xxGPQrXn7IA2W5iL+0eCLztJdjNRX1FisdfIBL
PraOVlmF8jHKbFdRZ8Yi8pApbQjvHi24g7dX7u/cq1FH/VE+nJ0O8YVCYVDw13CW
h0p7yD7BuB0R+0WnR0yvkp30vK4/rtCB+Ob8bH/+HvAZrAU5X8jq/wsQbLkrLHZV
6A6GGfX8+hy5AoaXsH1BHnMyXkaF6Mv29z8JcslDJxX/
-----END ENCRYPTED PRIVATE KEY-----
</code></pre>
<p>Following code is being used to parse the private key:</p>
<pre class=""lang-java prettyprint-override""><code> InputStream privateKeyInputStream = getPrivateKeyInputStream(); // reads the key file from classpath and share as DataStream
 logger.info(&quot;InputStreamExists --&gt; {} &quot;, privateKeyInputStream.available());
 PEMParser pemParser = new PEMParser(new InputStreamReader(privateKeyInputStream));
 Object pemObject = pemParser.readObject();
 if (pemObject instanceof PKCS8EncryptedPrivateKeyInfo) {
     // Handle the case where the private key is encrypted.
     PKCS8EncryptedPrivateKeyInfo encryptedPrivateKeyInfo = (PKCS8EncryptedPrivateKeyInfo) pemObject;
     InputDecryptorProvider pkcs8Prov =
            new JceOpenSSLPKCS8DecryptorProviderBuilder().build(passphrase.toCharArray());
     privateKeyInfo = encryptedPrivateKeyInfo.decryptPrivateKeyInfo(pkcs8Prov); // fails here
}

</code></pre>
<pre class=""lang-java prettyprint-override""><code>InputStream resourceAsStream = null;
    if (&quot;local&quot;.equals(privateKeyMode)) {
      resourceAsStream = this.getClass().getResourceAsStream(privateKeyPath);
    } else {
      File keyFile = new File(privateKeyPath);
      logger.info(
          &quot;Key file found in {} mode. FileName : {}, Exists : {}&quot;,
          privateKeyMode,
          keyFile.getName(),
          keyFile.exists());
      try {
        resourceAsStream = new DataInputStream(new FileInputStream(keyFile));
      } catch (FileNotFoundException e) {
        e.printStackTrace();
      }
</code></pre>
<p>When I am running this code through intelliJ on windows, the code works fine but when I run it through docker container I am getting following exception:</p>
<pre><code>org.bouncycastle.pkcs.PKCSException: unable to read encrypted data: failed to construct sequence from byte[]: Extra data detected in stream
snowflake-report-sync    |      at org.bouncycastle.pkcs.PKCS8EncryptedPrivateKeyInfo.decryptPrivateKeyInfo(Unknown Source) ~[bcpkix-jdk15on-1.64.jar!/:1.64.00.0]
snowflake-report-sync    |      at com.optum.snowflakereportsync.configuration.SnowFlakeConfig.getPrivateKey(SnowFlakeConfig.java:103) ~[classes!/:na]
snowflake-report-sync    |      at com.optum.snowflakereportsync.configuration.SnowFlakeConfig.getConnectionProperties(SnowFlakeConfig.java:67) ~[classes!/:na]
</code></pre>
<p>Following is Dockerfile used:</p>
<pre><code>FROM adoptopenjdk/openjdk11-openj9:latest
COPY build/libs/snowflake-report-sync-*.jar snowflake-report-sync.jar
RUN mkdir /encryption-keys
COPY encryption-keys/ /encryption-keys/ #keys are picked from docker filesystem when running in container
EXPOSE 8080
CMD java -Dcom.sun.management.jmxremote -noverify ${JAVA_OPTS} -jar snowflake-report-sync.jar
</code></pre>
<p><strong>Options tried:</strong></p>
<ul>
<li>Ensured that key file is being read while running in container. Logger &quot;InputStreamExists --&gt; {}&quot; gives number of bytes</li>
<li>Ran dos2unix on key.k8 just to make sure there are no Window's &quot;^M&quot; characters which be could be causing issue as container is linux one : FROM adoptopenjdk/openjdk11-openj9:latest</li>
</ul>
<p>Not sure what I am doing wrong but any help or pointers would be appreciated.</p>
","70905140","<p>Like @Bragolgirith suspected, BouncyCastle seems to have problems with OpenJ9. I guess it is not a Docker issue, because I can reproduce it on GitHub Actions, too. It is also not limited to BouncyCastle 1.64 or 1.70, it happens in both versions. It also happens on OpenJ9 JDK 11, 14, 17 on Windows, MacOS and Linux, but for the same matrix of Java and OS versions it works on Adopt-Hotspot and Zulu.</p>
<p>Here is an <a href=""https://github.com/kriegaex/SO_Java_BouncyCastleReadPkcs8PrivateKey_70786275"" rel=""nofollow noreferrer"">example Maven project</a> and a <a href=""https://github.com/kriegaex/SO_Java_BouncyCastleReadPkcs8PrivateKey_70786275/actions/runs/1765677050"" rel=""nofollow noreferrer"">failed matrix build</a>. So if you select another JVM type, you should be fine. I know that @Bragolgirith already suggested that, but I wanted to make the problem reproducible for everyone and also provide an <a href=""https://stackoverflow.com/help/mcve"">MCVE</a>, in case someone wants to open a BC or OpenJ9 issue.</p>
<p>P.S.: It is also not a character set issue with the <code>InputStreamReader</code>. <a href=""https://github.com/kriegaex/SO_Java_BouncyCastleReadPkcs8PrivateKey_70786275/actions/runs/1765686524"" rel=""nofollow noreferrer"">This build</a> fails exactly the same as before after I <a href=""https://github.com/kriegaex/SO_Java_BouncyCastleReadPkcs8PrivateKey_70786275/commit/40d53c3ddc1f501b99da2897d8155efeab2d2970"" rel=""nofollow noreferrer"">changed the constructor call</a>.</p>
<hr />
<p><strong>Update:</strong> I have created <a href=""https://github.com/bcgit/bc-java/issues/1099"" rel=""nofollow noreferrer"">BC-Java issue #1099</a>. Let's see what the maintainers can say about this.</p>
<hr />
<p><strong>Update 2:</strong> The solution to your problem is to explicitly set the security provider to BC for your input decryptor provider. Thanks to <a href=""https://github.com/dghgit"" rel=""nofollow noreferrer"">David Hook</a> for his <a href=""https://github.com/bcgit/bc-java/issues/1099#issuecomment-1025253004"" rel=""nofollow noreferrer"">helpful comment in #1099</a>.</p>
<pre class=""lang-java prettyprint-override""><code>BouncyCastleProvider securityProvider = new BouncyCastleProvider();
Security.addProvider(securityProvider);

// (...)

InputDecryptorProvider pkcs8Prov = new JceOpenSSLPKCS8DecryptorProviderBuilder()
  // Explicitly setting security provider helps to avoid ambiguities
  // which otherwise can cause problems, e.g. on OpenJ9 JVMs
  .setProvider(securityProvider)
  .build(passphrase.toCharArray());
</code></pre>
<p>See <a href=""https://github.com/kriegaex/SO_Java_BouncyCastleReadPkcs8PrivateKey_70786275/commit/3bd00184436f247ea6d7ad0d9f35508b26b4bba2"" rel=""nofollow noreferrer"">this commit</a> and the corresponding <a href=""https://github.com/kriegaex/SO_Java_BouncyCastleReadPkcs8PrivateKey_70786275/actions/runs/1770256851"" rel=""nofollow noreferrer"">build</a>, now passing on all platforms, Java versions and JVM types (including OpenJ9).</p>
<p>Because @Bragolgirith mentioned it in his answer: If you want to avoid the explicit <code>new JceOpenSSLPKCS8DecryptorProviderBuilder().setProvider(securityProvider)</code>, the call <code>Security.insertProviderAt(securityProvider, 1)</code> instead of simply <code>Security.addProvider(securityProvider)</code> would in this case also solve the problem. But this holds true only as long as no other part of your code or any third-party library sets another provider to position 1 afterwards, as explained in the <a href=""https://docs.oracle.com/javase/8/docs/api/java/security/Security.html#insertProviderAt-java.security.Provider-int-"" rel=""nofollow noreferrer"">Javadoc</a>. So maybe it is not a good idea to rely on that.</p>
"
"70995023","1","What's the difference between String.format() and str.formatted() in Java?","<p>I know that method <strong>String.format()</strong> is nearly the same as method <strong>System.out.printf()</strong> except it returns a String. But I could hardly find the introduction about method &quot;formatted&quot; which is defined as follows:</p>
<pre class=""lang-java prettyprint-override""><code>public String formatted(Object... args) {
        return new Formatter().format(this, args).toString();
}
</code></pre>
<p>And I know the functions of two codes below are the same.</p>
<pre class=""lang-java prettyprint-override""><code>String str1 = String.format(&quot;%s&quot;, &quot;abab&quot;);
System.out.println(str1);
</code></pre>
<pre class=""lang-java prettyprint-override""><code>String str2;
str2 = &quot;%s&quot;.formatted(&quot;abab&quot;);
System.out.println(str2);
</code></pre>
<p>Therefore I'm wandering what's the difference between them. Thank you!</p>
","70997302","<p>Make sure you use a good IDE so that you have easy access to browse into JDK source code. In Eclipse say, use F3 to open to any declaration. IntelliJ IDEA has similar feature.</p>
<p>If you view the source code for both methods, you can see these calls are identical except that variables <code>this</code> is interchanged with <code>format</code> when comparing the instance vs static method:</p>
<pre><code>public String formatted(Object... args) {
    return new Formatter().format(this, args).toString();
}
public static String format(String format, Object... args) {
    return new Formatter().format(format, args).toString();
}
</code></pre>
<p>So as you've observed: <code>String.format(str, args)</code> is same as <code>str.formatted(args)</code></p>
"
"71041836","1","GitHub Actions: Required property is missing: shell","<h2>Introduction</h2>
<p>I am currently to crate a composite GitHub Actions that build a JavaDoc from Java project and publish it automatically to a static page with GitHub Page.</p>
<h2>Problematic</h2>
<p>But I got this error when I try to run it:</p>
<pre><code>Current runner version: '2.287.1'
Operating System
Virtual Environment
Virtual Environment Provisioner
GITHUB_TOKEN Permissions
Secret source: Actions
Prepare workflow directory
Prepare all required actions
Getting action download info
Download action repository 'MathieuSoysal/Javadoc-publisher.yml@v2.0.2' (SHA:878c07f835dd9bcbb8800090d109c91b0f0d4581)
Error: MathieuSoysal/Javadoc-publisher.yml/v2.0.2/action.yml (Line: 29, Col: 5): Required property is missing: shell
Error: MathieuSoysal/Javadoc-publisher.yml/v2.0.2/action.yml (Line: 29, Col: 5): Required property is missing: shell
Error: GitHub.DistributedTask.ObjectTemplating.TemplateValidationException: The template is not valid. MathieuSoysal/Javadoc-publisher.yml/v2.0.2/action.yml (Line: 29, Col: 5): Required property is missing: shell
   at GitHub.DistributedTask.ObjectTemplating.TemplateValidationErrors.Check()
   at GitHub.Runner.Worker.ActionManifestManager.ConvertRuns(IExecutionContext executionContext, TemplateContext templateContext, TemplateToken inputsToken, String fileRelativePath, MappingToken outputs)
   at GitHub.Runner.Worker.ActionManifestManager.Load(IExecutionContext executionContext, String manifestFile)
Error: Fail to load MathieuSoysal/Javadoc-publisher.yml/v2.0.2/action.yml
</code></pre>
<h2>Affected code:</h2>
<pre class=""lang-yaml prettyprint-override""><code>name: Deploy Javadoc
description: 'Automatically  generate your Javadoc from your maven project and deploy it with GitHub Page on javadoc branch.'
branding:
  icon: 'book-open'
  color: 'white'
inputs:
  java-version:  # version of java
    description: 'Java version inside your project'
    required: true
    default: '17'
  GITHUB_TOKEN: # GitHub Token
    description: 'The GitHub token the GitHub repository'
    required: true
  javadoc-branch: # branch where the javadoc is hosted
    description: 'Branch where the javadoc is hosted'
    required: true
    default: javadoc
 
runs:
  using: &quot;composite&quot;
  steps:
  - uses: actions/checkout@v2
    with:
      fetch-depth: 0
  - uses: actions/setup-java@v2
    with:
      java-version: ${{ inputs.java-version }}
      distribution: 'adopt'
  - name: Generate Javadoc
    run: mvn org.apache.maven.plugins:maven-javadoc-plugin:3.3.1:aggregate
  - name: Deploy 🚀
    uses: JamesIves/github-pages-deploy-action@4.1.8
    with:
      GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      BRANCH: ${{ inputs.javadoc-branch }}
      CLEAN: true
      FOLDER: target/site/apidocs
      TARGET_FOLDER: javadoc
</code></pre>
<h2>Code that execute the GitHub Actions in question:</h2>
<pre class=""lang-yaml prettyprint-override""><code>name: Deploy Javadoc

on:
  push:
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy JavaDoc 🚀
        uses: MathieuSoysal/Javadoc-publisher.yml@v2.0.3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          javadoc-branch: javadoc
          java-version: 17
</code></pre>
<h2>Question</h2>
<p>Anyone have an idea to solve this problem?</p>
","71042698","<p>When using composite actions, you have to specify the shell.</p>
<p>As you don’t specify a runner type in composite actions, you need to specify the shell instead for each action.</p>
<p>In your case, the problem is in this step, you need to add <code>shell: bash</code> here:</p>
<pre><code>- name: Generate Javadoc
  shell: bash
  run: mvn org.apache.maven.plugins:maven-javadoc-plugin:3.3.1:aggregate
</code></pre>
<p>Docs: <a href=""https://docs.github.com/en/actions/creating-actions/creating-a-composite-action#creating-an-action-metadata-file"" rel=""noreferrer"">https://docs.github.com/en/actions/creating-actions/creating-a-composite-action#creating-an-action-metadata-file</a></p>
"
"70791142","1","Could not set unknown property 'mainClassName' for extension 'springBoot' of type org.springframework.boot.gradle.dsl.SpringBootExtension","<p>I have <code>build.gradle</code> like this and it works :</p>
<pre><code>plugins {
    id 'org.springframework.boot' version '2.5.8' apply false
    ...
}
...
    springBoot {
        mainClassName = 'com.mir3.service.contactfileparser.Main'
    }
</code></pre>
<p>but if I upgrade spring boot version to 2.6.2 it fails with error:</p>
<pre><code>plugins {
    id 'org.springframework.boot' version '2.6.2' apply false
    ...
}
...
    springBoot {
        mainClassName = 'com.mir3.service.contactfileparser.Main'
    }
</code></pre>
<p>Error text is:</p>
<pre><code>A problem occurred evaluating root project 'myProject'.
&gt; Could not set unknown property 'mainClassName' for extension 'springBoot' of type org.springframework.boot.gradle.dsl.SpringBootExtension.
</code></pre>
<p>How can I fix it ? What is the proper way to migrate from 2.5.8 to 2.6.2 ?</p>
","70792363","<p>Use:</p>
<pre><code>springBoot {
    mainClass = 'com.mir3.service.contactfileparser.Main'
}
</code></pre>
<p><code>SpringBootExtension</code> has:</p>
<pre class=""lang-java prettyprint-override""><code>/**
 * Returns the fully-qualified name of the application's main class.
 * @return the fully-qualified name of the application's main class
 * @since 2.4.0
 */
public Property&lt;String&gt; getMainClass() {
    return this.mainClass;
}
</code></pre>
<p><code>mainClassName</code> was deprecated in favour of <code>mainClass</code> in 2.4.0 and was scheduled for removal in 2.6.0. It was removed with this commit: <a href=""https://github.com/spring-projects/spring-boot/commit/dc5acb00191c2eac09907c39e4d890343bf9848d#diff-ef03c7708a81d6f41f69961e5c539e8156554321c5c5da8058a8de970a102694"" rel=""noreferrer"">Remove deprecated code flagged for removal</a></p>
"
"70793779","1","Idiomatic way to remove country code from currency format?","<p>Somewhere between Java 11 and 17 currency formatting changed to where this:</p>
<pre><code>NumberFormat.getCurrencyInstance(Locale.CANADA_FRENCH).format(100.00)
</code></pre>
<p>would print <code>100,00 $ CA</code> instead of <code>100,00 $</code>.</p>
<p>Is there a better way than this to remove the country code <code>CA</code>?</p>
<pre><code>var currencyFormat = NumberFormat.getCurrencyInstance(Locale.CANADA_FRENCH);
if (currencyFormat instanceof DecimalFormat decimalFormat) {
    var symbols = DecimalFormatSymbols.getInstance(Locale.CANADA_FRENCH);
    symbols.setCurrencySymbol(&quot;$&quot;);
    decimalFormat.setDecimalFormatSymbols(symbols);
}
</code></pre>
<p>Seems a bit much just to get back something that was the default behavior up until recently.</p>
","70911567","<p>I dug a bit into this, the JDK locale data comes from <a href=""https://cldr.unicode.org/"" rel=""noreferrer"">Unicode CLDR</a> by default, and it seems they reverted from <code>$ CA</code> to <code>$</code> back in August, see <a href=""https://unicode-org.atlassian.net/browse/CLDR-14862"" rel=""noreferrer"">CLDR-14862</a> and <a href=""https://github.com/unicode-org/cldr/commit/fc32a0e599df85cd7279eb28a659f80bdeade443#diff-577c5fdc71fbb0148e4c5f450f57a6abb42bc26a85f0adc42f3ea1dd551dc98d"" rel=""noreferrer"">this commit</a> (expand <code>common/main/fr_CA.xml</code> and then go to lines 5914/5923).</p>
<p>This was part of v40, released in October, so too late for JDK 17 <a href=""https://www.oracle.com/java/technologies/javase/jdk17-suported-locales.html#providers"" rel=""noreferrer"">whose doc says it uses CLDR v35.1</a>
(which was <a href=""https://bugs.openjdk.java.net/browse/JDK-8221432"" rel=""noreferrer"">introduced in Java 13</a>)
but it seems it was <a href=""https://bugs.openjdk.java.net/browse/JDK-8258794"" rel=""noreferrer"">updated to v39</a> in April 2021 and
<a href=""https://bugs.openjdk.java.net/browse/JDK-8265308"" rel=""noreferrer"">they forgot the release note</a>
(JDK 16 appears to have been <a href=""https://bugs.openjdk.java.net/browse/JDK-8251317"" rel=""noreferrer"">upgraded to v38</a> already).</p>
<p>CLDR v40 is <a href=""https://bugs.openjdk.java.net/browse/JDK-8265315"" rel=""noreferrer"">planned for JDK 19</a>.</p>
<p>You may want to run your application using the <code>COMPAT</code> locales first, with</p>
<pre><code>-Djava.locale.providers=COMPAT,CLDR,SPI
</code></pre>
<p>(<a href=""https://stackoverflow.com/a/65221042/525036"">found here</a> but see also <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/spi/LocaleServiceProvider.html"" rel=""noreferrer""><code>LocaleServiceProvider</code></a>)</p>
<p>This will use the locales compatible with Java 8, where this issue is not present.</p>
"
"71051529","1","How to replace deprecated SeekToCurrentErrorHandler with DefaultErrorHandler (spring-kafka)?","<p>I am trying to find a way to use the new DefaultErrorHandler instead of deprecated SeekToCurrentErrorHandler in spring-kafka 2.8.1, in order to override the retry default behavior in case of errors. I want to &quot;stop&quot; the retry process, so if an error occurs, no retry should be done.</p>
<p>Now I have, in a config class, the following bean that works as expected:</p>
<pre><code>@Bean
public KafkaListenerContainerFactory&lt;ConcurrentMessageListenerContainer&lt;String, String&gt;&gt; kafkaListenerContainerFactory() {
    ConcurrentKafkaListenerContainerFactory&lt;String, String&gt; factory = new ConcurrentKafkaListenerContainerFactory&lt;&gt;();
    factory.setErrorHandler(new **SeekToCurrentErrorHandler(new FixedBackOff(0L, 1L)**));
    factory.setConsumerFactory(requestConsumerFactory());
    factory.setReplyTemplate(kafkaTemplate());
    return factory;
}
</code></pre>
<p>Since in this spring kafka version, the STCEH is deprecated, I tried to do the following, in the same config class:</p>
<pre><code>@Bean
public DefaultErrorHandler eh() {
    return new DefaultErrorHandler(new FixedBackOff(0, 1));
}
</code></pre>
<p>But it seems that it is not working. In case of error, the retry number is the default one, as I can see in logs:</p>
<p>[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR DefaultErrorHandler              - Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for topicX</p>
<p>How should this DefaultErrorHandler be used in order to achieve the desired behavior? Or should I use something else?</p>
<p>Thx in advance!</p>
","71052157","<p><code>factory.setCommonErrorHandler(new Default....)</code></p>
<p>Boot auto configuration of a <code>CommonErrorHandler</code> bean requires Boot 2.6.</p>
<p><a href=""https://github.com/spring-projects/spring-boot/commit/c3583a4b06cff3f53b3322cd79f2b64d17211d0e"" rel=""noreferrer"">https://github.com/spring-projects/spring-boot/commit/c3583a4b06cff3f53b3322cd79f2b64d17211d0e</a></p>
"
"71059252","1","Mac The operation couldn’t be completed. Unable to locate a Java Runtime that supports jarsigner","<p>My purpose is to use jarsigner to sign apk.</p>
<p>I get the following prompt：</p>
<pre><code>% jarsigner     
The operation couldn’t be completed. Unable to locate a Java Runtime that supports jarsigner.
Please visit http://www.java.com for information on installing Java.
</code></pre>
<p>my java version hint：</p>
<pre><code>% java -version
java version &quot;1.8.0_321&quot;
Java(TM) SE Runtime Environment (build 1.8.0_321-b07)
Java HotSpot(TM) 64-Bit Server VM (build 25.321-b07, mixed mode)
</code></pre>
<p>Mac version is 11.6.3</p>
<p>How can I solve this problem please?</p>
","71059860","<p>I finally solved it by downloading the <a href=""https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html"" rel=""noreferrer"">JDK</a></p>
"
"70997077","1","Spring Web MVC vs Spring WebFlux. Blocking and Non-blocking","<p>I'm new at Spring and I'm reading one book &quot;Pro Spring boot 2&quot;. It says here that Spring Web MVC has some blocking on each request, and Spring Webflux is a completely non-blocking stack.</p>
<ol>
<li>Tell me, please, what is meant?</li>
<li>The request that came to Spring MVC activates one thread to execute this request. When and why is it blocked?</li>
<li>And why doesn't Spring WebFlux block thread?</li>
</ol>
","71000069","<ol>
<li>Spring Web MVC takes a single thread to handle each request to your API. Spring Webflux does not block a thread to handle each request, because no thread is kept waiting for something to be done (e.g. waiting for an answer from a database).</li>
<li>As written in 1., it can be blocked while waiting for an answer from a database or from another service that is called via HTTP.</li>
<li>Spring Webflux takes advantage of the reactive stack (take a look at <a href=""https://projectreactor.io/"" rel=""noreferrer"">https://projectreactor.io/</a>) which is fully non-blocking. This means that no thread is blocked waiting for something to happen. Everything is based on reactive streams publishers (<a href=""https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html"" rel=""noreferrer"">Mono</a> and <a href=""https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html"" rel=""noreferrer"">Flux</a>) making your code reactive to data being available (from a database or from another service called via HTTP as examples).</li>
</ol>
"
"70857274","1","Android 12 Splash Screen API - Increasing SplashScreen Duration","<p>I am learning Android's new SplashScreen API introduced with Android 12. I have so far gotten it to work on my Emulator and Google Pixel 4A, but I want to increase its duration. In my Splash Screen I do not want a fancy animation, I just want a static drawable.</p>
<p>I know, I know (sigh) some of you might be thinking, that I should not increase the duration and I know there are several good arguments in favor of not doing so. However, for me the duration of a splash screen with a non animated drawable is so brief (less than a second), I think it raises an accessibility concern, especially so since it cannot be disabled (ironically). Simply, the organization behind the product or its brand/product identity cannot be properly absorbed or recognized by a new user at that size and in that time, rendering  the new splash screen redundant.</p>
<p>I see the property windowSplashScreenAnimationDuration in the theme for the splash screen (shown below), but this has no effect on the duration presumably because I am not animating.</p>
<pre><code> &lt;style name=&quot;Theme.App.starting&quot; parent=&quot;Theme.SplashScreen&quot;&gt;
        &lt;!--Set the splash screen background, animated icon, and animation duration.--&gt;
        &lt;item name=&quot;windowSplashScreenBackground&quot;&gt;@color/gold&lt;/item&gt;
    
        &lt;!-- Use windowSplashScreenAnimatedIcon to add either a drawable or an
             animated drawable. One of these is required--&gt;
        &lt;item name=&quot;windowSplashScreenAnimatedIcon&quot;&gt;@drawable/accessibility_today&lt;/item&gt;
        &lt;item name=&quot;windowSplashScreenAnimationDuration&quot;&gt;300&lt;/item&gt; &lt;!--# Required for--&gt;
                                                                    &lt;!--# animated icons--&gt;
        &lt;!--Set the theme of the activity that directly follows your splash screen--&gt;
        &lt;item name=&quot;postSplashScreenTheme&quot;&gt;@style/Theme.MyActivity&lt;/item&gt;
    
        &lt;item name=&quot;android:windowSplashScreenBrandingImage&quot;&gt;@drawable/wculogo&lt;/item&gt;
    
    &lt;/style&gt;
</code></pre>
<p>Is there a straightforward way to extend the duration of a non animated splash screen?</p>
","70857275","<p>As I was writing this question and almost ready to post it, I stumbled on the method setKeepOnScreenCondition (below) that belongs to the splashScreen that we must install on the onCreate of our main activity. I thought it seemed wasteful not to post this, given there are no other posts on this topic and no such similar answers to other related questions (as of Jan 2022).</p>
<pre><code>SplashScreen splashScreen = SplashScreen.installSplashScreen(this);
plashScreen.setKeepOnScreenCondition(....);
</code></pre>
<p>Upon inspecting it I found this method receives an instance of the <strong>splashScreen.KeepOnScreenCondition()</strong> interface for which the implementation must supply the following method signature implementation:</p>
<pre><code> public boolean shouldKeepOnScreen() 
</code></pre>
<p>It seems this method will be called by the splash screen and retain the splash screen visibly until it returns false.  This is where the light bulb moment I so love about programming occurred.</p>
<p>What if I use a boolean initialized as true, and set it to false after a delay? That hunch turned out to work. Here is my solution. It seems to work and I thought it would be useful to others. Presumably instead of using a Handler for a delay, one could  also use this to set the boolean after some process had completed.</p>
<pre><code>package com.example.mystuff.myactivity;

import androidx.appcompat.app.AppCompatActivity;
import androidx.core.splashscreen.SplashScreen;
import android.os.Bundle;
import android.os.Handler;

public class MainActivity extends AppCompatActivity {
    
    private boolean keep = true;
    private final int DELAY = 1250;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        // Handle the splash screen transition.
        SplashScreen splashScreen = SplashScreen.installSplashScreen(this);
        super.onCreate(savedInstanceState);

        //Keep returning false to Should Keep On Screen until ready to begin.
        splashScreen.setKeepOnScreenCondition(new SplashScreen.KeepOnScreenCondition() {
            @Override
            public boolean shouldKeepOnScreen() {
                return keep;
            }
        });
        Handler handler = new Handler();
        handler.postDelayed(runner, DELAY);
    }

    /**Will cause a second process to run on the main thread**/
    private final Runnable runner = new Runnable() {
        @Override
        public void run() {
            keep = false;
        }
    };
    
}
</code></pre>
<p>If you are into Java Lambdas an even nicer and more compact solution is as follows:</p>
<pre><code>package com.example.mystuff.myactivity;

import androidx.appcompat.app.AppCompatActivity;
import androidx.core.splashscreen.SplashScreen;
import android.os.Bundle;
import android.os.Handler;

public class MainActivity extends AppCompatActivity {
    
    private boolean keep = true;
    private final int DELAY = 1250;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        // Handle the splash screen transition.
        SplashScreen splashScreen = SplashScreen.installSplashScreen(this);
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        //Keep returning false to Should Keep On Screen until ready to begin.
    splashScreen.setKeepOnScreenCondition(() -&gt; keep);
    Handler handler = new Handler();
    handler.postDelayed(() -&gt; keep = false, DELAY);;
    }


    
}
</code></pre>
<p>If you have comments or feedback (besides telling me I should not increase the duration of the splash screen), or a better way please do comment or respond with additional answers.</p>
"
"70925555","1","How can we provide Jackson annotations for java 17 record class","<p>How can we create add field level annotations for java 17 record class?</p>
<pre><code>record Rectangle(double length, double width) { }
</code></pre>
","70925601","<p>yes we can use field level annotations (annotation with <code>@Target(ElementType.FIELD)</code> in the defination.</p>
<pre><code>@JsonInclude(Include.NON_NULL)
record Rectangle(
    @JsonProperty(&quot;lengthAlias&quot;) double length,
    double width) { }
</code></pre>
"
"70819069","1","Springboot: Better handling of error messages","<p>I'm developing an API with Spring Boot and currently, I'm thinking about how to handle error messages in an easily internationalizable way. My goals are as follows:</p>
<ol>
<li>Define error messages in resource files/bundles</li>
<li>Connect constraint annotation with error messages (e.g., <code>@Length</code>) in a declarative fashion</li>
<li>Error messages contain placeholders, such as <code>{min}</code>, that are replaced by the corresponding value from the annotation, if available, e.g., <code>@Length(min = 5, message = msg)</code> would result in something like <code>msg.replace(&quot;{min}&quot;, annotation.min()).replace(&quot;{max}&quot;, annotation.max())</code>.</li>
<li>The JSON property path is also available as a placeholder and automatically inserted into the error message when a validation error occurs.</li>
<li>A solution outside of an error handler is preferred, i.e., when the exceptions arrive in the error handler, they already contain the desired error messages.</li>
<li>Error messages from a resource bundle are automatically registered as constants in Java.</li>
</ol>
<p>Currently, I customized the <code>methodArgumentNotValidHandler</code> of my error handler class to read <code>ObjectError</code>s from <code>e.getBindingResult().getAllErrors()</code> and then try to extract their arguments and error codes to decide which error message to choose from my resource bundle and format it accordingly. A rough sketch of my code looks as follows:</p>
<p>Input:</p>
<pre><code>@Data
@RequiredArgsConstructor
public class RequestBody {
  @NotNull
  @NotBlank(message = ErrorConstants.NOT_BLANK)
  @Length(min = 5, max = 255, message = ErrorConstants.LENGTH_MIN_MAX) // LENGTH_MIN_MAX = validation.length.min-max
  private String greeting;
}
</code></pre>
<p>Error handler:</p>
<pre><code>@ResponseBody
@ExceptionHandler(MethodArgumentNotValidException.class)
@ResponseStatus(HttpStatus.BAD_REQUEST)
ErrorMessage methodArgumentNotValidHandler(MethodArgumentNotValidException e) {
  ObjectError objectError = e.getBindingResult().getAllErrors().get(0);
  Object[] arguments = objectError.getArguments();
  String messageCode = objectError.getDefaultMessage(); // e.g., &quot;validation.length.min-max&quot; (key in resource bundle)
  ResourceBundle errMsgBundle = ResourceBundle.getBundle(&quot;errorMsg&quot;);
  String message;
  if (objectError.getCode().equals(&quot;Length&quot;)) {
    String messageTemplate = errMsgBundle.getString(messageCode);
    message = String.format(messageTemplate, arguments[2], arguments[1]);
  } else {
    message = &quot;Bad input, but I cannot tell you the problem because the programmer hasn't handled this yet. Sorry :'(&quot;;
  }
  return new ErrorMessage(message);
}
</code></pre>
<p>Unfortunately, I suppose this approach is not maintainable. In the error handler, I will end up with a huge if-else block that has to probe several different situations (error codes, number of arguments, ...) and format error messages accordingly. Changing error messages will possibly result in having to change the code (e.g., the order of arguments). Each property key must be present as a constant in <code>ErrorConstants</code>, which I find undesirable. This code also doesn't query the name or path of the faulty property, e.g., &quot;name&quot;.</p>
<p>Hence,</p>
<ol>
<li>is there a solution that can satisfy some or all of the above-mentioned requirements?</li>
<li>At which place would I implement this?</li>
<li>Is there at least a better solution to the above one?</li>
<li>Are there recipes or patterns in SpringBoot to handle validation errors (I'm definitely not the first one thinking about this)?</li>
</ol>
","70936114","<p>After some digging around, I found the confirmation that what I was looking for was indeed built-in already as this is a question I expect every developer who want to acquit oneself well would ask. And indeed, this question has been <a href=""https://stackoverflow.com/questions/4186556/hibernate-validator-custom-resourcebundlelocator-and-spring"">asked already</a> (I could have found it earlier if I would have verbalized my requirements correctly). I was just asking to customize my localized error messages via resource bundles.</p>
<p>When I create the resource bundle in the resources folder containing my custom error messages and name it &quot;validation_errors.properties&quot;, then I can make the validator using these messages by creating a corresponding bean:</p>
<pre><code>@Bean
public Validator validatorFactory (MessageSource messageSource) {
    LocalValidatorFactoryBean validator =  new LocalValidatorFactoryBean();
    validator.setValidationMessageSource(messageSource);
    return validator;
}

@Bean
public MessageSource messageSource() {
    ReloadableResourceBundleMessageSource bean = new ReloadableResourceBundleMessageSource();
    bean.addBasenames(&quot;classpath:org.hibernate.validator.ValidationMessages&quot;, &quot;classpath:validation_errors&quot;); // validation_errors.properties is my resource bundle
    bean.setDefaultEncoding(&quot;UTF-8&quot;);
    return bean;
}
</code></pre>
<p>My custom validator retrieves the validation messages from an instance of <code>ReloadableResourceBundleMessageSource</code>, which in turn retrieves them from a properties file.</p>
<p>The properties file contains the qualified path of the &quot;message&quot; parameter of a validation annotation as keys and values arbitrary strings, where strings in curly brackets are replaced by arguments from the validation annotation and <a href=""https://docs.spring.io/spring-framework/docs/4.3.12.RELEASE/spring-framework-reference/html/expressions.html"" rel=""nofollow noreferrer"">SpEL expressions</a> are evaluated.</p>
<pre><code>javax.validation.constraints.NotNull.message = Not null please!
javax.validation.constraints.NotBlank.message = Not empty please!
org.hibernate.validator.constraints.Length.message = String length between {min} and {max} please!
</code></pre>
<p>Next, in my error handler, I need to detect and unpack if the <code>ObjectError</code> instance in <code>MethodArgumentNotValidException</code> contains a <code>ConstraintViolation</code> (to simplify this example, I ignore other error sources):</p>
<pre><code>@ResponseBody
@ExceptionHandler(MethodArgumentNotValidException.class)
@ResponseStatus(HttpStatus.BAD_REQUEST)
List&lt;ErrorMessage&gt; methodArgumentNotValidHandler(MethodArgumentNotValidException e) {
    return e.getBindingResult().getAllErrors().stream()
            .filter(objectError -&gt; objectError.contains(ConstraintViolation.class))
            .map(objectError -&gt; objectError.unwrap(ConstraintViolation.class))
            .map(ConstraintViolation::getMessage)
            .map(message -&gt; new ErrorMessage(&quot;VE-400&quot;, message))
            .collect(Collectors.toList());
}
</code></pre>
<p>This solution meets requirements 1, 3, 5 and 6. Requirement 2 is considered invalid as it's tied to a specific solution that I had in mind when I asked this question. Requirement 4 remains open, SpEL might be a possibility to look further, otherwise I would continue exploring <a href=""https://stackoverflow.com/a/70931698/2989330"">Tris answer</a>.</p>
"
"70957923","1","Save authenticated users to database coming from Azure AD","<p>I am working on a simple web app for learning purposes using Angular for the frontend and Java Spring for the backend. I don't have a particular problem that I want you guys to help me out with, instead I have a question about OAuth2 authentication.</p>
<p>I have registered my Angular SPA in Azure AD (Authorization Code Flow + PKCE), I set up roles and everything is working okay. My question is what do I do when authenticated users ping my backend? My backend has no information about the users.</p>
<p>I thought of a solution to make a web filter, and every time an authenticated user pings any endpoint requiring the user to be authenticated, to check the database if the user exists (through the username), and save him if he does not exist. I'm pretty sure this will work, but I don't think this is the best solution, considering my web filter will have to read from the databases for every single HTTP request that comes in, and write to the database occasionally (if the user logs in for the first time).</p>
<p>I shouldn't be worried about performance issues because I'm building this strictly for learning purposes, but nevertheless I want to do this the right way. I tried googling this in multiple ways, but I guess I'm not using the right keywords to find what I'm looking for. Any opinion or advice would be much appreciated! Thanks!</p>
<p>EDIT: I followed this article to achieve the OAuth2 + OIDC authentication and authorization, my security config in the backend is the same: <a href=""https://ordina-jworks.github.io/security/2020/08/18/Securing-Applications-Azure-AD.html"" rel=""noreferrer"">https://ordina-jworks.github.io/security/2020/08/18/Securing-Applications-Azure-AD.html</a></p>
","71068091","<p>Post the discussion with clarity on the requirements. If you want to use have the following:</p>
<ul>
<li>Accept an Azure AD logged in user to consumer your web service</li>
<li>You would want to check if the user exists in your application database with minimal network latency.</li>
</ul>
<p>With the requirement of not always hitting your Database, one option is to use a cache.</p>
<p><strong>The ideal solution</strong> for this cache to work is:</p>
<ul>
<li>Ensure the cache is checked for every HTTP Request using Web Filter</li>
<li>Make sure the cache is always updated with the latest users being logged in via Azure AD</li>
</ul>
<p>Example:</p>
<p>Implement a <code>CacheService.java</code></p>
<pre><code>package com.example.springboot;

import java.util.Collections;

import org.apache.catalina.User;
import org.springframework.cache.CacheManager;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.cache.concurrent.ConcurrentMapCache;
import org.springframework.cache.support.SimpleCacheManager;
import org.springframework.context.annotation.Bean;
import org.springframework.stereotype.Component;

@Component
public class CacheService {

  @Bean
  public CacheManager cacheManager() {
    SimpleCacheManager cacheManager = new SimpleCacheManager();
    cacheManager.setCaches(Collections.singletonList(new ConcurrentMapCache(&quot;users&quot;)));
    return cacheManager;
  }


  @Cacheable(cacheNames = &quot;users&quot;)
  public User getUser(String username) {
    // Code below will not execute after the first calling for the given username. 
    // So if one username is already cached, it would not invoke for the same user again from the DB.

    // Get or Create a new user based on the Database call
    return null;
  }
}
</code></pre>
<p>Then implement a web filter like:</p>
<pre><code>package com.example.springboot;

import java.io.IOException;

import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.filter.GenericFilterBean;

@Component
public class CredentialsInjectionFilter extends GenericFilterBean {

  @Autowired
  private CacheService cacheService;

  @Override
  public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse,
      FilterChain filterChain) throws IOException, ServletException {

    cacheService.getUser(&quot;my_username&quot;);

    filterChain.doFilter(servletRequest, servletResponse);
  }
}
</code></pre>
<p>More on Caching with Springboot: <a href=""https://www.javadevjournal.com/spring/spring-caching/"" rel=""nofollow noreferrer"">https://www.javadevjournal.com/spring/spring-caching/</a></p>
"
"70914692","1","minio Unsupported OkHttp library found. Must use okhttp >= 4.8.1","<p>after using minio as instructions and fixing it with ways below, I failed.what can i do to solve this bug</p>
<pre><code>        &lt;dependency&gt;
        &lt;groupId&gt;io.minio&lt;/groupId&gt;
        &lt;artifactId&gt;minio&lt;/artifactId&gt;
        &lt;version&gt;8.3.5&lt;/version&gt;
        &lt;exclusions&gt;
            &lt;exclusion&gt;
                &lt;artifactId&gt;okhttp&lt;/artifactId&gt;
                &lt;groupId&gt;com.squareup.okhttp3&lt;/groupId&gt;
            &lt;/exclusion&gt;
        &lt;/exclusions&gt;
    &lt;/dependency&gt;
    &lt;!-- https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp --&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;com.squareup.okhttp3&lt;/groupId&gt;
        &lt;artifactId&gt;okhttp&lt;/artifactId&gt;
        &lt;version&gt;4.9.3&lt;/version&gt;
    &lt;/dependency&gt;
&lt;/dependencies&gt;
</code></pre>
","71050627","<p>I also experienced this issues with <code>io.minio:minio:8.3.6</code>, but was able to force a newer version of <code>okhttp</code>, which works with the MinIO client library. Here is the snippet of <code>build.gradle</code> (should work similar with Maven):</p>
<pre><code>implementation(&quot;io.minio:minio:8.3.6&quot;)    
implementation(&quot;com.squareup.okhttp3:okhttp:4.9.3&quot;)
</code></pre>
<p>In my case it was probably caused by <code>spring-boot-dependencies</code> coming with the spring dependency plugin, which manages a lot of dependencies containing also <code>okhttp</code> and thus forces the downgrade.</p>
<p>See also:</p>
<ul>
<li><a href=""https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies/2.6.3"" rel=""nofollow noreferrer"">https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies/2.6.3</a></li>
<li><a href=""https://github.com/minio/minio-java/issues/1298"" rel=""nofollow noreferrer"">https://github.com/minio/minio-java/issues/1298</a></li>
</ul>
<h1>Update</h1>
<p>With Spring Boot 2.7.0, the fix is no longer required, since the version requirements for okhttp have been updated. The MinIO dependency should work now out of the box.</p>
"
"71224833","1","Lambda expressions and anonymous classes don't work when loaded as hidden classes","<p>I am trying to compile and load dynamically generated Java code during runtime. Since both ClassLoader::defineClass and Unsafe::defineAnonymousClass have serious drawbacks in this scenario, I tried using <a href=""https://openjdk.java.net/jeps/371"" rel=""noreferrer"">hidden classes</a> via <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/invoke/MethodHandles.Lookup.html#defineHiddenClass(byte%5B%5D,boolean,java.lang.invoke.MethodHandles.Lookup.ClassOption...)"" rel=""noreferrer"">Lookup::defineHiddenClass</a> instead. This works fine for all classes that I tried to load, except for those that call lambda expressions or contain anonymous classes.</p>
<p>Calling a lambda expression throws the following exception:</p>
<pre><code>Exception in thread &quot;main&quot; java.lang.NoClassDefFoundError: tests/HiddenClassLambdaTest$LambdaRunner/0x0000000800c04400
    at tests.HiddenClassLambdaTest.main(HiddenClassLambdaTest.java:22)
Caused by: java.lang.ClassNotFoundException: tests.HiddenClassLambdaTest$LambdaRunner.0x0000000800c04400
    at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:636)
    at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:182)
    at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:519)
    ... 1 more
</code></pre>
<p>Executing code that instantiates an anonymous class throws the following error:</p>
<pre><code>Exception in thread &quot;main&quot; java.lang.VerifyError: Bad type on operand stack
Exception Details:
  Location:
    tests/HiddenClassLambdaTest$LambdaRunner+0x0000000800c00400.run()V @5: invokespecial
  Reason:
    Type 'tests/HiddenClassLambdaTest$LambdaRunner+0x0000000800c00400' (current frame, stack[2]) is not assignable to 'tests/HiddenClassLambdaTest$LambdaRunner'
  Current Frame:
    bci: @5
    flags: { }
    locals: { 'tests/HiddenClassLambdaTest$LambdaRunner+0x0000000800c00400' }
    stack: { uninitialized 0, uninitialized 0, 'tests/HiddenClassLambdaTest$LambdaRunner+0x0000000800c00400' }
  Bytecode:
    0000000: bb00 1159 2ab7 0013 4cb1               

    at java.base/java.lang.ClassLoader.defineClass0(Native Method)
    at java.base/java.lang.System$2.defineClass(System.java:2193)
    at java.base/java.lang.invoke.MethodHandles$Lookup$ClassDefiner.defineClass(MethodHandles.java:2446)
    at java.base/java.lang.invoke.MethodHandles$Lookup$ClassDefiner.defineClassAsLookup(MethodHandles.java:2427)
    at java.base/java.lang.invoke.MethodHandles$Lookup.defineHiddenClass(MethodHandles.java:2133)
    at tests.HiddenClassLambdaTest.main(HiddenClassLambdaTest.java:25)

</code></pre>
<p>This is a short example that recreates the problem:</p>
<pre><code>import java.lang.invoke.MethodHandles;

public class HiddenClassLambdaTest {
    /** This class is to be loaded and executed as hidden class */
    public static final class LambdaRunner implements Runnable {
        @Override public void run() {
            Runnable runnable = () -&gt; System.out.println(&quot;Success&quot;);
            runnable.run();
        }
    }
    
    public static void main(String[] args) throws Throwable {
        // Path to the class file of the nested class defined above
        String nestedClassPath = HiddenClassLambdaTest.class.getTypeName().replace('.','/') + &quot;$LambdaRunner.class&quot;;
        // Class file content of the LambdaRunner class
        byte[] classFileContents = HiddenClassLambdaTest.class.getClassLoader().getResourceAsStream(nestedClassPath).readAllBytes();
        Class&lt;?&gt; lambdaRunnerClass = MethodHandles.lookup().defineHiddenClass(classFileContents, true).lookupClass();
        Runnable lambdaRunnerInstance = (Runnable) lambdaRunnerClass.getConstructor().newInstance();
        lambdaRunnerInstance.run();
    }
}
</code></pre>
<p>I've already tried compiling and running the code with different JDKs, using different ways to create new instances of the hidden class, searching for bugs at <a href=""https://bugs.openjdk.java.net/"" rel=""noreferrer"">https://bugs.openjdk.java.net/</a>, messing with the bytecode itself and several other things. I am not an expert on Java internals, so I am not sure whether I have not understood the JEP that introduced hidden classes correctly.</p>
<p>Am I doing something wrong, is this just impossible or is this a bug?</p>
<p>Edit: The <a href=""https://openjdk.java.net/jeps/371"" rel=""noreferrer"">JEP</a> states</p>
<blockquote>
<p>Migration should take the following into account:
To invoke private nestmate instance methods from code in a hidden class, use invokevirtual or invokeinterface instead of invokespecial. Generated bytecode that uses invokespecial to invoke a private nestmate instance method will fail verification. invokespecial should only be used to invoke private nestmate constructors.</p>
</blockquote>
<p>This might be the problem for the anonymous class. Is there a way to compile the code such that invokespecial is avoided in the bytecode?</p>
","71242195","<p>You can not turn arbitrary classes into hidden classes.</p>
<p>The <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/invoke/MethodHandles.Lookup.html#defineHiddenClass(byte%5B%5D,boolean,java.lang.invoke.MethodHandles.Lookup.ClassOption...)"" rel=""noreferrer"">documentation of <code>defineHiddenClass</code></a> contains the sentence</p>
<blockquote>
<ul>
<li>On any attempt to resolve the entry in the run-time constant pool indicated by <code>this_class</code>, the symbolic reference is considered to be resolved to <code>C</code> and resolution always succeeds immediately.</li>
</ul>
</blockquote>
<p>What it doesn’t spell out explicitly is that this is the only place where a type resolution ever ends up at the hidden class.</p>
<p>But it has been said unambiguously in <a href=""https://bugs.openjdk.java.net/browse/JDK-8222730"" rel=""noreferrer"">bug report JDK-8222730</a>:</p>
<blockquote>
<p>For a hidden class, its specified hidden name should only be accessible through the hidden class's 'this_class' constant pool entry.</p>
<p>The class should not be accessible by specifying its original name in, for example, a method or field signature even within the hidden class.</p>
</blockquote>
<p>Which we can check. Even a simple case like</p>
<pre class=""lang-java prettyprint-override""><code>public class HiddenClassLambdaTest {

    public static void main(String[] args) throws Throwable {
        byte[] classFileContents = HiddenClassLambdaTest.class
            .getResourceAsStream(&quot;HiddenClassLambdaTest$LambdaRunner.class&quot;)
            .readAllBytes();
        var hidden = MethodHandles.lookup()
            .defineHiddenClass(classFileContents, true, ClassOption.NESTMATE);
        Runnable lambdaRunnerInstance = (Runnable)hidden.findConstructor(
            hidden.lookupClass(), MethodType.methodType(void.class)).invoke();
        lambdaRunnerInstance.run();
    }

    static class LambdaRunner implements Runnable {
        LambdaRunner field = this;

        @Override
        public void run() {
        }
    }
}
</code></pre>
<p>will already fail. Note that it is a special case that the attempt to resolve the original class name <code>LambdaRunner</code> within the hidden class will not fail, as you used an existing class as template. So you get an <code>IncompatibleClassChangeError</code> or a <code>VerifierError</code> due to mismatches between the hidden class and the existing <code>LambdaRunner</code> class. When you don’t use a class definition of an existing class, you’d get a <code>NoClassDefFoundError</code>.</p>
<p>The same applies to</p>
<pre class=""lang-java prettyprint-override""><code>    static class LambdaRunner implements Runnable {
        static void method(LambdaRunner arg) {
        }

        @Override
        public void run() {
            method(this);
        }
    }
</code></pre>
<p>As the cited bug report said, neither field nor methods can refer to the hidden class in their signature.</p>
<p>A less intuitive example is</p>
<pre class=""lang-java prettyprint-override""><code>    static class LambdaRunner implements Runnable {
        @Override
        public void run() {
            System.out.println(&quot;&quot; + this);
        }
    }
</code></pre>
<p>which will fail depending on the compiler and options, as when the <code>StringConcatFactory</code> is used, the behavior is like an invocation of a method having all non-constant parts as parameters and returning a <code>String</code>. So this is another case of having the hidden class in a method signature.</p>
<hr />
<p>Lambda expressions are special, as a class like</p>
<pre class=""lang-java prettyprint-override""><code>    static class LambdaRunner implements Runnable {
        @Override
        public void run() {
            Runnable runnable = () -&gt; System.out.println(&quot;Success&quot;);
            runnable.run();
        }
    }
</code></pre>
<p>gets compiled similar to</p>
<pre class=""lang-java prettyprint-override""><code>    static class LambdaRunner implements Runnable {
        @Override
        public void run() {
            Runnable runnable = LambdaRunner::lambdaBody;
            runnable.run();
        }
        private static void lambdaBody() {
            System.out.println(&quot;Success&quot;);
        }
    }
</code></pre>
<p>which doesn’t have the hidden class in the method signature, but has to refer to the method holding the body of the lambda expression as a <code>MethodReference</code>. Within the constant pool, the description of this method refers to its declaring class using the <code>this_class</code> entry. So it gets redirected to the hidden class as described in the documentation.</p>
<p>But the construction of the <code>MethodType</code> as part of the <code>MethodReference</code> does not use this information to load a <code>Class</code> like a class literal would do. Instead, it tries to load the hidden class through the defining class loader, which fails with the <code>NoClassDefFoundError</code> you have posted.</p>
<p>This seems to be related to <a href=""https://bugs.openjdk.java.net/browse/JDK-8130087"" rel=""noreferrer"">JDK-8130087</a> which suggests that ordinary method resolution differs from the way, <code>MethodType</code> works, which can make <code>MethodType</code> fail where just invoking the method would work.</p>
<p>But it’s possible to demonstrate that even fixing this issue wouldn’t solve the general problem:</p>
<pre class=""lang-java prettyprint-override""><code>    static class LambdaRunner implements Runnable {
        @Override
        public void run() {
            var lookup = MethodHandles.lookup();
            var noArgVoid = MethodType.methodType(void.class);
            try {
                MethodHandle mh = LambdaMetafactory.metafactory(lookup, &quot;run&quot;,
                    MethodType.methodType(Runnable.class), noArgVoid,
                    lookup.findStatic(LambdaRunner.class, &quot;lambdaBody&quot;, noArgVoid),
                    noArgVoid).getTarget();
                System.out.println(&quot;got factory&quot;);
                Runnable runnable = (Runnable)mh.invokeExact();
                System.out.println(&quot;got runnable&quot;);
                runnable.run();
            }
            catch(RuntimeException|Error e) {
                throw e;
            }
            catch(Throwable e) {
                throw new AssertionError(e);
            }
        }
        private static void lambdaBody() {
            System.out.println(&quot;Success&quot;);
        }
    }
</code></pre>
<p>This bypasses the problem described above and calls the <code>LambdaMetafactory</code> manually. When being redefined as hidden class, it will print:</p>
<pre class=""lang-none prettyprint-override""><code>got factory
got runnable
Exception in thread &quot;main&quot; java.lang.NoClassDefFoundError: test/HiddenClassLambdaTest$LambdaRunner/0x0000000800c01400
    at test/test.HiddenClassLambdaTest.main(HiddenClassLambdaTest.java:15)
Caused by: java.lang.ClassNotFoundException: test.HiddenClassLambdaTest$LambdaRunner.0x0000000800c01400
    at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
    at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
    at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
    ... 1 more
</code></pre>
<p>which shows that all obstacles have been circumvented, but when it comes to the actual invocation from the generated <code>Runnable</code> to the method holding the lambda body, it will fail due to the fact that the target class is <em>hidden</em>. A JVM with eager resolution of symbolic references might fail earlier, i.e. the example might not print <code>got runnable</code> then.</p>
<p>Unlike the old JVM anonymous classes, there is no way to link to a hidden class, not even from another hidden class.</p>
<hr />
<p>The bottom line is, as said at the beginning, you can not turn arbitrary classes into hidden classes. Lambda expressions are not the only feature not working with hidden classes. It’s not a good idea to try and get surprised. Hidden classes should only be used in conjunction with bytecode generators carefully using only features known to work.</p>
"
"71216665","1","build.gradle cannot resolve symbol 'groovy.json.JsonSlurper'","<p>I can't resolve the groovy.json.JsonSlurper in the build.gradle file with Intellij, does anyone know how to fix it?</p>
<pre class=""lang-java prettyprint-override""><code>
plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}



task sample() {
    doLast {
        sample();
    }
}

import groovy.json.JsonSlurper
def sample(){
    def json = new JsonSlurper().parseText('{&quot;a&quot;:&quot;b&quot;}')
    println(json);
}

</code></pre>
<p><img src=""https://i.stack.imgur.com/HSqTu.png"" alt=""enter image description here"" /></p>
","71218832","<p>You missing the needed dependency.</p>
<p>Add <code>org.codehaus.groovy:groovy-json:3.0.9</code> in <code>dependencies</code> section so ti will look like</p>
<pre><code>dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation 'org.codehaus.groovy:groovy-json:3.0.9'
}
</code></pre>
<p>And then you can test with CLI as <code>gradle sample</code> or <code>./gradlew sample</code> and it will return <code>{a=b}</code></p>
"
"71020415","1","Manifest merger failed : android:exported needs to be explicitly specified for <receiver>","<blockquote>
<p><strong>Merging Errors</strong>: Error: android:exported needs to be explicitly specified for element
&lt;receiver#com.instacart.library.truetime.BootCompletedBroadcastReceiver&gt;.
Apps targeting Android 12 and higher are required to specify an
explicit value for <code>android:exported</code> when the corresponding component
has an intent filter defined. See
<a href=""https://developer.android.com/guide/topics/manifest/activity-element#exported"" rel=""noreferrer"">https://developer.android.com/guide/topics/manifest/activity-element#exported</a>
for details. test.app main manifest (this file), line 19</p>
</blockquote>
<p>I don't even know what to do. I struggled with this mistake for a whole week, but I couldn't.</p>
<p><strong>Here is my sdk version</strong></p>
<pre><code>compileSdkVersion 32
    defaultConfig {
        multiDexEnabled true
        applicationId &quot;com.example.app&quot;
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 53
        versionName &quot;2.0.4&quot;
        ndk.abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        testInstrumentationRunner &quot;androidx.test.runner.AndroidJUnitRunner&quot;
    }
</code></pre>
<p>Wrote <code>android:exported</code> on all <code>intent-filter</code>, <code>service</code>, and <code>provider</code>. Ah, I don't have the <code>receiver</code> mentioned in this error.</p>
<pre><code>dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    implementation &quot;com.android.billingclient:billing:4.0.0&quot;

    implementation &quot;com.google.firebase:firebase-messaging:23.0.0&quot;
    implementation &quot;com.google.firebase:firebase-crashlytics:18.2.7&quot;
    implementation &quot;com.google.firebase:firebase-analytics:20.0.2&quot;
    implementation &quot;com.google.firebase:firebase-perf:20.0.4&quot;
    implementation &quot;com.google.firebase:firebase-dynamic-links:21.0.0&quot;

    implementation 'com.google.firebase:firebase-core:20.0.2'
    implementation 'com.google.firebase:firebase-database:20.0.3'
    implementation 'com.google.firebase:firebase-auth:21.0.1'
    implementation 'com.google.firebase:firebase-config:21.0.1'
    implementation &quot;com.facebook.android:facebook-login:9.0.0&quot;
    implementation &quot;com.facebook.android:facebook-share:[5,6)&quot;
    implementation &quot;com.linecorp:linesdk:5.0.1&quot;

    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.6.10'

    implementation &quot;com.squareup.retrofit2:retrofit:2.8.1&quot;
    implementation &quot;com.squareup.retrofit2:converter-gson:2.8.1&quot;
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.1'
    implementation 'io.reactivex:rxandroid:1.2.1'

    implementation 'com.google.code.gson:gson:2.8.6'

    implementation 'com.sun.easysnackbar:easysnackbar:1.0.1'

    implementation 'com.romandanylyk:pageindicatorview:1.0.3@aar'

    implementation 'com.google.android.exoplayer:exoplayer:2.16.1'

    //MULTI DEX
    implementation &quot;androidx.multidex:multidex:2.0.1&quot;

    implementation 'com.google.android:flexbox:2.0.1'

    implementation 'com.github.florent37:diagonallayout:1.0.9'

    implementation('io.socket:socket.io-client:1.0.0') {
        exclude group: 'org.json', module: 'json'
    }

    implementation 'com.github.instacart.truetime-android:library:3.4'
    implementation 'com.github.instacart.truetime-android:library-extension-rx:3.4'

    implementation &quot;androidx.navigation:navigation-fragment-ktx:2.4.0&quot;
    implementation &quot;androidx.navigation:navigation-ui-ktx:2.4.0&quot;

    implementation &quot;com.github.bumptech.glide:glide:4.12.0&quot;
    annotationProcessor &quot;com.github.bumptech.glide:compiler:4.12.0&quot;

    implementation &quot;de.hdodenhof:circleimageview:3.1.0&quot;

    implementation &quot;com.pixplicity.easyprefs:library:1.9.0&quot;

    implementation &quot;com.jakewharton.timber:timber:4.7.1&quot;

    implementation &quot;com.airbnb.android:lottie:3.4.0&quot;

    implementation 'com.github.jinatonic.confetti:confetti:1.1.2'

    implementation &quot;com.nabinbhandari.android:permissions:3.8&quot;

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation &quot;com.github.YarikSOffice:lingver:1.2.1&quot;

    implementation 'com.github.mreram:showcaseview:1.2.0'
    implementation 'com.github.shripal17:MaterialIntroView-v2:2.2.0'

    implementation 'com.github.unsplash:unsplash-photopicker-android:1.0.0'

    implementation 'com.giphy.sdk:ui:2.1.0'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test:core:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation &quot;androidx.test.ext:junit:1.1.3&quot;
}
</code></pre>
","71020750","<p>Found the issue with <code>instacart.truetime</code> library. You're using <code>3.4</code> version &amp; they resolved this error in <code>3.5</code> as mentioned here: <a href=""https://github.com/instacart/truetime-android/releases/tag/3.5"" rel=""noreferrer"">https://github.com/instacart/truetime-android/releases/tag/3.5</a></p>
<p>So you need to update these dependencies to the new version of <code>3.5</code></p>
<pre><code>    implementation 'com.github.instacart.truetime-android:library:3.5'
    implementation 'com.github.instacart.truetime-android:library-extension-rx:3.5'
</code></pre>
<p>Build the app &amp; it resolves the issue</p>
"
"71296783","1","JUINT test giving error java.lang.reflect.InaccessibleObjectException: Unable to make protected void java.lang.Object.finalize()","<p>While running the test I am getting the error , I am not able to understand why am I getting this error , this code is working with fine in java 8 , while running it in java 17 it is giving error. googled this error but found nothing useful. Please help me to understand this error.
Thanks in advance:)</p>
<pre><code>@RunWith(PowerMockRunner.class)
@PrepareForTest({PopulatedAuthorizedUser.class})
@SpringBootTest(classes = MockServletContext.class)
@PowerMockIgnore({&quot;javax.management.*&quot;, &quot;javax.net.ssl.*&quot;, 
&quot;jdk.internal.reflect.*&quot;})
public class ProjectUserControllerTest {

private ProjectUserController controller;

private UUID projectId = UUID.randomUUID();
private UUID groupId = UUID.randomUUID();
private String email = &quot;project.user@email.com&quot;;

@Mock
private ProjectUserService projectUserService;

private ObjectMapper objectMapper = new ObjectMapper();

@Mock
protected AuthorizedUser au;

@Before
public void setUp() throws Exception {
    controller = new ProjectUserController();
    FieldUtils.writeField(controller, &quot;projectUserService&quot;, projectUserService, true);
    FieldUtils.writeField(controller, &quot;objectMapper&quot;, objectMapper, true);
    PowerMockito.mockStatic(PopulatedAuthorizedUser.class);
    Mockito.when(PopulatedAuthorizedUser.get()).thenReturn(mockAuthorizedUser());
}

@Test
public void testGetProjectUsers() {
    Mockito.doReturn(Arrays.asList(mockProjectUser())).when(projectUserService)
            .findProjectUsersByProjectId(projectId);
    Mockito.doNothing().when(projectUserService).enrichUserDetails(any(ProjectUserDto.class));
    ResponseEntity&lt;List&lt;ProjectUserDto&gt;&gt; response=controller.getProjectUsers(projectId);
    assertNotNull(response);
    ProjectUserDto projectUserDto = response.getBody().get(0);
    assertEquals(groupId, projectUserDto.getGroupId());
    assertEquals(email, projectUserDto.getUsername());
    assertTrue(projectUserDto.getEmailNotification());
    assertEquals(ProjectUserRole.OWNER.toString(), projectUserDto.getRole());
   }

 }
</code></pre>
<p>Exception:</p>
<pre><code> java.lang.reflect.InaccessibleObjectException: Unable to make protected void java.lang.Object.finalize() throws java.lang.Throwable accessible: module java.base does not &quot;opens java.lang&quot; to unnamed module @5ba23b66

at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:354)
at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:297)
at java.base/java.lang.reflect.Method.checkCanSetAccessible(Method.java:199)
at java.base/java.lang.reflect.Method.setAccessible(Method.java:193)
at org.powermock.reflect.internal.WhiteboxImpl.doGetAllMethods(WhiteboxImpl.java:1492)
at org.powermock.reflect.internal.WhiteboxImpl.getAllMethods(WhiteboxImpl.java:1467)
at org.powermock.reflect.internal.WhiteboxImpl.findMethodOrThrowException(WhiteboxImpl.java:847)
at org.powermock.reflect.internal.WhiteboxImpl.doInvokeMethod(WhiteboxImpl.java:807)
at org.powermock.reflect.internal.WhiteboxImpl.invokeMethod(WhiteboxImpl.java:790)
at org.powermock.reflect.Whitebox.invokeMethod(Whitebox.java:466)
at org.powermock.modules.junit4.common.internal.impl.PowerMockJUnit4RunListener.testFinished(PowerMockJUnit4RunListener.java:55)
at org.junit.runner.notification.SynchronizedRunListener.testFinished(SynchronizedRunListener.java:87)
at org.junit.runner.notification.RunNotifier$9.notifyListener(RunNotifier.java:225)
at org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72)
at org.junit.runner.notification.RunNotifier.fireTestFinished(RunNotifier.java:222)
at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.testAborted(PowerMockJUnit44RunnerDelegateImpl.java:229)
at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:206)
at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:160)
at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:134)
at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34)
at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44)
at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:136)
at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:121)
at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:57)
at org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:59)
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)
at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)
</code></pre>
","71296829","<p>In Java 9 and above, the module system can cause these errors. I've had the same issues with JUnit 5 itself because I omit the <code>public</code> from my test classes and methods.</p>
<p>Here's what I have in my POM to solve this:</p>
<pre><code>&lt;plugin&gt;
  &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
  &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;
  &lt;configuration&gt;
    &lt;!-- Allow JUnit to access the test classes --&gt;
    &lt;argLine&gt;--add-opens &lt;my-module&gt;/&lt;my-package&gt;=ALL-UNNAMED&lt;/argLine&gt;
  &lt;/configuration&gt;
&lt;/plugin&gt;
</code></pre>
<p>In your case you probably need to use <code>java.base/java.lang=ALL_UNNAMED</code>.</p>
"
"71044636","1","JMH using java 17, no dead code elimination","<p>I run sample JHM benchmark which suppose to show dead code elimination. Code is rewritten for conciseness from <a href=""https://github.com/openjdk/jmh/blob/master/jmh-samples/src/main/java/org/openjdk/jmh/samples/JMHSample_08_DeadCode.java"" rel=""noreferrer"">jhm github sample</a>.</p>
<pre class=""lang-java prettyprint-override""><code>import org.openjdk.jmh.annotations.*;
import java.util.concurrent.TimeUnit;

@State(Scope.Thread)
@BenchmarkMode(Mode.AverageTime)
@OutputTimeUnit(TimeUnit.NANOSECONDS)
@Fork(1)
public class Sample08DeadCode {

    private double x = Math.PI;

    @Benchmark
    public void benchmark() {}

    @Benchmark
    public void measureIncorrect() { Math.log(x); }

    @Benchmark
    public double measureCorrect() { return Math.log(x); }
}
</code></pre>
<p>Run using JDK 1.8.0_211, Java HotSpot(TM) 64-Bit Server VM, 25.211-b12 produces following results:</p>
<pre><code>Benchmark                          Mode  Cnt   Score   Error  Units
Sample08DeadCode.benchmark         avgt    5   0,229 ± 0,018  ns/op
Sample08DeadCode.measureCorrect    avgt    5  12,013 ± 0,047  ns/op
Sample08DeadCode.measureIncorrect  avgt    5   0,228 ± 0,016  ns/op
</code></pre>
<p>but using java JDK 17.0.2, Java HotSpot(TM) 64-Bit Server VM, 17.0.2+8-LTS-86 the results have no sign of dead code elimination:</p>
<pre><code>Benchmark                          Mode  Cnt  Score   Error  Units
Sample08DeadCode.benchmark         avgt    5  0,341 ± 0,004  ns/op
Sample08DeadCode.measureCorrect    avgt    5  6,244 ± 0,072  ns/op
Sample08DeadCode.measureIncorrect  avgt    5  6,263 ± 0,094  ns/op
</code></pre>
<p>Why does the <code>measureIncorrect()</code> method is not optimized using java 17?</p>
","71053938","<p>Those samples depend on JDK internals.</p>
<p>Looks like since JDK 9 and <a href=""https://bugs.openjdk.java.net/browse/JDK-8152907"" rel=""noreferrer"">JDK-8152907</a>, <code>Math.log</code> is no longer intrinsified into C2 intermediate representation. Instead, a direct call to a quick LIBM-backed stub is made. This is usually faster for the code that actually uses the result. Notice how <code>measureCorrect</code> is faster in JDK 17 output in your case.</p>
<p>But for JMH samples, it limits the the compiler optimizations around the <code>Math.log</code>, and dead code / folding samples do not work properly. The fix it to make samples that do not rely on JDK internals without a good reason, and instead use a custom written payload.</p>
<p>This is being done in JMH here:</p>
<ul>
<li><a href=""https://bugs.openjdk.java.net/browse/CODETOOLS-7903094"" rel=""noreferrer"">https://bugs.openjdk.java.net/browse/CODETOOLS-7903094</a></li>
<li><a href=""https://github.com/openjdk/jmh/pull/60"" rel=""noreferrer"">https://github.com/openjdk/jmh/pull/60</a></li>
</ul>
"
"71075781","1","How to add classpath dependencies in build.gradle project?","<p>After the Gradle update, every new project has this type of format in <strong>build.gradle</strong> (project:&quot;...&quot;)</p>
<pre><code>// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version '7.1.0' apply false
    id 'com.android.library' version '7.1.0' apply false
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
</code></pre>
<p>Now how can I add classpath dependencies here?</p>
","71272079","<p>If you are adding firebase to your Android App it needs to look something like below.</p>
<pre><code>
buildscript {
    repositories {
        // Check that you have the following line (if not, add it):
        google()  // Google's Maven repository

    }
    dependencies {

        // Add this line
        classpath 'com.google.gms:google-services:4.3.10'

    }
}



plugins {
    id 'com.android.application' version '7.1.2' apply false
    id 'com.android.library' version '7.1.2' apply false
}


task clean(type: Delete) {
    delete rootProject.buildDir
}
</code></pre>
"
"71494924","1","How does Java know which overloaded method to call with lambda expressions? (Supplier, Consumer, Callable, ...)","<p>First off, I have no idea how to decently phrase the question, so this is up for suggestions.</p>
<p>Lets say we have following overloaded methods:</p>
<pre class=""lang-java prettyprint-override""><code>void execute(Callable&lt;Void&gt; callable) {
    try {
        callable.call();
    } catch (Exception e) {
        e.printStackTrace();
    }
}

&lt;T&gt; T execute(Supplier&lt;T&gt; supplier) {
    return supplier.get();
}

void execute(Runnable runnable) {
    runnable.run();
}
</code></pre>
<p>Going off from this table, I got from <a href=""https://stackoverflow.com/a/62434813/3845362"">another SO question</a></p>
<pre><code>Supplier       ()    -&gt; x
Consumer       x     -&gt; ()
BiConsumer     x, y  -&gt; ()
Callable       ()    -&gt; x throws ex
Runnable       ()    -&gt; ()
Function       x     -&gt; y
BiFunction     x,y   -&gt; z
Predicate      x     -&gt; boolean
UnaryOperator  x1    -&gt; x2
BinaryOperator x1,x2 -&gt; x3
</code></pre>
<p>These are the results I get locally:</p>
<pre class=""lang-java prettyprint-override""><code>// Runnable -&gt; expected as this is a plain void  
execute(() -&gt; System.out.println()); 

// Callable -&gt; why is it not a Supplier? It does not throw any exceptions..
execute(() -&gt; null);

// Supplier -&gt; this returns an Object, but how is that different from returning null?
execute(() -&gt; new Object());

// Callable -&gt; because it can throw an exception, right?
execute(() -&gt; {throw new Exception();});
</code></pre>
<p>How does the compiler know which method to call?
How does it for example make the distinction between what's a <code>Callable</code> and what's a <code>Runnable</code>?</p>
","71496000","<p>I believe I have found where this is described in official documentation, although a bit hard to read.</p>
<p><a href=""https://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.27.3"" rel=""noreferrer"">Here</a> is mentioned:</p>
<blockquote>
<p>15.27.3. Type of a Lambda Expression</p>
<p>Note that while boxing is not allowed in a strict invocation context,
boxing of lambda result expressions is always allowed - that is, the
result expression appears in an assignment context, regardless of the
context enclosing the lambda expression. However, <strong>if an explicitly
typed lambda expression is an argument to an overloaded method, a
method signature that avoids boxing or unboxing the lambda result is
preferred by the most specific check (§15.12.2.5).</strong></p>
</blockquote>
<p>and then <a href=""https://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.12.2.5"" rel=""noreferrer"">here (15.12.2.5)</a> is described analytically how the most specific method is chosen.</p>
<p>So according to this for example as described</p>
<blockquote>
<p>One applicable method m1 is more specific than another applicable
method m2, for an invocation with argument expressions e1, ..., ek, if
any of the following are true:</p>
<p>m2 is generic, and m1 is inferred to be more specific than m2 for
argument expressions e1, ..., ek</p>
</blockquote>
<p>So</p>
<pre><code>// Callable -&gt; why is it not a Supplier?
execute(() -&gt; null);   &lt;-- Callable shall be picked from 2 options as M2 is generic and M1 is inferred to be more specific

void execute(Callable&lt;Void&gt; callable) {  // &lt;------ M1 
   try {
    callable.call();
  } catch (Exception e) {
      e.printStackTrace();
  }
}


 &lt;T&gt; T execute(Supplier&lt;T&gt; supplier) {  // &lt;------ M2 is Generic
    return supplier.get();
 }
</code></pre>
<p>Why M1 is inferred to be more specific can be traced down from this process described <a href=""https://docs.oracle.com/javase/specs/jls/se8/html/jls-18.html#jls-18.5.4"" rel=""noreferrer"">here (18.5.4 More Specific Method Inference)</a></p>
"
"71500951","1","maven-checkstyle-plugin failed to parse Java 'record'","<p>I'm trying to setup checkstyle in our project - but seems like <code>Maven</code> (v3.8.3) or <code>maven-checkstyle-plugin</code> (v3.1.1) itself are not aware of Java 14's <code>record</code> (we use Java 17).</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>Caused by: java.lang.IllegalStateException: /Users/dmitry.adonin/IdeaProjects/raap/src/main/java/com/xxx/web/dto/Request.java:3:8: unexpected token: record
    at com.puppycrawl.tools.checkstyle.JavaParser$1.reportError (JavaParser.java:93)
    at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.typeDefinition (GeneratedJavaRecognizer.java:411)
    at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.compilationUnit (GeneratedJavaRecognizer.java:202)
    at com.puppycrawl.tools.checkstyle.JavaParser.parse (JavaParser.java:99)
    at com.puppycrawl.tools.checkstyle.TreeWalker.processFiltered (TreeWalker.java:159)
    at com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process (AbstractFileSetCheck.java:85)
    at com.puppycrawl.tools.checkstyle.Checker.processFile (Checker.java:329)
    at com.puppycrawl.tools.checkstyle.Checker.processFiles (Checker.java:291)
    at com.puppycrawl.tools.checkstyle.Checker.process (Checker.java:216)
    at org.apache.maven.plugins.checkstyle.exec.DefaultCheckstyleExecutor.executeCheckstyle (DefaultCheckstyleExecutor.java:202)
    at org.apache.maven.plugins.checkstyle.CheckstyleViolationCheckMojo.execute (CheckstyleViolationCheckMojo.java:545)
    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)
    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)
    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)
    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)
    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)
    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)
    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)
    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)
    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:972)
    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:293)
    at org.apache.maven.cli.MavenCli.main (MavenCli.java:196)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)
    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke (Method.java:566)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)
    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)
    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)
Caused by: antlr.NoViableAltException: unexpected token: record
    at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.typeDefinitionInternal (GeneratedJavaRecognizer.java:584)
    at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.typeDefinition (GeneratedJavaRecognizer.java:389)
    at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.compilationUnit (GeneratedJavaRecognizer.java:202)
    at com.puppycrawl.tools.checkstyle.JavaParser.parse (JavaParser.java:99)
    at com.puppycrawl.tools.checkstyle.TreeWalker.processFiltered (TreeWalker.java:159)
    at com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process (AbstractFileSetCheck.java:85)
    at com.puppycrawl.tools.checkstyle.Checker.processFile (Checker.java:329)
    at com.puppycrawl.tools.checkstyle.Checker.processFiles (Checker.java:291)
    at com.puppycrawl.tools.checkstyle.Checker.process (Checker.java:216)
    at org.apache.maven.plugins.checkstyle.exec.DefaultCheckstyleExecutor.executeCheckstyle (DefaultCheckstyleExecutor.java:202)
    at org.apache.maven.plugins.checkstyle.CheckstyleViolationCheckMojo.execute (CheckstyleViolationCheckMojo.java:545)
    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)
    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)
    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)
    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)
    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)
    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)
    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)
    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)
    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:972)
    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:293)
    at org.apache.maven.cli.MavenCli.main (MavenCli.java:196)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)
    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke (Method.java:566)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)
    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)
    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)</code></pre>
</div>
</div>
</p>
<p>There are the following configs:</p>
<p><code>pom.xml</code>:</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd""&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

    &lt;parent&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
        &lt;version&gt;2.6.2&lt;/version&gt;
        &lt;relativePath/&gt;
    &lt;/parent&gt;

    &lt;groupId&gt;...&lt;/groupId&gt;
    &lt;artifactId&gt;...&lt;/artifactId&gt;
    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
    &lt;name&gt;...&lt;/name&gt;

    &lt;properties&gt;
        &lt;java.version&gt;17&lt;/java.version&gt;
    &lt;/properties&gt;

    &lt;dependencies&gt;
    ...
    &lt;/dependencies&gt;

    &lt;build&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
                &lt;configuration&gt;
                    &lt;excludes&gt;
                        &lt;exclude&gt;
                            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;
                            &lt;artifactId&gt;lombok&lt;/artifactId&gt;
                        &lt;/exclude&gt;
                    &lt;/excludes&gt;
                &lt;/configuration&gt;
            &lt;/plugin&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
                &lt;artifactId&gt;maven-checkstyle-plugin&lt;/artifactId&gt;
                &lt;version&gt;3.1.1&lt;/version&gt;
                &lt;configuration&gt;
                    &lt;configLocation&gt;project-checks.xml&lt;/configLocation&gt;
                    &lt;encoding&gt;UTF-8&lt;/encoding&gt;
                    &lt;consoleOutput&gt;true&lt;/consoleOutput&gt;
                    &lt;failOnViolation&gt;true&lt;/failOnViolation&gt;
                    &lt;failsOnError&gt;true&lt;/failsOnError&gt;
                    &lt;linkXRef&gt;false&lt;/linkXRef&gt;
                &lt;/configuration&gt;
                &lt;executions&gt;
                    &lt;execution&gt;
                        &lt;id&gt;checkstyle-validation&lt;/id&gt;
                        &lt;phase&gt;validate&lt;/phase&gt;
                        &lt;goals&gt;
                            &lt;goal&gt;check&lt;/goal&gt;
                        &lt;/goals&gt;
                    &lt;/execution&gt;
                &lt;/executions&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/build&gt;

&lt;/project&gt;</code></pre>
</div>
</div>
</p>
<p><code>project-checks.xml</code>:</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;?xml version=""1.0""?&gt;

&lt;!DOCTYPE module PUBLIC
        ""-//Checkstyle//DTD Checkstyle Configuration 1.3//EN""
        ""https://checkstyle.org/dtds/configuration_1_3.dtd""&gt;

&lt;!--
    Checkstyle configuration that checks the Google coding conventions from Google Java Style
    that can be found at https://google.github.io/styleguide/javaguide.html
    Checkstyle is very configurable. Be sure to read the documentation at
    https://checkstyle.org (or in your downloaded distribution).
    To completely disable a check, just comment it out or delete it from the file.
    To suppress certain violations please review suppression filters.
    Authors: Max Vetrenko, Ruslan Diachenko, Roman Ivanov.
 --&gt;

&lt;module name = ""Checker""&gt;
    &lt;property name=""charset"" value=""UTF-8""/&gt;

    &lt;property name=""severity"" value=""error""/&gt;

    &lt;property name=""fileExtensions"" value=""java, properties, xml""/&gt;
    &lt;!-- Excludes all 'module-info.java' files              --&gt;
    &lt;!-- See https://checkstyle.org/config_filefilters.html --&gt;
    &lt;module name=""BeforeExecutionExclusionFileFilter""&gt;
        &lt;property name=""fileNamePattern"" value=""module\-info\.java$""/&gt;
    &lt;/module&gt;
    &lt;!-- Checks new line at end of file is required                     --&gt;
    &lt;!-- See https://checkstyle.org/config_misc.html#NewlineAtEndOfFile --&gt;
    &lt;module name=""NewlineAtEndOfFile""&gt;
        &lt;property name=""lineSeparator"" value=""lf""/&gt;
        &lt;property name=""fileExtensions"" value=""java, xml, yml, yaml""/&gt;
    &lt;/module&gt;

    &lt;!-- Checks for whitespace                            --&gt;
    &lt;!-- See http://checkstyle.org/config_whitespace.html --&gt;
    &lt;module name=""FileTabCharacter""&gt;
        &lt;property name=""eachLine"" value=""true""/&gt;
    &lt;/module&gt;

    &lt;module name=""LineLength""&gt;
        &lt;property name=""fileExtensions"" value=""java""/&gt;
        &lt;property name=""max"" value=""200""/&gt;
        &lt;property name=""ignorePattern"" value=""^package.*|^import.*|a href|href|http://|https://|ftp://""/&gt;
    &lt;/module&gt;

    &lt;module name=""TreeWalker""&gt;
        &lt;module name=""OuterTypeFilename""/&gt;
        &lt;module name=""IllegalTokenText""&gt;
            &lt;property name=""tokens"" value=""STRING_LITERAL, CHAR_LITERAL""/&gt;
            &lt;property name=""format""
                      value=""\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)""/&gt;
            &lt;property name=""message""
                      value=""Consider using special escape sequence instead of octal value or Unicode escaped value.""/&gt;
        &lt;/module&gt;
        &lt;module name=""AvoidEscapedUnicodeCharacters""&gt;
            &lt;property name=""allowEscapesForControlCharacters"" value=""true""/&gt;
            &lt;property name=""allowByTailComment"" value=""true""/&gt;
            &lt;property name=""allowNonPrintableEscapes"" value=""true""/&gt;
        &lt;/module&gt;
        &lt;module name=""AvoidStarImport""/&gt;
        &lt;module name=""UnusedImports""/&gt;
        &lt;module name=""OneTopLevelClass""/&gt;
        &lt;module name=""NoLineWrap""&gt;
            &lt;property name=""tokens"" value=""PACKAGE_DEF, IMPORT, STATIC_IMPORT""/&gt;
        &lt;/module&gt;
        &lt;module name=""EmptyBlock""&gt;
            &lt;property name=""option"" value=""TEXT""/&gt;
            &lt;property name=""tokens""
                      value=""LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH""/&gt;
        &lt;/module&gt;
        &lt;module name=""NeedBraces""&gt;
            &lt;property name=""tokens""
                      value=""LITERAL_DO, LITERAL_ELSE, LITERAL_FOR, LITERAL_IF, LITERAL_WHILE""/&gt;
        &lt;/module&gt;
        &lt;module name=""LeftCurly""&gt;
            &lt;property name=""tokens""
                      value=""ANNOTATION_DEF, CLASS_DEF, CTOR_DEF, ENUM_CONSTANT_DEF, ENUM_DEF,
                    INTERFACE_DEF, LAMBDA, LITERAL_CASE, LITERAL_CATCH, LITERAL_DEFAULT,
                    LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF,
                    LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, METHOD_DEF,
                    OBJBLOCK, STATIC_INIT""/&gt;
        &lt;/module&gt;
        &lt;module name=""RightCurly""&gt;
            &lt;property name=""id"" value=""RightCurlySame""/&gt;
            &lt;property name=""tokens""
                      value=""LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE,
                    LITERAL_DO""/&gt;
        &lt;/module&gt;
        &lt;module name=""RightCurly""&gt;
            &lt;property name=""id"" value=""RightCurlyAlone""/&gt;
            &lt;property name=""option"" value=""alone""/&gt;
            &lt;property name=""tokens""
                      value=""CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT,
                    INSTANCE_INIT, ANNOTATION_DEF, ENUM_DEF""/&gt;
        &lt;/module&gt;
        &lt;module name=""SuppressionXpathSingleFilter""&gt;
            &lt;!-- suppresion is required till https://github.com/checkstyle/checkstyle/issues/7541 --&gt;
            &lt;property name=""id"" value=""RightCurlyAlone""/&gt;
            &lt;property name=""query"" value=""//RCURLY[parent::SLIST[count(./*)=1]
                                                 or preceding-sibling::*[last()][self::LCURLY]]""/&gt;
        &lt;/module&gt;
        &lt;module name=""WhitespaceAround""&gt;
            &lt;property name=""allowEmptyConstructors"" value=""true""/&gt;
            &lt;property name=""allowEmptyLambdas"" value=""true""/&gt;
            &lt;property name=""allowEmptyMethods"" value=""true""/&gt;
            &lt;property name=""allowEmptyTypes"" value=""true""/&gt;
            &lt;property name=""allowEmptyLoops"" value=""true""/&gt;
            &lt;property name=""tokens""
                      value=""ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR,
                    BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, DO_WHILE, EQUAL, GE, GT, LAMBDA, LAND,
                    LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY,
                    LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SWITCH, LITERAL_SYNCHRONIZED,
                     LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN,
                     NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, RCURLY, SL, SLIST, SL_ASSIGN, SR,
                     SR_ASSIGN, STAR, STAR_ASSIGN, LITERAL_ASSERT, TYPE_EXTENSION_AND""/&gt;
            &lt;message key=""ws.notFollowed""
                     value=""WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)""/&gt;
            &lt;message key=""ws.notPreceded""
                     value=""WhitespaceAround: ''{0}'' is not preceded with whitespace.""/&gt;
        &lt;/module&gt;
        &lt;module name=""OneStatementPerLine""/&gt;
        &lt;module name=""MultipleVariableDeclarations""/&gt;
        &lt;module name=""ArrayTypeStyle""/&gt;
        &lt;module name=""MissingSwitchDefault""/&gt;
        &lt;module name=""FallThrough""/&gt;
        &lt;module name=""UpperEll""/&gt;
        &lt;module name=""ModifierOrder""/&gt;
        &lt;module name=""EmptyLineSeparator""&gt;
            &lt;property name=""tokens""
                      value=""PACKAGE_DEF, IMPORT, STATIC_IMPORT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF,
                    STATIC_INIT, INSTANCE_INIT, METHOD_DEF, CTOR_DEF, VARIABLE_DEF""/&gt;
            &lt;property name=""allowNoEmptyLineBetweenFields"" value=""true""/&gt;
            &lt;property name=""allowMultipleEmptyLines"" value=""false""/&gt;
            &lt;property name=""allowMultipleEmptyLinesInsideClassMembers"" value=""false""/&gt;
        &lt;/module&gt;
        &lt;module name=""SeparatorWrap""&gt;
            &lt;property name=""id"" value=""SeparatorWrapDot""/&gt;
            &lt;property name=""tokens"" value=""DOT""/&gt;
            &lt;property name=""option"" value=""nl""/&gt;
        &lt;/module&gt;
        &lt;module name=""SeparatorWrap""&gt;
            &lt;property name=""id"" value=""SeparatorWrapComma""/&gt;
            &lt;property name=""tokens"" value=""COMMA""/&gt;
            &lt;property name=""option"" value=""EOL""/&gt;
        &lt;/module&gt;
        &lt;module name=""SeparatorWrap""&gt;
            &lt;!-- ELLIPSIS is EOL until https://github.com/google/styleguide/issues/258 --&gt;
            &lt;property name=""id"" value=""SeparatorWrapEllipsis""/&gt;
            &lt;property name=""tokens"" value=""ELLIPSIS""/&gt;
            &lt;property name=""option"" value=""EOL""/&gt;
        &lt;/module&gt;
        &lt;module name=""SeparatorWrap""&gt;
            &lt;!-- ARRAY_DECLARATOR is EOL until https://github.com/google/styleguide/issues/259 --&gt;
            &lt;property name=""id"" value=""SeparatorWrapArrayDeclarator""/&gt;
            &lt;property name=""tokens"" value=""ARRAY_DECLARATOR""/&gt;
            &lt;property name=""option"" value=""EOL""/&gt;
        &lt;/module&gt;
        &lt;module name=""SeparatorWrap""&gt;
            &lt;property name=""id"" value=""SeparatorWrapMethodRef""/&gt;
            &lt;property name=""tokens"" value=""METHOD_REF""/&gt;
            &lt;property name=""option"" value=""nl""/&gt;
        &lt;/module&gt;
        &lt;module name=""PackageName""&gt;
            &lt;property name=""format"" value=""^[a-z]+(\.[a-z][a-z0-9]*)*$""/&gt;
            &lt;message key=""name.invalidPattern""
                     value=""Package name ''{0}'' must match pattern ''{1}''.""/&gt;
        &lt;/module&gt;
        &lt;module name=""TypeName""&gt;
            &lt;property name=""tokens"" value=""CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF""/&gt;
            &lt;message key=""name.invalidPattern""
                     value=""Type name ''{0}'' must match pattern ''{1}''.""/&gt;
        &lt;/module&gt;
        &lt;module name=""MemberName""&gt;
            &lt;property name=""format"" value=""^[a-z][a-zA-Z0-9]*$""/&gt;
            &lt;message key=""name.invalidPattern""
                     value=""Member name ''{0}'' must match pattern ''{1}''.""/&gt;
        &lt;/module&gt;
        &lt;module name=""ParameterName""&gt;
            &lt;property name=""format"" value=""^[a-z][a-zA-Z0-9]*$""/&gt;
            &lt;message key=""name.invalidPattern""
                     value=""Parameter name ''{0}'' must match pattern ''{1}''.""/&gt;
        &lt;/module&gt;
        &lt;module name=""LambdaParameterName""&gt;
            &lt;property name=""format"" value=""^[a-z]([a-z0-9][a-zA-Z0-9]*)?$""/&gt;
            &lt;message key=""name.invalidPattern""
                     value=""Lambda parameter name ''{0}'' must match pattern ''{1}''.""/&gt;
        &lt;/module&gt;
        &lt;module name=""CatchParameterName""&gt;
            &lt;property name=""format"" value=""^[a-z]([a-z0-9][a-zA-Z0-9]*)?$""/&gt;
            &lt;message key=""name.invalidPattern""
                     value=""Catch parameter name ''{0}'' must match pattern ''{1}''.""/&gt;
        &lt;/module&gt;
        &lt;module name=""LocalVariableName""&gt;
            &lt;property name=""format"" value=""^[a-z]([a-z0-9][a-zA-Z0-9]*)?$""/&gt;
            &lt;message key=""name.invalidPattern""
                     value=""Local variable name ''{0}'' must match pattern ''{1}''.""/&gt;
        &lt;/module&gt;
        &lt;module name=""ClassTypeParameterName""&gt;
            &lt;property name=""format"" value=""(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)|(^[A-Z]{1,2})$""/&gt;
            &lt;message key=""name.invalidPattern""
                     value=""Class type name ''{0}'' must match pattern ''{1}''.""/&gt;
        &lt;/module&gt;
        &lt;module name=""MethodTypeParameterName""&gt;
            &lt;property name=""format"" value=""(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)""/&gt;
            &lt;message key=""name.invalidPattern""
                     value=""Method type name ''{0}'' must match pattern ''{1}''.""/&gt;
        &lt;/module&gt;
        &lt;module name=""InterfaceTypeParameterName""&gt;
            &lt;property name=""format"" value=""(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)|(^[A-Z]{1,2})$""/&gt;
            &lt;message key=""name.invalidPattern""
                     value=""Interface type name ''{0}'' must match pattern ''{1}''.""/&gt;
        &lt;/module&gt;
        &lt;module name=""MethodName""&gt;
            &lt;property name=""format"" value=""^[a-z][a-zA-Z0-9_]*$""/&gt;
            &lt;message key=""name.invalidPattern""
                     value=""Method name ''{0}'' must match pattern ''{1}''.""/&gt;
        &lt;/module&gt;
        &lt;module name=""NoFinalizer""/&gt;
        &lt;module name=""GenericWhitespace""&gt;
            &lt;message key=""ws.followed""
                     value=""GenericWhitespace ''{0}'' is followed by whitespace.""/&gt;
            &lt;message key=""ws.preceded""
                     value=""GenericWhitespace ''{0}'' is preceded with whitespace.""/&gt;
            &lt;message key=""ws.illegalFollow""
                     value=""GenericWhitespace ''{0}'' should followed by whitespace.""/&gt;
            &lt;message key=""ws.notPreceded""
                     value=""GenericWhitespace ''{0}'' is not preceded with whitespace.""/&gt;
        &lt;/module&gt;
        &lt;module name=""Indentation""&gt;
            &lt;property name=""basicOffset"" value=""4""/&gt;
            &lt;property name=""braceAdjustment"" value=""0""/&gt;
            &lt;property name=""caseIndent"" value=""4""/&gt;
            &lt;property name=""throwsIndent"" value=""4""/&gt;
            &lt;property name=""lineWrappingIndentation"" value=""4""/&gt;
            &lt;property name=""arrayInitIndent"" value=""4""/&gt;
        &lt;/module&gt;
        &lt;module name=""AbbreviationAsWordInName""&gt;
            &lt;property name=""ignoreFinal"" value=""false""/&gt;
            &lt;property name=""allowedAbbreviationLength"" value=""3""/&gt;
            &lt;property name=""tokens""
                      value=""CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, ANNOTATION_FIELD_DEF,
                    PARAMETER_DEF, VARIABLE_DEF, METHOD_DEF""/&gt;
        &lt;/module&gt;
        &lt;module name=""OverloadMethodsDeclarationOrder""/&gt;
        &lt;module name=""VariableDeclarationUsageDistance""/&gt;
        &lt;module name=""CustomImportOrder""&gt;
            &lt;property name=""customImportOrderRules"" value=""THIRD_PARTY_PACKAGE###SPECIAL_IMPORTS###STANDARD_JAVA_PACKAGE###STATIC""/&gt;
            &lt;property name=""specialImportsRegExp"" value=""^javax\.""/&gt;
            &lt;property name=""standardPackageRegExp"" value=""^java\.""/&gt;
            &lt;property name=""separateLineBetweenGroups"" value=""false""/&gt;
            &lt;property name=""sortImportsInGroupAlphabetically"" value=""true""/&gt;
            &lt;property name=""tokens"" value=""IMPORT, STATIC_IMPORT, PACKAGE_DEF""/&gt;
        &lt;/module&gt;
        &lt;module name=""MethodParamPad""&gt;
            &lt;property name=""tokens""
                      value=""CTOR_DEF, LITERAL_NEW, METHOD_CALL, METHOD_DEF,
                    SUPER_CTOR_CALL, ENUM_CONSTANT_DEF""/&gt;
        &lt;/module&gt;
        &lt;module name=""NoWhitespaceBefore""&gt;
            &lt;property name=""tokens""
                      value=""COMMA, SEMI, POST_INC, POST_DEC, DOT, ELLIPSIS, METHOD_REF""/&gt;
            &lt;property name=""allowLineBreaks"" value=""true""/&gt;
        &lt;/module&gt;
        &lt;module name=""ParenPad""&gt;
            &lt;property name=""tokens""
                      value=""ANNOTATION, ANNOTATION_FIELD_DEF, CTOR_CALL, CTOR_DEF, DOT, ENUM_CONSTANT_DEF,
                    EXPR, LITERAL_CATCH, LITERAL_DO, LITERAL_FOR, LITERAL_IF, LITERAL_NEW,
                    LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_WHILE, METHOD_CALL,
                    METHOD_DEF, QUESTION, RESOURCE_SPECIFICATION, SUPER_CTOR_CALL, LAMBDA""/&gt;
        &lt;/module&gt;
        &lt;module name=""OperatorWrap""&gt;
            &lt;property name=""option"" value=""NL""/&gt;
            &lt;property name=""tokens""
                      value=""BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR,
                    LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF ""/&gt;
        &lt;/module&gt;
        &lt;module name=""AnnotationLocation""&gt;
            &lt;property name=""id"" value=""AnnotationLocationMostCases""/&gt;
            &lt;property name=""tokens""
                      value=""CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF""/&gt;
        &lt;/module&gt;
        &lt;module name=""AnnotationLocation""&gt;
            &lt;property name=""id"" value=""AnnotationLocationVariables""/&gt;
            &lt;property name=""tokens"" value=""VARIABLE_DEF""/&gt;
            &lt;property name=""allowSamelineMultipleAnnotations"" value=""true""/&gt;
        &lt;/module&gt;
        &lt;module name=""NonEmptyAtclauseDescription""/&gt;
        &lt;module name=""InvalidJavadocPosition""/&gt;
        &lt;module name=""JavadocTagContinuationIndentation""/&gt;
        &lt;module name=""SummaryJavadoc""&gt;
            &lt;property name=""forbiddenSummaryFragments""
                      value=""^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )""/&gt;
        &lt;/module&gt;
        &lt;module name=""JavadocParagraph""/&gt;
        &lt;module name=""AtclauseOrder""&gt;
            &lt;property name=""tagOrder"" value=""@param, @return, @throws, @deprecated""/&gt;
            &lt;property name=""target""
                      value=""CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF""/&gt;
        &lt;/module&gt;
        &lt;module name=""JavadocMethod""&gt;
            &lt;property name=""scope"" value=""public""/&gt;
            &lt;property name=""allowMissingParamTags"" value=""true""/&gt;
            &lt;property name=""allowMissingReturnTag"" value=""true""/&gt;
            &lt;property name=""allowedAnnotations"" value=""Override, Test""/&gt;
            &lt;property name=""tokens"" value=""METHOD_DEF, CTOR_DEF, ANNOTATION_FIELD_DEF""/&gt;
        &lt;/module&gt;
        &lt;module name=""SingleLineJavadoc""&gt;
            &lt;property name=""ignoreInlineTags"" value=""false""/&gt;
        &lt;/module&gt;
        &lt;module name=""EmptyCatchBlock""&gt;
            &lt;property name=""exceptionVariableName"" value=""expected""/&gt;
        &lt;/module&gt;
        &lt;module name=""CommentsIndentation""&gt;
            &lt;property name=""tokens"" value=""SINGLE_LINE_COMMENT, BLOCK_COMMENT_BEGIN""/&gt;
        &lt;/module&gt;
        &lt;!-- https://checkstyle.org/config_filters.html#SuppressionXpathFilter --&gt;
        &lt;module name=""SuppressionXpathFilter""&gt;
            &lt;property name=""file"" value=""checkstyle-xpath-suppressions.xml""/&gt;
            &lt;property name=""optional"" value=""true""/&gt;
        &lt;/module&gt;
    &lt;/module&gt;
&lt;/module&gt;</code></pre>
</div>
</div>
</p>
<p>Could someone please suggest what should be adjusted to make it work?</p>
<p>Thank you!</p>
","71501025","<p>The plugin by default comes with Checkstyle version 8.29. Try explicitly defining the CheckStyle version (plus a small version bump to 3.1.2). For example, with version 9.2:</p>
<pre><code>&lt;plugin&gt;
    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
    &lt;artifactId&gt;maven-checkstyle-plugin&lt;/artifactId&gt;
    &lt;version&gt;3.1.2&lt;/version&gt;
    &lt;configuration&gt;
       ...
    &lt;/configuration&gt;
    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.puppycrawl.tools&lt;/groupId&gt;
            &lt;artifactId&gt;checkstyle&lt;/artifactId&gt;
            &lt;version&gt;9.2&lt;/version&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;
    &lt;executions&gt;
        ...
    &lt;/executions&gt;
&lt;/plugin&gt;
</code></pre>
"
"71361477","1","Targeting S+ (version 31 and above) requires that one of FLAG_IMMUTABLE or FLAG_MUTABLE","<p>when I launch my app in android 12, it crashed and it give me this error,
my project already have this dependency</p>
<pre><code>implementation 'androidx.work:work-runtime-ktx:2.7.1'
</code></pre>
<p>I updated</p>
<pre><code>implementation 'com.google.firebase:firebase-messaging-ktx:23.0.0'
</code></pre>
<p>firebase messaging library too</p>
<p>and I used pending intent in my project like this</p>
<pre><code>    val pendingIntent = PendingIntent.getActivity(
        applicationContext,
        0,
        intent,
        PendingIntent.FLAG_IMMUTABLE or PendingIntent.FLAG_UPDATE_CURRENT // setting the mutability flag
    )
</code></pre>
<p>error :</p>
<pre><code>E/AndroidRuntime: FATAL EXCEPTION: OkHttp Dispatcher
Process: com.internal, PID: 11866
java.lang.IllegalArgumentException: com.internal: Targeting S+ (version 31 and above) requires that one of FLAG_IMMUTABLE or FLAG_MUTABLE be specified when creating a PendingIntent.
Strongly consider using FLAG_IMMUTABLE, only use FLAG_MUTABLE if some functionality depends on the PendingIntent being mutable, e.g. if it needs to be used with inline replies or bubbles.
    at android.app.PendingIntent.checkFlags(PendingIntent.java:375)
    at android.app.PendingIntent.getActivityAsUser(PendingIntent.java:458)
    at android.app.PendingIntent.getActivity(PendingIntent.java:444)
    at android.app.PendingIntent.getActivity(PendingIntent.java:408)
    at com.chuckerteam.chucker.internal.support.NotificationHelper$transactionsScreenIntent$2.invoke(NotificationHelper.kt:47)
    at com.chuckerteam.chucker.internal.support.NotificationHelper$transactionsScreenIntent$2.invoke(NotificationHelper.kt:19)
    at kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
    at com.chuckerteam.chucker.internal.support.NotificationHelper.getTransactionsScreenIntent(Unknown Source:2)
    at com.chuckerteam.chucker.internal.support.NotificationHelper.show(NotificationHelper.kt:101)
    at com.chuckerteam.chucker.api.ChuckerCollector.onRequestSent$com_github_ChuckerTeam_Chucker_library(ChuckerCollector.kt:65)
    at com.chuckerteam.chucker.api.ChuckerInterceptor.intercept(ChuckerInterceptor.kt:111)
    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
    at com.android.core.helpers.interceptor.HeadersInterceptor.intercept(HeadersInterceptor.kt:41)
    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
    at com.android.core.helpers.AuthInterceptor.intercept(AuthInterceptor.kt:39)
    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:109)
    at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:201)
    at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:517)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
    at java.lang.Thread.run(Thread.java:920)
E/WebEngage: App has crashed
    java.lang.IllegalArgumentException: com.internal: Targeting S+ (version 31 and above) requires that one of FLAG_IMMUTABLE or FLAG_MUTABLE be specified when creating a PendingIntent.
    Strongly consider using FLAG_IMMUTABLE, only use FLAG_MUTABLE if some functionality depends on the PendingIntent being mutable, e.g. if it needs to be used with inline replies or bubbles.
</code></pre>
","71370528","<p>I finally found the problem,
I had <a href=""https://github.com/ChuckerTeam/chucker"" rel=""noreferrer"">chucker library</a> and I updated it to the latest version and it fixed</p>
"
"71063202","1","check valid date in java","<p>I tried to check a <code>String</code> input that is a valid date using the format <code>dd/MM/yyyy</code> like this:</p>
<pre><code>String input = Scanner.nextLine();
DateTimeFormatter formater = DateTimeFormatter.ofPattern(&quot;dd/MM/yyyy&quot;);
try{
    LocaleDate.parse(input, formater);
}
catch(Exception e)
</code></pre>
<p>But it can't check some rules below:</p>
<pre><code>Leap year, February 29 days.

Common year, February 28 days.

Month 1, 3, 5, 7, 8, 10, 12, max 31 days.

Month 4, 6, 9, 11, max 30 days.
</code></pre>
<p>When I use <code>input = &quot;30/02/2022&quot;</code>, it's legal.
I use <code>netbeans 8.2</code> and <code>jdk 1.8</code>. Do they support some methods for checking these rules?</p>
","71063276","<p>There are two things you need to change in your formatter:</p>
<ul>
<li>Use <code>uuuu</code> instead of <code>yyyy</code>. It's easy to try the latter, but <code>y</code> means &quot;year within ERA&quot;. It doesn't know whether it's BC or AD. <code>u</code> means &quot;year&quot; including ERA information.</li>
<li>The <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/time/format/DateTimeFormatter.html#ofPattern(java.lang.String)"" rel=""nofollow noreferrer"">default resolver style</a> is <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/time/format/ResolverStyle.html#SMART"" rel=""nofollow noreferrer""><code>SMART</code></a>. Use <code>.withResolverStyle(ResolverStyle.STRICT)</code> to return a <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/time/format/ResolverStyle.html#STRICT"" rel=""nofollow noreferrer"">strict</a> copy of the formatter.</li>
</ul>
"
"71250218","1","Java, project panama and how to deal with Hunspell 'suggest' result","<p>I'm experimenting with <a href=""https://github.com/hunspell/hunspell"" rel=""noreferrer"">Hunspell</a> and how to interact with it using <a href=""https://jdk.java.net/panama/"" rel=""noreferrer"">Java Project Panama</a> (Build 19-panama+1-13 (2022/1/18)). I was able to get some initial testing done, as in creating a <code>handle to Hunspell</code> and subsequently using that to perform a spell check. I'm now trying something more elaborate, letting Hunspell give me <code>suggestions</code> for a word not present in the dictionary. This is the code that I have for that now:</p>
<pre><code>public class HelloHun {
    public static void main(String[] args) {
        MemoryAddress hunspellHandle = null;
        try (ResourceScope scope = ResourceScope.newConfinedScope()) {
            var allocator = SegmentAllocator.nativeAllocator(scope);

            // Point it to US english dictionary and (so called) affix file
            // Note #1: it is possible to add words to the dictionary if you like
            // Note #2: it is possible to have separate/individual dictionaries and affix files (e.g. per user/doc type)
            var en_US_aff = allocator.allocateUtf8String(&quot;/usr/share/hunspell/en_US.aff&quot;);
            var en_US_dic = allocator.allocateUtf8String(&quot;/usr/share/hunspell/en_US.dic&quot;);

            // Get a handle to the Hunspell shared library and load up the dictionary and affix
            hunspellHandle = Hunspell_create(en_US_aff, en_US_dic);

            // Feed it a wrong word
            var javaWord = &quot;koing&quot;;

            // Do a simple spell check of the word
            var word = allocator.allocateUtf8String(javaWord);
            var spellingResult = Hunspell_spell(hunspellHandle, word);
            System.out.println(String.format(&quot;%s is spelled %s&quot;, javaWord, (spellingResult == 0 ? &quot;incorrect&quot; : &quot;correct&quot;)));

            // Hunspell also supports giving suggestions for a word - which is what we do next
            // Note #3: by testing this `koing` word in isolation - we know that there are 4 alternatives for this word
            // Note #4: I'm still investigating how to access individual suggestions

            var suggestions = allocator.allocate(10);
            var suggestionCount = Hunspell_suggest(hunspellHandle, suggestions, word);

            System.out.println(String.format(&quot;There are %d suggestions for %s&quot;, suggestionCount, javaWord));

            // `suggestions` - according to the hunspell API - is a `pointer to an array of strings pointer`
            // we know how many `strings` pointer there are, as that is the returned value from `suggest`
            // Question: how to process `suggestions` to get individual suggestions


        } finally {
            if (hunspellHandle != null) {
                Hunspell_destroy(hunspellHandle);
            }
        }
    }
}
</code></pre>
<p>What I'm seeing is that a call to <code>Hunspell_suggest</code> (created from <code>jextract</code>) succeeds and gives me back (4) suggestions (which I verified using Hunspell from the commandline) - so no problem there.</p>
<p>What is more challenging for me now is how do I unpack the <code>suggestions</code> element that comes back from this call? I've been looking at various examples, but none of them seem to go into this level of detail (and even if I find examples, they seem to be using outdated panama APIs).</p>
<p>So in essence, here is my question:</p>
<p>How do I unpack a structure that reportedly consists of a <em>pointer to an array of strings pointer</em> using panama JDK19 APIs to their respective collection of strings?</p>
","71258371","<p>Looking at the header here: <a href=""https://github.com/hunspell/hunspell/blob/master/src/hunspell/hunspell.h#L80"" rel=""nofollow noreferrer"">https://github.com/hunspell/hunspell/blob/master/src/hunspell/hunspell.h#L80</a></p>
<pre><code>/* suggest(suggestions, word) - search suggestions
 * input: pointer to an array of strings pointer and the (bad) word
 *   array of strings pointer (here *slst) may not be initialized
 * output: number of suggestions in string array, and suggestions in
 *   a newly allocated array of strings (*slts will be NULL when number
 *   of suggestion equals 0.)
 */
LIBHUNSPELL_DLL_EXPORTED int Hunspell_suggest(Hunhandle* pHunspell,
                                              char*** slst,
                                              const char* word);
</code></pre>
<p>The <code>slst</code> is a classic 'out' parameter. i.e. we pass a pointer to some value (in this case a <code>char**</code> i.e. an array of strings), and the function will set this pointer for us, as a way to return multiple results. (the first result being the number of suggestions)</p>
<p>In panama you use 'out' parameters by allocating a segment with the layout of the type the parameter is a pointer of. In this case <code>char***</code> is a pointer to <code>char**</code>, so the layout is <code>ADDRESS</code>. We then pass the created segment to the function, and finally retrieve/use the value from that segment after the function call, which will have filled in the segment contents:</p>
<pre><code>// char***
var suggestionsRef = allocator.allocate(ValueLayout.ADDRESS); // allocate space for an address
var suggestionCount = Hunspell_suggest(hunspellHandle, suggestionsRef, word);
// char** (the value set by the function)
MemoryAddress suggestions = suggestionsRef.get(ValueLayout.ADDRESS, 0);
</code></pre>
<p>After that, you can iterate over the array of strings:</p>
<pre><code>for (int i = 0; i &lt; suggestionCount; i++) {
    // char* (an element in the array)
    MemoryAddress suggestion = suggestions.getAtIndex(ValueLayout.ADDRESS, i);
    // read the string
    String javaSuggestion = suggestion.getUtf8String(suggestion, 0);
}
</code></pre>
"
"71587610","1","Micrometer @Timed annotation on simple public and private (service) methods","<p>I'm trying to apply Prometheus metrics using the micrometer <a href=""https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#actuator.metrics.supported.timed-annotation"" rel=""noreferrer""><code>@Timed</code></a> annotations.
I found out that they only work on controller endpoints and not &quot;simple&quot; public and private methods.</p>
<p>Given this example:</p>
<pre class=""lang-java prettyprint-override""><code>@RestController
public class TestController {

    @GetMapping(&quot;/test&quot;)
    @Timed(&quot;test-endpoint&quot;) //does create prometheus metrics
    public String test() {
        privateMethod();
        publicMethod();
        return &quot;test&quot;;
    }

    @Timed(&quot;test-private&quot;) //does NOT create prometheus metrics
    private void privateMethod() {System.out.println(&quot;private stuff&quot;);}

    @Timed(&quot;test-public&quot;) //does NOT create prometheus metrics
    public void publicMethod() {System.out.println(&quot;public stuff&quot;);}
}
</code></pre>
<p>creates the following metrics:</p>
<pre><code>...
# HELP test_endpoint_seconds  
# TYPE test_endpoint_seconds summary
test_endpoint_seconds_count{class=&quot;com.example.micrometerannotationexample.TestController&quot;,exception=&quot;none&quot;,method=&quot;test&quot;,} 1.0
test_endpoint_seconds_sum{class=&quot;com.example.micrometerannotationexample.TestController&quot;,exception=&quot;none&quot;,method=&quot;test&quot;,} 0.0076286
# HELP test_endpoint_seconds_max  
# TYPE test_endpoint_seconds_max gauge
test_endpoint_seconds_max{class=&quot;com.example.micrometerannotationexample.TestController&quot;,exception=&quot;none&quot;,method=&quot;test&quot;,} 0.0076286
...
</code></pre>
<p>No metrics found for <code>@Timed(&quot;test-private&quot;)</code> and <code>@Timed(&quot;test-public&quot;)</code>, why is that?</p>
<hr />
<p>Note: I've read on <a href=""https://github.com/micrometer-metrics/micrometer/pull/395#issuecomment-366828578"" rel=""noreferrer"">this github thread</a>, that Spring Boot does not recognize <code>@Timed</code> annotations on arbitrary methods and that you need to manually configure a <code>TimedAspect</code> Bean in order for it to work. I've tried that but still it yields no results.</p>
<pre class=""lang-java prettyprint-override""><code>@Configuration
@EnableAspectJAutoProxy
public class MetricsConfig {
    @Bean
    public TimedAspect timedAspect(MeterRegistry registry) {
        return new TimedAspect(registry);
    }
}
</code></pre>
<p><em>To try this locally see necessary gist <a href=""https://gist.github.com/eduvv/30e520469dd88eef4c679e044bfc8a2b"" rel=""noreferrer"">here</a></em></p>
","71602539","<p><code>@Timed</code> works only on <code>public</code> methods called by another class.</p>
<p>Spring Boot annotations like <code>@Timed</code> / <code>@Transactional</code> need the so-called proxying which happens only between invocations of <code>public</code> methods.</p>
<p>A good explanation is this one <a href=""https://stackoverflow.com/a/3429757/2468241"">https://stackoverflow.com/a/3429757/2468241</a></p>
"
"70938297","1","How to add classpath in new version of Android Studio","<p>I updated my android studio version to bumblebee version.<br>
Now I want add navigation component to my project.<br>
I want add classpath to gradle, but this file gradle has been changed and I don'y know how can I add this.<br></p>
<p>I want add this <code>       classpath(&quot;androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version&quot;)</code> to gradle files!<br></p>
<p>My project gradle file is :</p>
<pre><code>    plugins {
    id 'com.android.application' version '7.1.0' apply false
    id 'com.android.library' version '7.1.0' apply false
    id 'org.jetbrains.kotlin.android' version '1.6.10' apply false
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
</code></pre>
<p>How can I add this classpath to application gradle ?!</p>
","71410793","<p>In the latest version in February 2022 doesn't need to add <code>buildscript</code> anymore just add the id in <code>build.gradle</code> for project. It will be like this in <code>build.gradle</code> for project:</p>
<pre><code>plugins {
    id 'com.android.application' version '7.1.2' apply false
    id 'com.android.library' version '7.1.2' apply false
    id 'org.jetbrains.kotlin.android' version '1.6.10' apply false

    id 'androidx.navigation.safeargs' version '2.4.1' apply false
    // classpath are changed, so no need to add classpath anymore just the id and the version
}
</code></pre>
<p>Don't forget add the id again in the <code>build.gradle</code> module,</p>
<pre><code>plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'androidx.navigation.safeargs'
}
</code></pre>
"
"71724227","1","When to use and not use @Mock annotation, @MockBean annotation, @InjectMock annotation & @Autowired annotation in a spring webflux reactive project","<p>Can you please explain when to use below annotations and when not to use those. I am pretty new to testing frameworks and confused with all the answers in the web.</p>
<pre><code>@Mock
private Resource resource;
@MockBean
private Resource resource;
@InjectMock
private ProductService productService; 
@AutoWired
Private ProductRepository productRepo;
</code></pre>
","71724474","<p><strong>@Mock</strong></p>
<p>Used to make Mockito create a mock object.</p>
<p><strong>@InjectMock</strong></p>
<p>When you want Mockito to create an instance of an object and use the mocks annotated with <code>@Mock</code> as its dependencies.</p>
<p><strong>@AutoWired</strong></p>
<p>Used when you want to autowire a bean from the spring context, works exactly the same as in normal code but can only be used in tests that actually creates an application context, such as tests annotated with <code>@WebMvcTest</code> or <code>@SpringBootTest</code>.</p>
<p><strong>@MockBean</strong></p>
<p>Can be used to add mock objects to the Spring application context. The mock will replace any existing bean of the same type in the application context. If no bean of the same type is defined, a new one will be added. Often used together with <code>@SpringBootTest</code></p>
<p>So normally you either:</p>
<ul>
<li>Use <code>@Mock</code> and <code>@InjectMocks</code> for running tests without a spring
context, this is preferred as it's much faster.</li>
<li>Use <code>@SpringBootTest</code> or <code>@SpringMvcTest</code> to start a spring context together with <code>@MockBean</code> to create mock objects and <code>@Autowired</code> to get an instance of class you want to test, the mockeans will be used for its autowired dependencies. You use this when writing integration tests for code that interact with a database or want to test your REST API.</li>
</ul>
"
"71029574","1","Firebase Push notification not receiving in Android12 in Samsung S10 Device After updating Patch Update","<p>I am using a Samsung Galaxy S10 mobile. On February 3rd Security patch was updated on my phone. After the update Push notification was not received in my App. Other App notifications are working fine. Anyone can answer my question, please? What was the reason for not receiving notification?</p>
","71506283","<p>The answer could be because the PendingIntent for that app's notifications hasn't had its mutability defined. Starting from Android 12, you have to define whether a PendingIntent is immutable or mutable for it to work properly:</p>
<p><a href=""https://developer.android.com/about/versions/12/behavior-changes-12#pending-intent-mutability"" rel=""nofollow noreferrer"">https://developer.android.com/about/versions/12/behavior-changes-12#pending-intent-mutability</a></p>
<p>Another thing to try to make notifications work again is to add the &quot;exported:false&quot; tag to the notifications service:</p>
<p><a href=""https://developer.android.com/about/versions/12/behavior-changes-12#exported"" rel=""nofollow noreferrer"">https://developer.android.com/about/versions/12/behavior-changes-12#exported</a></p>
<p>That should help.</p>
"
"71338792","1","java.lang.NoClassDefFoundError: Failed resolution of: Ljava/lang/Math8 when upgrading Gradle and Android Gradle Plugin","<p>I'm working on an Android app with a Gradle version of <code>7.1.1</code> and an Android Gradle Plugin version of <code>7.0.0</code>. When I upgrade to Gradle version <code>7.2</code> and Android Gradle Plugin version <code>7.1.1</code>, I get the following error.</p>
<pre><code>2022-03-02 17:15:47.072 25300-25300/... E/AndroidRuntime: FATAL EXCEPTION: main
    Process: ..., PID: 25300
    java.lang.NoClassDefFoundError: Failed resolution of: Ljava/lang/Math8;
        at j$.time.Instant.ofEpochSecond(Instant.java:328)
        at j$.time.Instant.&lt;clinit&gt;(Instant.java:232)
        at j$.time.Instant.ofEpochMilli(Instant.java:344)
        ...
        at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
        at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106)
        at android.os.Handler.handleCallback(Handler.java:883)
        at android.os.Handler.dispatchMessage(Handler.java:100)
        at android.os.Looper.loop(Looper.java:214)
        at android.app.ActivityThread.main(ActivityThread.java:7356)
        at java.lang.reflect.Method.invoke(Native Method)
        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:492)
        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:930)
     Caused by: java.lang.ClassNotFoundException: Didn't find class &quot;java.lang.Math8&quot; on path: DexPathList[[zip file &quot;/data/app/...-NbMXeOj8LumN03n4IMK5Cw==/base.apk&quot;],nativeLibraryDirectories=[/data/app/...-NbMXeOj8LumN03n4IMK5Cw==/lib/x86, /data/app/...-NbMXeOj8LumN03n4IMK5Cw==/base.apk!/lib/x86, /system/lib, /system/product/lib]]
        at dalvik.system.BaseDexClassLoader.findClass(BaseDexClassLoader.java:196)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:379)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:312)
        at j$.time.Instant.ofEpochSecond(Instant.java:328) 
        at j$.time.Instant.&lt;clinit&gt;(Instant.java:232) 
        at j$.time.Instant.ofEpochMilli(Instant.java:344) 
        ...
        at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33) 
        at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106) 
        at android.os.Handler.handleCallback(Handler.java:883) 
        at android.os.Handler.dispatchMessage(Handler.java:100) 
        at android.os.Looper.loop(Looper.java:214) 
        at android.app.ActivityThread.main(ActivityThread.java:7356) 
        at java.lang.reflect.Method.invoke(Native Method) 
        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:492) 
        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:930)
</code></pre>
<p>The error is coming from this code:</p>
<pre class=""lang-kotlin prettyprint-override""><code>fun toLocalStartOfDay(date: Long): Instant = Instant.ofEpochMilli(date)
    .atZone(ZoneId.systemDefault())
    .withHour(0)
    .withMinute(0)
    .withSecond(0)
    .withNano(0)
    .toInstant()
</code></pre>
<p>The <code>build.gradle</code> file is set to target JVM 1.8 with desugaring.</p>
<pre><code>compileOptions {
    coreLibraryDesugaringEnabled = true
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
}

kotlinOptions {
    jvmTarget = '1.8'
}
</code></pre>
<p>The <code>desugar_jdk_libs</code> version is set to <code>1.0.9</code>.</p>
<pre><code>versions.androidDesugaringVersion = '1.0.9'
support.android_desugaring = &quot;com.android.tools:desugar_jdk_libs:$versions.androidDesugaringVersion&quot;
</code></pre>
<p>Why would upgrading cause this error?</p>
","71340133","<p>Desugaring effects &quot;a subset of <code>java.time</code>&quot; so upgrading to the latest version of <code>desugar_jdk_libs</code> should fix the issue. At the time of posting, the latest version is <code>1.1.5</code>.</p>
<p><strong>References</strong></p>
<ul>
<li><a href=""https://developer.android.com/studio/write/java8-support#library-desugaring"" rel=""noreferrer"">Java 8+ API desugaring support (Android Gradle Plugin 4.0.0+)</a></li>
<li><a href=""https://mvnrepository.com/artifact/com.android.tools/desugar_jdk_libs?repo=google"" rel=""noreferrer"">desugar_jdk_libs (Maven)</a></li>
</ul>
"
"71722390","1","Log4J2 AppenderLoggingException NoSuchMethodError StackLocatorUtil.getCurrentStackTrace()","<p>As soon as an exception/error occurs and is supposed to be logged, I get the following error/stack trace:</p>
<pre><code>org.apache.logging.log4j.core.appender.AppenderLoggingException: java.lang.NoSuchMethodError: 'java.util.Deque org.apache.logging.log4j.util.StackLocatorUtil.getCurrentStackTrace()'
   at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:165)
   at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:134)
   at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:125)
   at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:89)
   at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:675)
   at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:633)
   at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:616)
   at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:552)
   at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:82)
   at org.apache.logging.log4j.core.Logger.log(Logger.java:161)
   at org.apache.logging.log4j.spi.AbstractLogger.tryLogMessage(AbstractLogger.java:2205)
   at org.apache.logging.log4j.spi.AbstractLogger.logMessageTrackRecursion(AbstractLogger.java:2159)
   at org.apache.logging.log4j.spi.AbstractLogger.logMessageSafely(AbstractLogger.java:2142)
   at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:2017)
   at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1983)
   at org.apache.logging.log4j.spi.AbstractLogger.fatal(AbstractLogger.java:1063)
</code></pre>
<p>the next <code>at</code> is whatever called <code>Logger#fatal/error(String,Throwable)</code></p>
<p>Java 11, Log4J 2.17.2 (-core and -api), project built using Gradle. removing <code>Multi-Release: true</code> from build.gradle doesn't seem to fix the issue (only adds the, to be expected, Reflection.getCallerClass() warning)</p>
<p>What am I missing?</p>
","71729253","<p>Turns out a library had the dependency Log4J-api 2.17.<strong>1</strong> (but not -core), my gradle file specified Log4J-core 2.17.<strong>2</strong> so the older -api version overrid the latest one.
Apparently, from 2.17.1 to .2, <code>StackLocatorUtil.getCurrentStackTrace()</code>'s return was changed from <code>Stack</code> to <code>Deque</code>.</p>
"
"71771423","1","React Native: 'compileJava' task (current target is 1.8) and 'compileKotlin' task (current target is 11) jvm target compat","<p>Hello everyone I am trying to create and run a react native app. I run
<code>npx react-native init rn4</code> but when I run <code>npm run android</code> I have this error:</p>
<pre><code>&gt; Task :react-native-gradle-plugin:compileKotlin
'compileJava' task (current target is 1.8) and 'compileKotlin' task (current target is 11) jvm target compatibility should be set to the same Java version.
w: C:\Users\emanu\App\rn4\node_modules\react-native-gradle-plugin\src\main\kotlin\com\facebook\react\ReactExtension.kt: (10, 37): 'BaseVariant' is deprecated. Deprecated in Java
w: C:\Users\emanu\App\rn4\node_modules\react-native-gradle-plugin\src\main\kotlin\com\facebook\react\ReactExtension.kt: (119, 30): 'BaseVariant' is deprecated. Deprecated in Java
w: C:\Users\emanu\App\rn4\node_modules\react-native-gradle-plugin\src\main\kotlin\com\facebook\react\ReactExtension.kt: (135, 26): 'BaseVariant' is deprecated. Deprecated in Java
w: C:\Users\emanu\App\rn4\node_modules\react-native-gradle-plugin\src\main\kotlin\com\facebook\react\ReactExtension.kt: (155, 32): 'BaseVariant' is deprecated. Deprecated in Java
w: C:\Users\emanu\App\rn4\node_modules\react-native-gradle-plugin\src\main\kotlin\com\facebook\react\ReactExtension.kt: (161, 31): 'BaseVariant' is deprecated. Deprecated in Java
w: C:\Users\emanu\App\rn4\node_modules\react-native-gradle-plugin\src\main\kotlin\com\facebook\react\ReactExtension.kt: (169, 36): 'BaseVariant' is deprecated. Deprecated in Java
w: C:\Users\emanu\App\rn4\node_modules\react-native-gradle-plugin\src\main\kotlin\com\facebook\react\ReactPlugin.kt: (99, 48): 'reactRoot: DirectoryProperty' is deprecated. reactRoot was confusing and has been replace with rootto point to your root project and reactNativeDir to point to the folder of the react-native NPM package
w: C:\Users\emanu\App\rn4\node_modules\react-native-gradle-plugin\src\main\kotlin\com\facebook\react\TaskConfiguration.kt: (10, 37): 'ApplicationVariant' is deprecated. Deprecated in Java
w: C:\Users\emanu\App\rn4\node_modules\react-native-gradle-plugin\src\main\kotlin\com\facebook\react\TaskConfiguration.kt: (11, 37): 'BaseVariant' is deprecated. Deprecated in Java
w: C:\Users\emanu\App\rn4\node_modules\react-native-gradle-plugin\src\main\kotlin\com\facebook\react\TaskConfiguration.kt: (12, 37): 'LibraryVariant' is deprecated. Deprecated in Java
w: C:\Users\emanu\App\rn4\node_modules\react-native-gradle-plugin\src\main\kotlin\com\facebook\react\TaskConfiguration.kt: (28, 51): 'BaseVariant' is deprecated. Deprecated in Java
w: C:\Users\emanu\App\rn4\node_modules\react-native-gradle-plugin\src\main\kotlin\com\facebook\react\TaskConfiguration.kt: (131, 12): 'ApplicationVariant' is deprecated. Deprecated in Java
w: C:\Users\emanu\App\rn4\node_modules\react-native-gradle-plugin\src\main\kotlin\com\facebook\react\TaskConfiguration.kt: (132, 12): 'LibraryVariant' is deprecated. Deprecated in Java
w: C:\Users\emanu\App\rn4\node_modules\react-native-gradle-plugin\src\main\kotlin\com\facebook\react\TaskConfiguration.kt: (250, 14): 'BaseVariant' is deprecated. Deprecated in Java

&gt; Task :react-native-gradle-plugin:compileJava
6 actionable tasks: 6 executed
Note: C:\Users\emanu\App\rn4\node_modules\react-native-gradle-plugin\src\main\java\com\facebook\react\codegen\generator\SchemaJsonParser.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

FAILURE: Build failed with an exception.

* Where:
Build file 'C:\Users\emanu\App\rn4\android\app\build.gradle' line: 1

* What went wrong:
A problem occurred evaluating project ':app'.
&gt; Failed to apply plugin 'com.android.internal.application'.
   &gt; Android Gradle plugin requires Java 11 to run. You are currently using Java 1.8.
     You can try some of the following options:
       - changing the IDE settings.
       - changing the JAVA_HOME environment variable.
       - changing `org.gradle.java.home` in `gradle.properties`.

* Try:
&gt; Run with --stacktrace option to get the stack trace.
&gt; Run with --info or --debug option to get more log output.
&gt; Run with --scan to get full insights.

* Get more help at https://help.gradle.org

BUILD FAILED in 59s

error Failed to install the app. Make sure you have the Android development environment set up: https://reactnative.dev/docs/environment-setup.
Error: Command failed: gradlew.bat app:installDebug -PreactNativeDevServerPort=8081
Note: C:\Users\emanu\App\rn4\node_modules\react-native-gradle-plugin\src\main\java\com\facebook\react\codegen\generator\SchemaJsonParser.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.

FAILURE: Build failed with an exception.

* Where:
Build file 'C:\Users\emanu\App\rn4\android\app\build.gradle' line: 1

* What went wrong:
A problem occurred evaluating project ':app'.
&gt; Failed to apply plugin 'com.android.internal.application'.
   &gt; Android Gradle plugin requires Java 11 to run. You are currently using Java 1.8.
     You can try some of the following options:
       - changing the IDE settings.
       - changing the JAVA_HOME environment variable.
       - changing `org.gradle.java.home` in `gradle.properties`.

* Try:
&gt; Run with --stacktrace option to get the stack trace.
&gt; Run with --info or --debug option to get more log output.
&gt; Run with --scan to get full insights.

* Get more help at https://help.gradle.org

BUILD FAILED in 59s

    at makeError (C:\Users\emanu\App\rn4\node_modules\execa\index.js:174:9)
    at C:\Users\emanu\App\rn4\node_modules\execa\index.js:278:16
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
    at async runOnAllDevices (C:\Users\emanu\App\rn4\node_modules\@react-native-community\cli-platform-android\build\commands\runAndroid\runOnAllDevices.js:109:5)
    at async Command.handleAction (C:\Users\emanu\App\rn4\node_modules\@react-native-community\cli\build\index.js:192:9)
info Run CLI with --verbose flag for more details.
</code></pre>
<p>I also run <code>cd android &amp;&amp; ./gradlew clean</code> and the output is:</p>
<pre><code>FAILURE: Build failed with an exception.

* Where:
Build file 'C:\Users\emanu\App\rn4\android\app\build.gradle' line: 1

* What went wrong:
A problem occurred evaluating project ':app'.
&gt; Failed to apply plugin 'com.android.internal.application'.
   &gt; Android Gradle plugin requires Java 11 to run. You are currently using Java 1.8.
     You can try some of the following options:
       - changing the IDE settings.
       - changing the JAVA_HOME environment variable.
       - changing `org.gradle.java.home` in `gradle.properties`.
</code></pre>
<p>This is the file in <code>android/gradle/wrapper/gradle-wrapper.properties</code></p>
<pre><code>distributionBase=GRADLE_USER_HOME
distributionPath=wrapper/dists
distributionUrl=https\://services.gradle.org/distributions/gradle-7.3.3-all.zip
zipStoreBase=GRADLE_USER_HOME
zipStorePath=wrapper/dists
</code></pre>
<p>and this is the output when I run <code>./gradlew --version</code></p>
<pre><code>------------------------------------------------------------
Gradle 7.3.3
------------------------------------------------------------

Build time:   2021-12-22 12:37:54 UTC
Revision:     6f556c80f945dc54b50e0be633da6c62dbe8dc71

Kotlin:       1.5.31
Groovy:       3.0.9
Ant:          Apache Ant(TM) version 1.10.11 compiled on July 10 2021
JVM:          1.8.0_302 (Oracle Corporation 25.302-b08)
OS:           Windows 10 10.0 amd64
</code></pre>
<p>I read similar posts but I haven't been able to fix it. With folders that I created some days ago I have no problem when I run the app.</p>
<p>Someone can help me please?
Very thanks!</p>
","71800545","<p>If you are using React Native witch Chocolatey, you must update JDK version to 11.<br />
In order to do the update, execute this in PowerShell (with admin privileges):</p>
<pre><code>choco install -y openjdk11
</code></pre>
<p>After that, the first time (only the first time) you run <code>npm android</code>, you will get a lot of warnings, but the built of the project will work.</p>
<p>If you continue receiving an error, maybe you need to adjust the gradle version of your project to be compatible with the new JDK version.<br />
You can achieve this by editing the file <em>YOUR_PROJECT\android\gradle\wrapper\gradle-wrapper.properties</em><br />
Update the version of <strong>distributionUrl</strong> to 7.4.2</p>
<p>I hope I have been helpful</p>
"
"70725347","1","The application “Eclipse” can’t be opened. (macOS Monterey)","<p>I downloaded Eclipse on my Mac for school, following these instructions:</p>
<blockquote>
In your browser, go to Eclipse Downloads. Do not use the Eclipse Installer. Instead follow these steps to download and install Eclipse.
<p>Find the Eclipse IDE for Java Developers package (make sure you do not pick the wrong package) and click on the appropriate download link for your operating system (Windows, Mac, or Linux) and architecture (32-bit or 64-bit). There are many other packages but this is the one that you'll need in this class.</p>
<p>Once the download has completed, locate the downloaded file. This file will be a compressed (i.e., a &quot;.zip&quot;, or &quot;.tar.gz&quot;) file. Uncompress this file into the directory of your choice. It doesn't really matter where you put the Eclipse installation folder as long as you know how to retrieve it. You can optionally create a shortcut of the Eclipse IDE executable file (&quot;eclipse.exe&quot; on Windows, or &quot;eclipse&quot; on Linux, or &quot;Eclipse&quot; on Mac OS X) found in the directory that is created. To start Eclipse you just double-click on the executable file or the shortcut</p>
</blockquote>
I downloaded the Eclipse macOS x86_64 version, and moved it into my applications folder. I was able to open Eclipse, and everything works perfectly, and I can work if it's open; but after I close Eclipse and a couple hours go by, I get the following messages once I try to reopen it. ""Eclipse quit unexpectedly"" and ""The application “Eclipse” can’t be opened.""
<p>I had the .dmg file in my downloads folder, which might have been the problem. I moved it into my applications folder with Eclipse, and that still doesn't work.</p>
<p>I have tried to delete and redownload Eclipse multiple times, and nothing works.</p>
<p>do you have any suggestions on how I can fix this?</p>
","71740449","<p>Faced the same issue each time I'm restarting the Macbook pro M1, and a random Reddit thread provided me with a way to fix it. Open a terminal and run,</p>
<pre><code>sudo codesign --force --deep --sign - /Applications/Eclipse.app
</code></pre>
<p>Not sure why this codesigning fixes the problem. But seems to be a bug in the eclipse itself. Hope this helps someone.</p>
"
"71377448","1","When I Update my Phone to Android 12, Installation did not succeed. The application could not be installed: INSTALL_PARSE_FAILED_MANIFEST_MALFORMED","<p>I was working on my project perfectly since I Update my phone to Android 12 unfortunately when I run the project to my phone this Error appears:</p>
<blockquote>
<p>Installation did not succeed.
The application could not be installed: INSTALL_PARSE_FAILED_MANIFEST_MALFORMED</p>
</blockquote>
<blockquote>
<p>List of apks:
[0] 'C:\Users\Microsoft\AndroidStudioProjects\YmmyServer\app\build\outputs\apk\debug\app-debug.apk'
Installation failed due to: 'null'
Retry</p>
</blockquote>
<p>This is My build.gradle(Project) File:</p>
<pre><code>// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.google.gms:google-services:4.3.10'
        classpath 'com.android.tools.build:gradle:4.0.0'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url &quot;https://jitpack.io&quot; }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
</code></pre>
<p>And this is My build.gradle(Module) File:</p>
<pre><code>plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion 32
    buildToolsVersion &quot;30.0.3&quot;

    defaultConfig {
        applicationId &quot;com.example.ymmyserver&quot;
        minSdkVersion 30
        targetSdkVersion 32
        versionCode 1
        versionName &quot;1.0&quot;

        testInstrumentationRunner &quot;androidx.test.runner.AndroidJUnitRunner&quot;
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}
apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
dependencies {

    implementation 'com.github.jd-alexander:android-flat-button:v1.1'
//    implementation 'info.hoang8f:fbutton:1.0.5'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-storage'
    implementation 'com.firebaseui:firebase-ui-database:8.0.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation &quot;androidx.cardview:cardview:1.0.0&quot;
    implementation &quot;androidx.recyclerview:recyclerview:1.2.1&quot;
    implementation 'com.rengwuxian.materialedittext:library:2.1.4'
    implementation 'com.google.firebase:firebase-core:10.2.0'
    implementation 'com.google.firebase:firebase-database'
    implementation 'com.google.firebase:firebase-analytics'
    implementation platform('com.google.firebase:firebase-bom:29.1.0')
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.navigation:navigation-fragment:2.4.1'
    implementation 'androidx.navigation:navigation-ui:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}
</code></pre>
<p>And this is the Mainifest File:</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    package=&quot;com.example.ymmyserver&quot;&gt;

    &lt;application
        android:allowBackup=&quot;true&quot;
        android:icon=&quot;@mipmap/ic_launcher&quot;
        android:label=&quot;@string/app_name&quot;
        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;
        android:supportsRtl=&quot;true&quot;
        android:theme=&quot;@style/Theme.Ymmy&quot;&gt;
        &lt;activity android:name=&quot;.FoodList&quot;&gt;&lt;/activity&gt;
        &lt;activity
            android:name=&quot;.Home&quot;
            android:label=&quot;@string/title_activity_home&quot;
            android:theme=&quot;@style/Theme.Ymmy.NoActionBar&quot;&gt;&lt;/activity&gt;
        &lt;activity android:name=&quot;.SignIn&quot; /&gt;
        &lt;activity android:name=&quot;.MainActivity&quot;&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;

                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;

&lt;/manifest&gt;
</code></pre>
<p>What Should I do Please Help Me</p>
","71381120","<p>Try to use this tag in your <code>AndroidManifest.xml</code> file for the activity</p>
<pre><code>&lt;activity 
   android:name=&quot;.MainActivity&quot;
   android:exported=&quot;true&quot;&gt;
</code></pre>
"
"71966064","1","Java: FileOutputStream(""NUL:"") not working after Java upgrade","<p>On Windows, NUL is the null output device similar to /dev/null on Linux.</p>
<p>With Oracle Java 8 <strong>Update 331</strong>, trying to get a <code>new FileOutputStream(&quot;NUL:&quot;)</code> throws an exception. Previously (Java 8u321) it worked fine.</p>
<p>The problem seems to be the colon:</p>
<ul>
<li><code>new FileOutputStream(&quot;NUL&quot;)</code> - OK</li>
<li><code>new FileOutputStream(&quot;NUL:&quot;)</code> - exception</li>
</ul>
<p>Can anyone point me to docs or JDK sources regarding this change? I can't change the code itself because it is in a 3rd party lib (xnio-api).</p>
<pre><code>try
{
  new FileOutputStream(&quot;NUL:&quot;);
  System.out.println(&quot;OK&quot;);
}
catch (FileNotFoundException e)
{
  System.out.println(e);
}
</code></pre>
","71966125","<p>I suspect <a href=""https://github.com/openjdk/jdk8u/commit/d72d28967d732ba32e02178b828255378c5a8938"" rel=""noreferrer"">this is the offending change</a>.</p>
<p>Apparently it tries to avoid accessing ADS (alternate data streams), but seems to &quot;accidentally&quot; also prevent access to device-files like this.</p>
<p>If that's correct, then you can try setting the system property <code>jdk.io.File.enableADS</code> to <code>true</code> to re-enable the old behaviour.</p>
"
"71429854","1","Could not find org.junit.jupiter:junit-jupiter:","<p>I was trying to learn how to use OkHTTP. I importetd the library to my project but when i compile the code it brings out this error.</p>
<p>Could not find org.junit.jupiter:junit-jupiter:.
Required by:
project :app
Search in build.gradle files.</p>
<p>please what should i do. This is my build.gradle below</p>
<pre><code>plugins {
id 'com.android.application'
}

android {
compileSdk 32

defaultConfig {
    applicationId &quot;com.omolayoseun.saprktesterapp&quot;
    minSdk 23
    targetSdk 32
    versionCode 1
    versionName &quot;1.0&quot;

    testInstrumentationRunner &quot;androidx.test.runner.AndroidJUnitRunner&quot;
}

buildTypes {
    release {
        minifyEnabled false
        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard- 
rules.pro'
    }
}
compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
}
}

dependencies {

implementation 'androidx.appcompat:appcompat:1.4.1'
implementation 'com.google.android.material:material:1.5.0'
implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
implementation 'org.junit.jupiter:junit-jupiter'
testImplementation 'junit:junit:4.13.2'
androidTestImplementation 'androidx.test.ext:junit:1.1.3'
androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

implementation 'com.squareup.okhttp3:okhttp:4.9.1'
// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'

}
</code></pre>
","72124953","<p>Seems that your problem is in the maven repository setting.
Place the code below to your <em><strong>build.gradle</strong></em> which is located in the project core folder.</p>
<pre><code>buildscript {
repositories {
    mavenCentral()
    google()
}}
</code></pre>
<p>If it not helps or this repositories already there - try to turn off offline mode.
Go to Preferences &gt; Gradle and uncheck &quot;Offline work&quot;
If Gradle is in offline mode, which means that it won't go to the network to resolve dependencies.</p>
"
"72139334","1","Why onAdDismissedFullScreenContent is being called lately?","<p>I have created a function to show interstitial ad before showing another activity.
It's working but <code>onAdDismissedFullScreenContent</code> is being called 2-3 sec lately after closing the ad. It causes previous screen to stand-by.
There's a chance to re-click the button to show the wanted Activity.</p>
<p>I really don't understand how to resolve this issue.</p>
<img src=""https://i.stack.imgur.com/kqsNl.gif"" width=""250""/>
<p>Here is my code:</p>
<pre><code>public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Button button = findViewById(R.id.button);
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                AdManager.showInterstitial(MainActivity.this, () -&gt; {
                    Intent i = new Intent(MainActivity.this, MainActivity2.class);
                    startActivity(i);
                });
            }
        });
        AdManager.loadInterstitial(this);
    }
}

</code></pre>
<p>And this is Application Class:</p>
<pre><code>
public class App  extends Application {
    private static Context mContext;


    @Override
    public void onCreate() {
        super.onCreate();
        mContext = getApplicationContext();
        AdManager.Init(this);
    }

    public static Context getContext() {
        return mContext;
    }
}
</code></pre>
<p>AdManager Class:</p>
<pre><code>public class AdManager {

    private static InterstitialAd mInterstitialAd;
    private static boolean loading, showing;


    public static void Init(Context context) {

        MobileAds.initialize(context, initializationStatus -&gt; {
            loadInterstitial(context);
        });
    }


    public static void loadInterstitial(Context context) {

        if (context == null)
            context = App.getContext();

        Context finalContext = context;
        
        if (mInterstitialAd != null) {
            Toast.makeText(context,&quot;already loaded&quot;,Toast.LENGTH_LONG).show();
            return;
        }
        if (loading) {
            Toast.makeText(context,&quot;already another request is processing&quot;,Toast.LENGTH_LONG).show();
            return;
        }
        Toast.makeText(context,&quot;requesting interstitial&quot;,Toast.LENGTH_LONG).show();

        loading = true;
        AdRequest adRequest = new AdRequest.Builder().build();

        InterstitialAd.load(context, &quot;Interstial Ad Unit ID&quot;, adRequest, new InterstitialAdLoadCallback() {
            @Override
            public void onAdLoaded(@NonNull InterstitialAd interstitialAd) {
                mInterstitialAd = interstitialAd;
                Toast.makeText(finalContext,&quot;ad loaded&quot;,Toast.LENGTH_LONG).show();
                loading = false;
            }

            @Override
            public void onAdFailedToLoad(@NonNull LoadAdError loadAdError) {
                mInterstitialAd = null;
                loading = false;
                Toast.makeText(finalContext,&quot;ad failed to load&quot;,Toast.LENGTH_LONG).show();
            }

        });
    }

    public static void showInterstitial(Activity activity, @NonNull AdListener listener) {
        
        if (showing) {
            Toast.makeText(activity,&quot;already showing&quot;,Toast.LENGTH_LONG).show();
            listener.onCompleted();
            return;
        }

        if (mInterstitialAd != null) {
            showNow(activity, listener);

        } else {
            Toast.makeText(activity,&quot;mInterstitialAd is null&quot;,Toast.LENGTH_LONG).show();
            listener.onCompleted();
            loadInterstitial(activity.getApplicationContext());
        }

    }

    private static void showNow(Activity activity, AdListener listener) {

        if (mInterstitialAd != null &amp;&amp; !showing) {
            showing = true;
            mInterstitialAd.setFullScreenContentCallback(new FullScreenContentCallback() {
                @Override
                public void onAdDismissedFullScreenContent() {
                    Toast.makeText(activity,&quot;Ad dismissed&quot;,Toast.LENGTH_LONG).show();
                    mInterstitialAd = null;
                    listener.onCompleted();
                    showing = false;
                    // times to load an new interstitial ad content
                    loadInterstitial(activity.getApplicationContext());
                }

                @Override
                public void onAdFailedToShowFullScreenContent(@NonNull AdError adError) {
                    Toast.makeText(activity,&quot;AdFailedToShowFullScreenContent&quot;,Toast.LENGTH_LONG).show();
                    mInterstitialAd = null;
                    listener.onCompleted();
                    showing = false;

                    // times to load an new interstitial ad content
                    loadInterstitial(activity.getApplicationContext());
                }


            });
            //  Now show the ad
            Toast.makeText(activity,&quot;call to show ad&quot;,Toast.LENGTH_LONG).show();
            mInterstitialAd.show(activity);
        } else {
            Toast.makeText(activity,&quot;either mInterstitialAd is null or ad already is showing&quot;,Toast.LENGTH_LONG).show();
            listener.onCompleted();
        }
    }

        public interface AdListener {
        void onCompleted();
    }

}

</code></pre>
<p>Please help.</p>
","72150183","<h3>The delay problem</h3>
<hr />
<p>You can't really help it. The problem is from the admob. This will happen. But, to know more about it, we can post an issue abt that on the Google Issue Tracker.</p>
<h3>The button problem</h3>
<hr />
<p>I dont think this is any hard task. Just follow the steps:</p>
<ol>
<li><p>Create a <code>ProgressBar</code> in your xml layout on top of the button and set its visibility to <code>gone</code></p>
</li>
<li><p>When the button is click and the ad is shown, you can set the button to invisible and the progress bar can be set to invisible.</p>
</li>
<li><p>Then after a delay, the other activity opens without any harm to the activity from <code>NullPointerException</code></p>
</li>
</ol>
"
"71956115","1","Why does jaxb2-maven-plugin xjc fail with Corretto jdk11.0.15_9 but not with Temurin jdk-11.0.14.1+1","<p>Since upgrading my jdk to Corretto jdk11.0.15_9 the xjc goal of jaxb2-maven-plugin fails.
The problem doesn't manifest when running with Temurin jdk-11.0.14.1+1. I'm running it on windows 10 with maven 3.8.5.</p>
<p>Command:</p>
<pre><code>&gt; set JAVA_HOME=C:\Corretto\jdk11.0.15_9
&gt; mvn jaxb2:xjc

[INFO] Scanning for projects...
[INFO]
[INFO] -----------------&lt; com.example &gt;------------------
[INFO] Building example 1.0.0-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO]
[INFO] --- jaxb2-maven-plugin:2.5.0:xjc (default-cli) @ example ---
[INFO] Created EpisodePath [C:\Workspace\example\target\generated-sources\jaxb\META-INF\JAXB]: true
[INFO] Created EpisodePath [C:\Workspace\example\target\generated-sources\jaxb\META-INF\JAXB]: true
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  0.764 s
[INFO] Finished at: 2022-04-21T15:24:15+02:00
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.codehaus.mojo:jaxb2-maven-plugin:2.5.0:xjc (default-cli) on project example: &quot;file:\C:\Users\johndoe\.m2\repository\org\glassfish\jaxb\jaxb-xjc\2.3.2\jaxb-xjc-2.3.2.jar!\META-INF\versions\9&quot; is not a valid file name: {1}: Invalid file path -&gt; [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
</code></pre>
<p>I have a bindings file here: <code>src/main/xjb/jaxb-bindings.xjb</code> and multiple xsd files in <code>src/main/xsd</code>.</p>
<p>This is the relevant piece of my pom.xml:</p>
<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jaxb&lt;/groupId&gt;
    &lt;artifactId&gt;jaxb-runtime&lt;/artifactId&gt;
    &lt;version&gt;2.3.6&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.jvnet.jaxb2_commons&lt;/groupId&gt;
    &lt;artifactId&gt;jaxb2-basics-runtime&lt;/artifactId&gt;
    &lt;version&gt;0.12.0&lt;/version&gt;
    &lt;exclusions&gt;
        &lt;!-- dependencyConvergence --&gt;
        &lt;exclusion&gt;
            &lt;groupId&gt;com.sun.istack&lt;/groupId&gt;
            &lt;artifactId&gt;istack-commons-runtime&lt;/artifactId&gt;
        &lt;/exclusion&gt;
    &lt;/exclusions&gt;
&lt;/dependency&gt;
...
&lt;plugin&gt;
    &lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt;
    &lt;artifactId&gt;jaxb2-maven-plugin&lt;/artifactId&gt;
    &lt;version&gt;2.5.0&lt;/version&gt;
    &lt;executions&gt;
        &lt;execution&gt;
            &lt;id&gt;xjc&lt;/id&gt;
            &lt;goals&gt;
                &lt;goal&gt;xjc&lt;/goal&gt;
            &lt;/goals&gt;
        &lt;/execution&gt;
    &lt;/executions&gt;
    &lt;configuration&gt;
        &lt;packageName&gt;com.example&lt;/packageName&gt;
        &lt;arguments&gt;
            &lt;argument&gt;-Xequals&lt;/argument&gt;
            &lt;argument&gt;-XhashCode&lt;/argument&gt;
            &lt;argument&gt;-XtoString&lt;/argument&gt;
        &lt;/arguments&gt;
        &lt;extension&gt;true&lt;/extension&gt;
    &lt;/configuration&gt;
    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.jvnet.jaxb2_commons&lt;/groupId&gt;
            &lt;artifactId&gt;jaxb2-basics&lt;/artifactId&gt;
            &lt;version&gt;0.12.0&lt;/version&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;
&lt;/plugin&gt;
</code></pre>
<p>Running it again with <code>-X</code> gives me the following stacktrace which makes me think something must have changed in the <code>java.io.File.toURL</code> behavior.</p>
<pre><code>[ERROR] Failed to execute goal org.codehaus.mojo:jaxb2-maven-plugin:2.5.0:xjc (default-cli) on project example: &quot;file:\C:\Users\johndoe\.m2\repository\org\glassfish\jaxb\jaxb-xjc\2.3.2\jaxb-xjc-2.3.2.jar!\META-INF\versions\9&quot; is not a valid file name: {1}: Invalid file path -&gt; [Help 1]
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.codehaus.mojo:jaxb2-maven-plugin:2.5.0:xjc (default-cli) on project example: &quot;file:\C:\Users\johndoe\.m2\repository\org\glassfish\jaxb\jaxb-xjc\2.3.2\jaxb-xjc-2.3.2.jar!\META-INF\versions\9&quot; is not a valid file name: {1}
    at org.apache.maven.lifecycle.internal.MojoExecutor.doExecute (MojoExecutor.java:306)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:211)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:165)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:157)
    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:121)
    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)
    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)
    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:127)
    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:294)
    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)
    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)
    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:960)
    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:293)
    at org.apache.maven.cli.MavenCli.main (MavenCli.java:196)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)
    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke (Method.java:566)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)
    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)
    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)
    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke (Method.java:566)
    at org.apache.maven.wrapper.BootstrapMainStarter.start (BootstrapMainStarter.java:47)
    at org.apache.maven.wrapper.WrapperExecutor.execute (WrapperExecutor.java:156)
    at org.apache.maven.wrapper.MavenWrapperMain.main (MavenWrapperMain.java:72)
Caused by: org.apache.maven.plugin.MojoExecutionException: &quot;file:\C:\Users\johndoe\.m2\repository\org\glassfish\jaxb\jaxb-xjc\2.3.2\jaxb-xjc-2.3.2.jar!\META-INF\versions\9&quot; is not a valid file name: {1}
    at org.codehaus.mojo.jaxb2.javageneration.AbstractJavaGeneratorMojo.performExecution (AbstractJavaGeneratorMojo.java:555)
    at org.codehaus.mojo.jaxb2.AbstractJaxbMojo.execute (AbstractJaxbMojo.java:337)
    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)
    at org.apache.maven.lifecycle.internal.MojoExecutor.doExecute (MojoExecutor.java:301)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:211)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:165)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:157)
    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:121)
    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)
    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)
    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:127)
    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:294)
    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)
    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)
    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:960)
    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:293)
    at org.apache.maven.cli.MavenCli.main (MavenCli.java:196)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)
    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke (Method.java:566)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)
    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)
    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)
    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke (Method.java:566)
    at org.apache.maven.wrapper.BootstrapMainStarter.start (BootstrapMainStarter.java:47)
    at org.apache.maven.wrapper.WrapperExecutor.execute (WrapperExecutor.java:156)
    at org.apache.maven.wrapper.MavenWrapperMain.main (MavenWrapperMain.java:72)
Caused by: com.sun.tools.xjc.BadCommandLineException: &quot;file:\C:\Users\johndoe\.m2\repository\org\glassfish\jaxb\jaxb-xjc\2.3.2\jaxb-xjc-2.3.2.jar!\META-INF\versions\9&quot; is not a valid file name: {1}
    at com.sun.tools.xjc.Options.parseArgument (Options.java:515)
    at com.sun.tools.xjc.Driver$OptionsEx.parseArgument (Driver.java:502)
    at com.sun.tools.xjc.Options.parseArguments (Options.java:827)
    at com.sun.tools.xjc.Driver.run (Driver.java:231)
    at org.codehaus.mojo.jaxb2.javageneration.AbstractJavaGeneratorMojo.performExecution (AbstractJavaGeneratorMojo.java:475)
    at org.codehaus.mojo.jaxb2.AbstractJaxbMojo.execute (AbstractJaxbMojo.java:337)
    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)
    at org.apache.maven.lifecycle.internal.MojoExecutor.doExecute (MojoExecutor.java:301)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:211)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:165)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:157)
    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:121)
    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)
    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)
    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:127)
    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:294)
    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)
    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)
    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:960)
    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:293)
    at org.apache.maven.cli.MavenCli.main (MavenCli.java:196)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)
    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke (Method.java:566)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)
    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)
    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)
    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke (Method.java:566)
    at org.apache.maven.wrapper.BootstrapMainStarter.start (BootstrapMainStarter.java:47)
    at org.apache.maven.wrapper.WrapperExecutor.execute (WrapperExecutor.java:156)
    at org.apache.maven.wrapper.MavenWrapperMain.main (MavenWrapperMain.java:72)
Caused by: java.net.MalformedURLException: Invalid file path
    at java.io.File.toURL (File.java:695)
    at com.sun.tools.xjc.Options.parseArgument (Options.java:512)
    at com.sun.tools.xjc.Driver$OptionsEx.parseArgument (Driver.java:502)
    at com.sun.tools.xjc.Options.parseArguments (Options.java:827)
    at com.sun.tools.xjc.Driver.run (Driver.java:231)
    at org.codehaus.mojo.jaxb2.javageneration.AbstractJavaGeneratorMojo.performExecution (AbstractJavaGeneratorMojo.java:475)
    at org.codehaus.mojo.jaxb2.AbstractJaxbMojo.execute (AbstractJaxbMojo.java:337)
    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)
    at org.apache.maven.lifecycle.internal.MojoExecutor.doExecute (MojoExecutor.java:301)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:211)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:165)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:157)
    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:121)
    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)
    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)
    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:127)
    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:294)
    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)
    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)
    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:960)
    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:293)
    at org.apache.maven.cli.MavenCli.main (MavenCli.java:196)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)
    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke (Method.java:566)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)
    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)
    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)
    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke (Method.java:566)
    at org.apache.maven.wrapper.BootstrapMainStarter.start (BootstrapMainStarter.java:47)
    at org.apache.maven.wrapper.WrapperExecutor.execute (WrapperExecutor.java:156)
    at org.apache.maven.wrapper.MavenWrapperMain.main (MavenWrapperMain.java:72)
</code></pre>
<p>Minimal reproducable scenario:
<a href=""https://github.com/Crydust/so71956115"" rel=""noreferrer"">https://github.com/Crydust/so71956115</a></p>
","71979169","<p>Switching to a newer version of jaxb2-maven-plugin required a switch to jaxb3,
but replacing jaxb2-maven-plugin by maven-jaxb2-plugin worked.</p>
<pre><code>&lt;plugin&gt;
    &lt;groupId&gt;org.jvnet.jaxb2.maven2&lt;/groupId&gt;
    &lt;artifactId&gt;maven-jaxb2-plugin&lt;/artifactId&gt;
    &lt;version&gt;0.14.0&lt;/version&gt;
    &lt;executions&gt;
        &lt;execution&gt;
            &lt;goals&gt;
                &lt;goal&gt;generate&lt;/goal&gt;
            &lt;/goals&gt;
        &lt;/execution&gt;
    &lt;/executions&gt;
    &lt;configuration&gt;
        &lt;args&gt;
            &lt;argument&gt;-Xequals&lt;/argument&gt;
            &lt;argument&gt;-XhashCode&lt;/argument&gt;
            &lt;argument&gt;-XtoString&lt;/argument&gt;
        &lt;/args&gt;
        &lt;generatePackage&gt;com.example&lt;/generatePackage&gt;
        &lt;schemaDirectory&gt;${project.basedir}/src/main/xsd&lt;/schemaDirectory&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.jvnet.jaxb2_commons&lt;/groupId&gt;
                &lt;artifactId&gt;jaxb2-basics&lt;/artifactId&gt;
                &lt;version&gt;0.12.0&lt;/version&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/configuration&gt;
&lt;/plugin&gt;

</code></pre>
<p>Barry's suggestion (with some tweaks) works too.</p>
<pre><code>&lt;plugin&gt;
    &lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt;
    &lt;artifactId&gt;jaxb2-maven-plugin&lt;/artifactId&gt;
    &lt;version&gt;2.5.0&lt;/version&gt;
    &lt;executions&gt;
        &lt;execution&gt;
            &lt;goals&gt;
                &lt;goal&gt;xjc&lt;/goal&gt;
            &lt;/goals&gt;
        &lt;/execution&gt;
    &lt;/executions&gt;
    &lt;configuration&gt;
        &lt;packageName&gt;com.example.generated&lt;/packageName&gt;
        &lt;arguments&gt;
            &lt;argument&gt;-Xequals&lt;/argument&gt;
            &lt;argument&gt;-XhashCode&lt;/argument&gt;
            &lt;argument&gt;-XtoString&lt;/argument&gt;
        &lt;/arguments&gt;
        &lt;extension&gt;true&lt;/extension&gt;
    &lt;/configuration&gt;
    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.jvnet.jaxb2_commons&lt;/groupId&gt;
            &lt;artifactId&gt;jaxb2-basics&lt;/artifactId&gt;
            &lt;version&gt;0.12.0&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.glassfish.jaxb&lt;/groupId&gt;
            &lt;artifactId&gt;jaxb-runtime&lt;/artifactId&gt;
            &lt;version&gt;2.3.6&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.glassfish.jaxb&lt;/groupId&gt;
            &lt;artifactId&gt;jaxb-xjc&lt;/artifactId&gt;
            &lt;version&gt;2.3.6&lt;/version&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;
&lt;/plugin&gt;
</code></pre>
"
"71434304","1","Does Java Evaluate a Variable Declared as Final only Once?","<p>I'm writing a Java program that requires thousands of <code>System.out.println()</code> statements that will be printed hundreds of millions (or billions) of times throughout the lifecycle of the program for debugging purposes:</p>
<pre><code>if (GVar.runInDebugMode) System.out.println(&quot;Print debug message&quot;);
</code></pre>
<p>In the real world, these statements can be deactivated in order to speed up a computational heavy calculation.</p>
<p>If I set:</p>
<pre><code>public final static boolean runInDebugMode = false;
</code></pre>
<p>Does the compiler re-evaluate <code>runInDebugMode</code> each time it comes across a statement like: <code>if (GVar.runInDebugMode)</code> or since it was declared as final it will be evaluated once at the beginning of the program and won't put additional strain on the CPU? In other words, would I be better off commenting out all debug statements entirely once I deploy the app or is setting <code>runInDebugMode</code>  to <code>false</code> sufficient?</p>
","71470775","<p>When you declare a variable like</p>
<pre class=""lang-java prettyprint-override""><code>public final static boolean runInDebugMode = false;
</code></pre>
<p>it’s a <a href=""https://docs.oracle.com/javase/specs/jls/se17/html/jls-4.html#jls-4.12.4"" rel=""nofollow noreferrer"" title=""4.12.4. final Variables""><em>compile-time constant</em></a>.</p>
<blockquote>
<p>A <em>constant variable</em> is a <code>final</code> variable of primitive type or type <code>String</code> that is initialized with a constant expression (<a href=""https://docs.oracle.com/javase/specs/jls/se17/html/jls-15.html#jls-15.29"" rel=""nofollow noreferrer"" title=""15.29. Constant Expressions"">§15.29</a>).</p>
</blockquote>
<p><a href=""https://docs.oracle.com/javase/specs/jls/se17/html/jls-13.html#jls-13.1-110-C"" rel=""nofollow noreferrer"" title=""13.1. The Form of a Binary"">which means that</a></p>
<blockquote>
<p>A reference to a field that is a constant variable (<a href=""https://docs.oracle.com/javase/specs/jls/se17/html/jls-4.html#jls-4.12.4"" rel=""nofollow noreferrer"" title=""4.12.4. final Variables"">§4.12.4</a>) must be resolved at compile time to the value <code>V</code> denoted by the constant variable's initializer.</p>
<p>If such a field is <code>static</code>, then no reference to the field should be present in the code in a binary file, including the class or interface which declared the field.</p>
</blockquote>
<p>In other words, when you write <code>if(runInDebugMode)</code> anywhere and <code>runInDebugMode</code> is <code>false</code> at compile time, the behavior is as if you’ve written <code>if(false)</code>, as the value must be resolved at compile time and no reference to the field appears in the compiled class file.</p>
<p>Your use case has been discussed specifically in <a href=""https://docs.oracle.com/javase/specs/jls/se17/html/jls-14.html#jls-14.22-300-ZA"" rel=""nofollow noreferrer"" title=""14.22. Unreachable Statements"">§14.22</a></p>
<blockquote>
<p>However, in order to allow the <code>if</code> statement to be used conveniently for &quot;conditional compilation&quot; purposes, the actual rules differ.</p>
<p>As an example, the following statement results in a compile-time error:</p>
<pre><code>while (false) { x=3; }
</code></pre>
<p>because the statement <code>x=3;</code> is not reachable; but the superficially similar case:</p>
<pre><code>if (false) { x=3; }
</code></pre>
<p>does not result in a compile-time error. An optimizing compiler may realize that the statement <code>x=3;</code> will never be executed and may choose to omit the code for that statement from the generated <code>class</code> file, but the statement <code>x=3;</code> is not regarded as &quot;unreachable&quot; in the technical sense specified here.</p>
<p>The rationale for this differing treatment is to allow programmers to define &quot;flag&quot; variables such as:</p>
<pre><code>static final boolean DEBUG = false;
</code></pre>
<p>and then write code such as:</p>
<pre><code>if (DEBUG) { x=3; }
</code></pre>
<p>The idea is that it should be possible to change the value of <code>DEBUG</code> from <code>false</code> to <code>true</code> or from <code>true</code> to <code>false</code> and then compile the code correctly with no other changes to the program text.</p>
<p>Conditional compilation comes with a caveat. If a set of classes that use a &quot;flag&quot; variable - or more precisely, any <code>static</code> constant variable (<a href=""https://docs.oracle.com/javase/specs/jls/se17/html/jls-4.html#jls-4.12.4"" rel=""nofollow noreferrer"" title=""4.12.4. final Variables"">§4.12.4</a>) - are compiled and conditional code is omitted, it does not suffice later to distribute just a new version of the class or interface that contains the definition of the flag.</p>
</blockquote>
<p>So, this statement makes clear that this form of conditional compilation matches the intent of the language designers and that compilers are entitled to omit the code in question (all relevant compilers do). In principle, a compiler is not required to omit the code, but since it <em>must not</em> generate a reference to the field <code>GVar.runInDebugMode</code> in the compiled code, the code can’t contain a real conditional. If the code is not omitted, it must be skipped in a de-facto unconditional way. Either, by a <code>goto</code> instruction or, when compiling in the most naïve way imaginable, by literally testing <code>false</code>, <code>iconst_0; ifeq …</code>. Both approaches would be on the nanosecond scale in interpreted execution mode and no challenge to the JIT compiler/ optimizer at all.</p>
<hr />
<p>It’s worth mentioning that <code>static final</code> fields are trusted fields which are normally not even changeable by Reflection. This is used, e.g. by the Assertion feature, as under the hood, a class containing an <code>assert</code> statement will have a <code>static final boolean</code> field initialized at class initialization time (so it’s not a compile-time constant) and each <code>assert</code> statement will skip its check conditionally, depending on the state of the <code>static final</code> variable. It was as early as at Java 1.4 time, when it was concluded that the necessary dead code elimination is commonplace in JVMs, to rely on it in this way.</p>
<p>So even if you turn your debug flag from compile-time constant to an initialization-time constant, the impact on the performance would be hardly noticeable. But the way you’re using it now, the code is removed at compile-time already and doesn’t rely on the JVM anyway.</p>
"
"71095913","1","What is the difference between jaxb-impl and jaxb-runtime?","<p>Clearly the com.sun.xml.bind:jaxb-impl artifact is labelled &quot;<strong>Old</strong> JAXB Runtime module&quot; in the maven repository (see link below), and yet both of these artifacts are still getting new releases:</p>
<p><a href=""https://mvnrepository.com/artifact/org.glassfish.jaxb/jaxb-runtime"" rel=""noreferrer"">https://mvnrepository.com/artifact/org.glassfish.jaxb/jaxb-runtime</a>
<a href=""https://mvnrepository.com/artifact/com.sun.xml.bind/jaxb-impl"" rel=""noreferrer"">https://mvnrepository.com/artifact/com.sun.xml.bind/jaxb-impl</a></p>
<p>This answer <a href=""https://stackoverflow.com/questions/26413431/which-artifacts-should-i-use-for-jaxb-ri-in-my-maven-project/26413432#26413432"">Which artifacts should I use for JAXB RI in my Maven project?</a>
does not clarify the difference.</p>
<p>The accepted answer to both the above question and this one <a href=""https://stackoverflow.com/questions/43574426/how-to-resolve-java-lang-noclassdeffounderror-javax-xml-bind-jaxbexception"">How to resolve java.lang.NoClassDefFoundError: javax/xml/bind/JAXBException</a> conclude that for Java 9+ you should use:  org.glassfish.jaxb:jaxb-runtime</p>
<p>But I have code using com.sun.xml.bind:jaxb-impl and it appears to be working fine.  So what do I lose or gain by moving to jaxb-runtime?</p>
<p>Even the latest (3.0.2 at the time I write this) version is available for the &quot;OLD&quot; jaxb-impl module.  If Oracle isn't doing this anymore, who makes the com.sun.xml.bind:jaxb-impl artifact? What is it for? Why doesn't it share the Maven group coordinates with jaxb-runtime?</p>
<p>Is there any central location that clearly documents what the current state of affairs is with JAXB?</p>
<p>There is just so much confusion with JAXB now.</p>
<p>P.S. I need to remain compatible with Java 8 for the time being - so I can't go to 3.x yet, and 2.4.x appears to be an abandoned attempt at fixing the modularity that they foolishly broke when it was split out of the JDK.</p>
","72151763","<p>The only difference between <code>jaxb-impl</code> and <code>jaxb-runtime</code> is packaging: <code>jaxb-impl</code> bundles istack/txw2 inside the jar, whereas <code>jaxb-runtime</code> provides them via separate dependencies.</p>
<h2>Version Compatibility and the JakartaEE Migration</h2>
<p>I've been trying to make sense of this for the last day, and it's incredibly confusing. Particularly when you're trying to avoid the <code>java.xml.bind</code> to <code>jakarta.xml.bind</code> migration. There's out of date information everywhere and some broken releases in the <code>jaxb-impl</code> 2.3.x release line.</p>
<p>Best I can tell, GlassFish was providing the JAXB reference implementation. It's since moved to EE4J, but releases continue from that project against both sets of coordinates. Appears that <code>com.sun.xml.bind:jaxb-ri</code> is where the latest full bundles are released:</p>
<p><a href=""https://github.com/eclipse-ee4j/jaxb-ri/"" rel=""noreferrer"">https://github.com/eclipse-ee4j/jaxb-ri/</a></p>
<p>Having figured out that piece of history, the real mess is that none of the artifacts reflect the <code>javax.xml.bind</code> to <code>jakarta.xml.bind</code> move in their artifact coordinates, only in the versions. This means if you're in ecosystem where you need both to exist, you're going to have a bad time.</p>
<p>For instance, the 2.3.3 release changed from depending on <code>javax.xml.bind:jaxb-api</code> to <code>jakarta.xml.bind:jakarta.xml.bind-api</code> because at 2.x, the <code>jakarta</code> artifacts provide the <code>javax.xml.bind</code> packages. At version 3.0.0 it provides <code>jakarta.xml.bind</code>.</p>
<p>The implementations are the same at 3.0.0 which means while the earlier versions could happily exist at runtime, you have no way of resolving them both in build tools and conflict resolution is going to break legacy uses of <code>javax.xml.bind</code> APIs.</p>
<h2>Allow javax.xml.bind and jakarta.xml.bind to coexist</h2>
<p>For projects that need both APIs to coexist without migrating the legacy code:</p>
<ul>
<li>For <code>javax.xml.bind</code> use <code>com.sun.xml.bind:jaxb-impl:2.3.6</code>. Ignore the 3.0.0 and later releases. Add an explicit dependency on <code>javax.xml.bind:jaxb-api:2.3.1</code> so that you have a package providing the <code>javax.xml.bind</code> API</li>
<li>For <code>jakarta.xml.bind</code> use the latest <code>org.glassfish.jaxb:jaxb-runtime</code>. Ignore the releases earlier than 3.0.0</li>
</ul>
<h2>Runtime compatibility with jakarta.xml.bind</h2>
<p>Use the <a href=""https://github.com/apache/tomcat-jakartaee-migration"" rel=""noreferrer"">tomcat-jakartaee-migration</a> tool to rewrite classes for deployment.</p>
<p>For Gradle projects, you can use the <a href=""https://github.com/nebula-plugins/gradle-jakartaee-migration-plugin/"" rel=""noreferrer"">gradle-jakartaee-migration-plugin</a>, and get the benefit of capabilities and transforms at development time too.</p>
<h2>Migrate to jakarta.xml.bind</h2>
<p>You can use either of the coordinates for the runtime based on your preferences for packaging:</p>
<ul>
<li><code>com.sun.xml.bind:jaxb-impl:4.0.0</code></li>
<li><code>org.glassfish.jaxb:jaxb-runtime:4.0.0</code></li>
</ul>
<p>Both depend on <code>jakarta.xml.bind:jakarta.xml.bind-api</code> with the <code>jakarta.xml.bind</code> package namespace.</p>
"
"72335789","1","Can not extract resource from com.android.aaptcompiler","<p>Can not extract resource from com.android.aaptcompiler.ParsedResource@636e1e76.</p>
<pre><code>Execution failed for task ':app:mergeDebugResources'.
&gt; A failure occurred while executing com.android.build.gradle.internal.res.ResourceCompilerRunnable
   &gt; Resource compilation failed (Failed to compile values resource file E:\My Client\Henkako\HenkakoPlus\app\build\intermediates\incremental\debug\mergeDebugResources\merged.dir\values\values.xml. Cause: java.lang.IllegalStateException: Can not extract resource from com.android.aaptcompiler.ParsedResource@636e1e76.). Check logs for more details.

* Exception is:
org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':app:mergeDebugResources'.
    at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.lambda$executeIfValid$1(ExecuteActionsTaskExecuter.java:145)
    at org.gradle.internal.Try$Failure.ifSuccessfulOrElse(Try.java:282)
    at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:143)
    at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:131)
    at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:77)
    at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)
    at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)
    at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)
    at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)
    at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)
    at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)
    at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)
    at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)
    at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)
    at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)
    at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)
    at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)
    at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)
    at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)
    at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)
    at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)
    at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)
    at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:74)
    at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:402)
    at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:389)
    at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:382)
    at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:368)
    at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.lambda$run$0(DefaultPlanExecutor.java:127)
    at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:191)
    at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:182)
    at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:124)
    at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
    at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
    at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:61)
Caused by: org.gradle.workers.internal.DefaultWorkerExecutor$WorkExecutionException: A failure occurred while executing com.android.build.gradle.internal.res.ResourceCompilerRunnable
    at org.gradle.workers.internal.DefaultWorkerExecutor$WorkItemExecution.waitForCompletion(DefaultWorkerExecutor.java:342)
    at org.gradle.internal.work.DefaultAsyncWorkTracker.waitForItemsAndGatherFailures(DefaultAsyncWorkTracker.java:142)
    at org.gradle.internal.work.DefaultAsyncWorkTracker.waitForItemsAndGatherFailures(DefaultAsyncWorkTracker.java:94)
    at org.gradle.internal.work.DefaultAsyncWorkTracker.waitForAll(DefaultAsyncWorkTracker.java:80)
    at org.gradle.internal.work.DefaultAsyncWorkTracker.waitForCompletion(DefaultAsyncWorkTracker.java:68)
    at org.gradle.api.internal.tasks.execution.TaskExecution$2.run(TaskExecution.java:247)
    at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)
    at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)
    at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)
    at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)
    at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)
    at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)
    at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)
    at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)
    at org.gradle.api.internal.tasks.execution.TaskExecution.executeAction(TaskExecution.java:224)
    at org.gradle.api.internal.tasks.execution.TaskExecution.executeActions(TaskExecution.java:207)
    at org.gradle.api.internal.tasks.execution.TaskExecution.executeWithPreviousOutputFiles(TaskExecution.java:190)
    at org.gradle.api.internal.tasks.execution.TaskExecution.execute(TaskExecution.java:168)
    at org.gradle.internal.execution.steps.ExecuteStep.executeInternal(ExecuteStep.java:89)
    at org.gradle.internal.execution.steps.ExecuteStep.access$000(ExecuteStep.java:40)
    at org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:53)
    at org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:50)
    at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)
    at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)
    at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)
    at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)
    at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)
    at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)
    at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)
    at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)
    at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:50)
    at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:40)
    at org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:68)
    at org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:38)
    at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:48)
    at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:36)
    at org.gradle.internal.execution.steps.CancelExecutionStep.execute(CancelExecutionStep.java:41)
    at org.gradle.internal.execution.steps.TimeoutStep.executeWithoutTimeout(TimeoutStep.java:74)
    at org.gradle.internal.execution.steps.TimeoutStep.execute(TimeoutStep.java:55)
    at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:51)
    at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:29)
    at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:61)
    at org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:42)
    at org.gradle.internal.execution.steps.BroadcastChangingOutputsStep.execute(BroadcastChangingOutputsStep.java:60)
    at org.gradle.internal.execution.steps.BroadcastChangingOutputsStep.execute(BroadcastChangingOutputsStep.java:27)
    at org.gradle.internal.execution.steps.BuildCacheStep.executeWithoutCache(BuildCacheStep.java:188)
    at org.gradle.internal.execution.steps.BuildCacheStep.lambda$execute$1(BuildCacheStep.java:75)
    at org.gradle.internal.Either$Right.fold(Either.java:175)
    at org.gradle.internal.execution.caching.CachingState.fold(CachingState.java:59)
    at org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:73)
    at org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:48)
    at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:38)
    at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:27)
    at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:36)
    at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:22)
    at org.gradle.internal.execution.steps.SkipUpToDateStep.executeBecause(SkipUpToDateStep.java:109)
    at org.gradle.internal.execution.steps.SkipUpToDateStep.lambda$execute$2(SkipUpToDateStep.java:56)
    at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:56)
    at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:38)
    at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:73)
    at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:44)
    at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:37)
    at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:27)
    at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:89)
    at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:50)
    at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:114)
    at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:57)
    at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:76)
    at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:50)
    at org.gradle.internal.execution.steps.SkipEmptyWorkStep.lambda$execute$2(SkipEmptyWorkStep.java:93)
    at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:93)
    at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:34)
    at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsStartedStep.execute(MarkSnapshottingInputsStartedStep.java:38)
    at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:43)
    at org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:31)
    at org.gradle.internal.execution.steps.AssignWorkspaceStep.lambda$execute$0(AssignWorkspaceStep.java:40)
    at org.gradle.api.internal.tasks.execution.TaskExecution$3.withWorkspace(TaskExecution.java:284)
    at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:40)
    at org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:30)
    at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:37)
    at org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:27)
    at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:44)
    at org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:33)
    at org.gradle.internal.execution.impl.DefaultExecutionEngine$1.execute(DefaultExecutionEngine.java:76)
    at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:142)
    at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:131)
    at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:77)
    at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)
    at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)
    at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)
    at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)
    at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)
    at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)
    at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)
    at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)
    at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)
    at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)
    at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)
    at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)
    at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)
    at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)
    at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)
    at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)
    at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)
    at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:74)
    at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:402)
    at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:389)
    at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:382)
    at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:368)
    at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.lambda$run$0(DefaultPlanExecutor.java:127)
    at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:191)
    at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:182)
    at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:124)
    at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
    at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
    at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:61)
Caused by: com.android.aaptcompiler.ResourceCompilationException: Resource compilation failed (Failed to compile values resource file E:\My Client\Henkako\HenkakoPlus\app\build\intermediates\incremental\debug\mergeDebugResources\merged.dir\values\values.xml. Cause: java.lang.IllegalStateException: Can not extract resource from com.android.aaptcompiler.ParsedResource@636e1e76.). Check logs for more details.
    at com.android.aaptcompiler.ResourceCompiler.compileResource(ResourceCompiler.kt:129)
    at com.android.build.gradle.internal.res.ResourceCompilerRunnable$Companion.compileSingleResource(ResourceCompilerRunnable.kt:34)
    at com.android.build.gradle.internal.res.ResourceCompilerRunnable.run(ResourceCompilerRunnable.kt:15)
    at com.android.build.gradle.internal.profile.ProfileAwareWorkAction.execute(ProfileAwareWorkAction.kt:74)
    at org.gradle.workers.internal.DefaultWorkerServer.execute(DefaultWorkerServer.java:63)
    at org.gradle.workers.internal.NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)
    at org.gradle.workers.internal.NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)
    at org.gradle.internal.classloader.ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:97)
    at org.gradle.workers.internal.NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)
    at org.gradle.workers.internal.AbstractWorker$1.call(AbstractWorker.java:44)
    at org.gradle.workers.internal.AbstractWorker$1.call(AbstractWorker.java:41)
    at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)
    at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)
    at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)
    at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)
    at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)
    at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)
    at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)
    at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)
    at org.gradle.workers.internal.AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)
    at org.gradle.workers.internal.NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)
    at org.gradle.workers.internal.DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:206)
    at org.gradle.internal.work.DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:214)
    at org.gradle.internal.work.DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:164)
    at org.gradle.internal.work.DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:131)
    ... 3 more
Caused by: com.android.aaptcompiler.ResourceCompilationException: Failed to compile values resource file E:\My Client\Henkako\HenkakoPlus\app\build\intermediates\incremental\debug\mergeDebugResources\merged.dir\values\values.xml
    at com.android.aaptcompiler.ResourceCompiler.compileTable(ResourceCompiler.kt:192)
    at com.android.aaptcompiler.ResourceCompiler.access$compileTable(ResourceCompiler.kt:1)
    at com.android.aaptcompiler.ResourceCompiler$getCompileMethod$1.invoke(ResourceCompiler.kt:138)
    at com.android.aaptcompiler.ResourceCompiler$getCompileMethod$1.invoke(ResourceCompiler.kt:138)
    at com.android.aaptcompiler.ResourceCompiler.compileResource(ResourceCompiler.kt:123)
    ... 27 more
Caused by: java.lang.IllegalStateException: Can not extract resource from com.android.aaptcompiler.ParsedResource@636e1e76.
    at com.android.aaptcompiler.TableExtractor.extractResourceValues(TableExtractor.kt:270)
    at com.android.aaptcompiler.TableExtractor.extract(TableExtractor.kt:181)
    at com.android.aaptcompiler.ResourceCompiler.compileTable(ResourceCompiler.kt:188)
    ... 31 more
</code></pre>
","72355635","<p>Find and exchange all <code>'</code> symbols in your <code>strings.xml</code> or somewhere else in your code with <code>\'</code></p>
"
"71363302","1","Java sorting list of array vs sorting list of list","<p>I have a <strong>list of points</strong> where each <strong>point</strong> is a tiny <strong>list</strong> of size <code>2</code>. I want to sort the list of points in increasing order of <code>x</code> and if <code>x</code> values are equal, I break tie by sorting in decreasing order of <code>y</code>.</p>
<p>I wrote a custom comparator to sort the points like this:</p>
<pre><code>Collections.sort(points, (a, b) -&gt; {
    if (a.get(0) != b.get(0)) {
        return a.get(0) - b.get(0);
    } return b.get(1) - a.get(1); 
});
</code></pre>
<p>Here's the <strong>input</strong> before sorting:</p>
<pre><code>(2, 1000)
(9, -1000)
(3, 15)
(9, -15)
(5, 12)
(12, -12)
(5, 10)
(10001, -10)
(19, 8)
(10001, -8)
</code></pre>
<p>Here's the <strong>result</strong> produced after sorting with the above comparator:</p>
<pre><code>(2, 1000)
(3, 15)
(5, 12)
(5, 10)
(9, -15)
(9, -1000)
(12, -12)
(19, 8)
(10001, -10)
(10001, -8)
</code></pre>
<p><strong>Observations:</strong></p>
<ol>
<li>The input is sorted in ascending order on <code>x</code>.</li>
<li><code>(5, 12)</code> was correctly put before <code>(5, 10)</code>.</li>
<li><code>(9, -15)</code> was correctly put before <code>(9, -1000)</code>.</li>
<li>However, <code>(10001, -10)</code> was put before <code>(10001, -8)</code>. Even though <code>-8</code> is larger than <code>-10</code>.</li>
</ol>
<p>Feel like I am missing something trivial. I experimented with a few other ways of writing the comparator like using <code>Integer.compare(a, b)</code> or just <code>a.compareTo(t)</code>, but got the same result.</p>
<p>Finally, I changed the representation of point from <code>List&lt;Integer&gt;</code> to <code>int[]</code> and wrote the same comparator again. See results below:</p>
<pre><code>Collections.sort(points, (a, b) -&gt; {
    if (a[0] != b[0])
        return a[0] - b[0];
    return b[1] - a[1];
});
</code></pre>
<p><strong>Input</strong> before sorting:</p>
<pre><code>(2, 1000)
(9, -1000)
(3, 15)
(9, -150
(5, 12)
(12, -12)
(5, 10)
(10001, -10)
(19, 8)
(10001, -8)
</code></pre>
<p><strong>After sorting:</strong></p>
<pre><code>(2, 1000)
(3, 15)
(5, 12)
(5, 10)
(9, -15)
(9, -1000)
(12, -12)
(19, 8)
(10001, -8)
(10001, -10)
</code></pre>
<p>So list of arrays is getting sorted correctly as <code>(10001, -8)</code> was correctly put before <code>(10001, -10)</code>.</p>
<p>I am not able to understand why changing the representation of point resolved the issue and hence this question. I can give more details on how I am creating the List of points if required.</p>
","71363726","<blockquote>
<p>I am missing something trivial</p>
</blockquote>
<p>Method <code>equals()</code> should be used for object comparison. Double equals <code>==</code> checks whether two references point to the <strong>same object</strong> in memory.</p>
<p>If you change the condition inside the comparator to <code>!a.get(0).equals(b.get(0))</code> it will work correctly.</p>
<blockquote>
<p>However, <strong>(10001, -10)</strong> was put before <strong>(10001, -8)</strong>. Even though <strong>-8</strong> is larger than <strong>-10</strong>.</p>
</blockquote>
<p>The reason for such behavior is that <strong>JVM</strong> caches all the instances of <code>Integer</code> (as well as <code>Byte</code>, <code>Short</code> and <code>Long</code>) in the range <strong><code>[-128; 127]</code></strong>. I.e. these instances are reused, the result of autoboxing of let's say <code>int</code> with a value of <code>12</code> will be <strong>always</strong> the same object.</p>
<p>Because small values in your example like <code>3</code>, <code>5</code>, <code>12</code> will be represented by a <strong>single object</strong>, they were compared with <code>==</code> without issues. But the result of comparison with <code>==</code> for two <code>Integer</code> instances with a value of <code>10001</code> will be <strong><code>false</code></strong> because in this case there will be <strong>two distinct objects</strong> in the <em>heap</em>.</p>
<p>The approach of caching frequently used objects is called the <a href=""https://en.wikipedia.org/wiki/Flyweight_pattern"" rel=""nofollow noreferrer""><strong>Flyweight design pattern</strong></a>. It's very rarely used in <strong>Java</strong> because this pattern can bring benefits when <em>tons of identical objects</em> are being <em>created and destroyed</em>. Only in such a case caching these objects will pay off with a significant performance improvement. As far as I know, it's used in game development.</p>
<h3>Use the power of objects</h3>
<p><code>Point</code> must be an object, not a list, as <a href=""https://stackoverflow.com/a/71363938/17949945"">Code-Apprentice</a> has pointed out in his answer. Use the <strong>power of objects</strong> and don't <a href=""https://stackoverflow.com/questions/70993311/how-i-can-access-and-add-value-from-the-list-which-is-nested-in-the-hashmap-and/71113033"">overuse collections</a>. It brings several <em>advantages</em>:</p>
<ul>
<li>class provides you a <strong>structure</strong>, it's easier to organize your code when you are thinking in terms of objects;</li>
<li>behavior declared inside a class is <strong>reusable</strong> and easier to test;</li>
<li>with classes, you can use the power of <a href=""https://docs.oracle.com/javase/tutorial/java/IandI/polymorphism.html"" rel=""nofollow noreferrer""><strong>polymorphism</strong></a>.</li>
</ul>
<p><strong>Caution:</strong> objects could be also misused, one of the possible indicators of that is when a class doesn't declare any behavior apart from getters and its data is being processed somehow in the code outside this class.</p>
<p>Although the notion of point (<em>as a geometrical object</em>) isn't complicated, there are some useful options with regard to methods. For example, you could make instances of the <code>Point</code> class to be able to check to whether they are aligned <em>horizontally</em> or <em>vertically</em>, or whether two points are within a particular <em>radius</em>. And <code>Point</code> class can implement <code>Comparable</code> interface so that points will be able to compare themselves without a <code>Comparator</code>.</p>
<h3>Sorting</h3>
<p>With <strong>Java 8</strong> method <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/List.html#sort(java.util.Comparator)"" rel=""nofollow noreferrer""><strong><code>sort()</code></strong></a>
was added to the <code>List</code> interface. It expects an instance of <code>Comparator</code>, and if element of the list implement comparable, and you want them to be sorted according to the natural order <code>null</code> can be passed as an argument.</p>
<blockquote>
<p>If the specified comparator is null then all elements in this list must implement the Comparable interface and the elements' natural ordering should be used.</p>
</blockquote>
<p>So instead of using utility class <code>Collections</code> you can invoke method <code>sort()</code> directly on a list of points (assuming that <code>Point</code> implements <code>Comparable&lt;Point&gt;</code>):</p>
<pre><code>points.sort(null); // the same as   points.sort(Comparator.naturalOrder()); 
</code></pre>
<p>Also, you can create multiple custom comparators by utilizing <code>default</code> and <code>static</code> methods from the <code>Comparator</code> interface like <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/Comparator.html#comparingInt(java.util.function.ToIntFunction)"" rel=""nofollow noreferrer""><strong>comparingInt()</strong></a> and <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/Comparator.html#thenComparing(java.util.Comparator)"" rel=""nofollow noreferrer""><strong>thenComparing()</strong></a>.</p>
<p>(<em>for more information on how to build comparators with <strong>Java 8</strong> methods take a look at <a href=""https://www.baeldung.com/java-8-comparator-comparing"" rel=""nofollow noreferrer"">this tutorial</a></em>)</p>
"
"71463016","1","Find occurrence count of the longest common Prefix/Suffix in a List of Strings?","<p>Given a list of Strings:</p>
<pre><code>ArrayList&lt;String&gt; strList = new ArrayList&lt;String&gt;();
strList.add(&quot;Mary had a little lamb named Willy&quot;);
strList.add(&quot;Mary had a little ham&quot;);
strList.add(&quot;Old McDonald had a farm named Willy&quot;);
strList.add(&quot;Willy had a little dog named ham&quot;);
strList.add(&quot;(abc)&quot;);
strList.add(&quot;(xyz)&quot;);
strList.add(&quot;Visit Target Store&quot;);
strList.add(&quot;Visit Walmart Store&quot;);
</code></pre>
<p>This should produce the output in the form of a <code>HashMap&lt;String, Integer&gt;</code> <code>prefixMap</code> and <code>suffixMap</code>:</p>
<p><strong>PREFIX</strong>:</p>
<pre><code>Mary had a -&gt; 2
Mary had a little -&gt; 2
( -&gt; 2
Visit -&gt; 2
</code></pre>
<p><strong>SUFFIX</strong>:</p>
<pre><code>named Willy -&gt; 2
ham -&gt; 2
) -&gt; 2
Store -&gt; 2
</code></pre>
<p>So far I'm able to generate a prefix that is present in all items in list using the following code:</p>
<pre><code>public static final int INDEX_NOT_FOUND = -1;

public static String getAllCommonPrefixesInList(final String... strs) {
    if (strs == null || strs.length == 0) {
        return EMPTY_STRING;
    }
    
    
    final int smallestIndexOfDiff = getIndexOfDifference(strs);
    if (smallestIndexOfDiff == INDEX_NOT_FOUND) {
        
        // All Strings are identical
        if (strs[0] == null) {
            return EMPTY_STRING;
        }
        return strs[0];
    } else if (smallestIndexOfDiff == 0) {
        
        
        // No common initial characters found, return empty String
        return EMPTY_STRING;
    } else {
        
        // Common initial character sequence found, return sequence
        return strs[0].substring(0, smallestIndexOfDiff);
    }
}






public static int getIndexOfDifference(final CharSequence... charSequence) {
    if (charSequence == null || charSequence.length &lt;= 1) {
        return INDEX_NOT_FOUND;
    }
    boolean isAnyStringNull = false;
    boolean areAllStringsNull = true;
    
    
    final int arrayLen = charSequence.length;
    int shortestStrLen = Integer.MAX_VALUE;
    int longestStrLen = 0;

    // Find the min and max string lengths - avoids having to check that we are not exceeding the length of the string each time through the bottom loop.
    for (int i = 0; i &lt; arrayLen; i++) {
        if (charSequence[i] == null) {
            isAnyStringNull = true;
            shortestStrLen = 0;
        } else {
            areAllStringsNull = false;
            shortestStrLen = Math.min(charSequence[i].length(), shortestStrLen);
            longestStrLen = Math.max(charSequence[i].length(), longestStrLen);
        }
    }

    // Deals with lists containing all nulls or all empty strings
    
    if (areAllStringsNull || longestStrLen == 0 &amp;&amp; !isAnyStringNull) {
        return INDEX_NOT_FOUND;
    }

    // Handle lists containing some nulls or some empty strings
    if (shortestStrLen == 0) {
        return 0;
    }

    // Find the position with the first difference across all strings
    int firstDiff = -1;
    for (int stringPos = 0; stringPos &lt; shortestStrLen; stringPos++) {
        final char comparisonChar = charSequence[0].charAt(stringPos);
        for (int arrayPos = 1; arrayPos &lt; arrayLen; arrayPos++) {
            if (charSequence[arrayPos].charAt(stringPos) != comparisonChar) {
                firstDiff = stringPos;
                break;
            }
        }
        if (firstDiff != -1) {
            break;
        }
    }

    if (firstDiff == -1 &amp;&amp; shortestStrLen != longestStrLen) {
        
        // We compared all of the characters up to the length of the
        // shortest string and didn't find a match, but the string lengths
        // vary, so return the length of the shortest string.
        return shortestStrLen;
    }
    return firstDiff;
}
</code></pre>
<p>However, my goal is to include any <em><strong>prefix</strong></em>/<em><strong>suffix</strong></em> with at least <strong><code>2+</code></strong> occurrences into the resulting map.</p>
<p>How can this be achieved with <code>Java</code>?</p>
","71507839","<p>In my understanding of this problem the most suitable data structure for solving it is an acyclic disjointed <strong>Graph</strong>.</p>
<p>In general case, a <strong>graph</strong> will be comprised of several unconnected <em><strong>clusters</strong></em>. Each <em>cluster</em> will have a <em>tree-like</em> structure, in the edge case it'll form a <em>linked list</em>.</p>
<p>Basically, the most simple <em>naive</em> approach on how to solve this problem is to create a bunch of <em>linked list</em> based on each line, and iterate over them. The drawbacks are: <em>duplication of nodes</em> (greater memory consumption), greater <em>time-complexity</em> (more operations required) and it's more <em>error-prone</em> because more manual actions are needed.</p>
<h3>The description of the Graph</h3>
<p>So I'll stick with the <strong>graph</strong> as the data structure for this problem and try to keep things as simple as possible.</p>
<p>Let's consider the following input:</p>
<pre><code>&quot;Mary had a little lamb named Willy&quot;
&quot;Mary had a little ham&quot;
&quot;A B C&quot;
</code></pre>
<p>The graphical representation of the graph will look like this;</p>
<p><a href=""https://i.stack.imgur.com/nWiy5.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/nWiy5.jpg"" alt=""enter image description here"" /></a></p>
<p>The two first lines will constitute a <em>cluster</em> formed from a <em>linked list</em> (the head part) and a <em>tree</em> (the tail part). The second cluster will be represented by a <em>linked list</em>, its vertices aren't connected with vertices formed from other strings.</p>
<p>It's not the only way the vertexes can be structured, the head could spawn an <em>N-tree</em> and a linked list could be observed somewhere in the middle.</p>
<p>The main takeaway is that in order to solve the problem, we need to track the chain of vertexes through all the branches until the <strong>vertexes overlap</strong>. In these parts of the <em>graph</em>, every prefix-strings and suffix-string that is common among two or more lines will be represented by a <strong>single vertex</strong> (<em>node</em>).</p>
<p>To maintain the number of strings that are mapped to a particular <em>vertex</em>, each vertex should have a variable (<code>int groupCount</code> <em>in the code below</em>), which is assigned with a default value of <code>1</code> when a <em>vertex</em> is being created and incremented each time a new string gets mapped to this vertex.</p>
<p>Each <em>vertex</em> contains a map that holds references to its <em>neighbours</em>. When a new <em>neighbour-vertex</em> is being added, either new <code>Vertex</code> in being created based on the given string or the <em>count</em> of an existing <em>vertex</em> gets incremented.</p>
<p>In order to conform to this task, <em>the graph</em> should maintain references to all <em>head-vertexes</em> and <em>tail-vertexes</em>. For simplicity, instead of maintaining two groups of references to adjacent nodes, and two separate count variables (<em>because suffix-count and prefix-count will differ</em>) in each vertex, in this solution <em>graph</em> is actually comprised of <strong>two graph</strong> (<em>suffix-graph</em> and <em>prefix-graph</em>). And for that reason, the implementing class in named <code>MultiGraph</code>.</p>
<p>In order to populate both <em>suffix-graph</em> and <em>prefix-graph</em> with <em>vertexes</em>, method <code>addCluster()</code> iterates over the string of the given line by the means of <code>Iterator</code> in normal or reversed order, depending on which <em>graph</em> is being populated.</p>
<h3>Depth first search</h3>
<p>The next step after the graphs are populated is to generate the maps of strings with the frequency of <code>2</code> and greater.</p>
<p>For that, the classical <a href=""https://en.wikipedia.org/wiki/Depth-first_search"" rel=""nofollow noreferrer""><strong>depth first search</strong></a> algorithm is being used.</p>
<p>In order to implement the DFS, a mutable container that will be used as a <strong>stack</strong> is required (<code>ArrayDeque</code> is being used for that purpose). The first element that is taken from the <em>map of heads/tails</em> will be placed on the top of the <em>stack</em> and an instance of <code>StringBuilder</code> holding the name of this element will be placed in the map.</p>
<p>Then, to restore a string with a particular <em>count</em>, <em>vertexes</em> will be popped from the top of the <em>stack</em> and their <em>neighbours</em> with count <code>&gt; 1</code> in turn will be placed on top of the stack. A copy of the <em>current prefix</em> with the delimiter and the neighbour's name appended will get mapped to the <em>neighbour-vertex</em>.</p>
<p>If a <em>count</em> changes, that indicates that the <em>current prefix</em> represents the longest common string between at least two lines. In this case, prefix and count are being added to the resulting map.</p>
<h3>Implementation</h3>
<p>The following implementation consists of two classes that are <em>narrow-focused</em> and <em>self-contained</em>. The <code>MultiGraph</code> class acts exclusively as data structure, maintaining two graphs. The pluming code, like splitting the lines of strings, is extracted into a separate class <code>GraphManager</code>.</p>
<p><strong>Graph</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class MultiGraph {
    private final Map&lt;String, Vertex&gt; heads = new HashMap&lt;&gt;();
    private final Map&lt;String, Vertex&gt; tails = new HashMap&lt;&gt;();

    public void addCluster(Deque&lt;String&gt; names) {
        addCluster(heads, names.iterator());
        addCluster(tails, names.descendingIterator());
    }

    private void addCluster(Map&lt;String, Vertex&gt; clusters, Iterator&lt;String&gt; names) {
        String rootName = names.next();
        if (clusters.containsKey(rootName)) {
            clusters.get(rootName).incrementGroupCount();
        } else {
            clusters.put(rootName, new Vertex(rootName));
        }

        Vertex current = clusters.get(rootName);
        while (names.hasNext()) {
            current = current.addNext(names.next());
        }
    }

    public Map&lt;String, Integer&gt; generatePrefixMap(String delimiter) {
        Map&lt;String, Integer&gt; countByPrefix = new HashMap&lt;&gt;();

        for (Vertex next: heads.values()) {
            if (next.getGroupCount() == 1) {
                continue;
            }
            performDFS(heads, countByPrefix, delimiter, next);
        }
        return countByPrefix;
    }

    public Map&lt;String, Integer&gt; generateSuffixMap(String delimiter) {
        Map&lt;String, Integer&gt; countBySuffix = new HashMap&lt;&gt;();

        for (Vertex next: tails.values()) {
            if (next.getGroupCount() == 1) {
                continue;
            }
            performDFS(tails, countBySuffix, delimiter, next);
        }
        return countBySuffix;
    }
    // implementation of the Depth First Search algorithm
    public void performDFS(Map&lt;String, Vertex&gt; clusters,
                           Map&lt;String, Integer&gt; countByPrefix,
                           String delimiter, Vertex next) {

        StringBuilder prefix = null;
        Vertex current = next;
        int count = next.getGroupCount();

        Deque&lt;Vertex&gt; stack = new ArrayDeque&lt;&gt;(); // create as stack
        Map&lt;Vertex, StringBuilder&gt; prefixByVert = new HashMap&lt;&gt;();
        stack.push(next); // place the first element on the stack
        prefixByVert.put(current, new StringBuilder(current.getName()));

        while (!stack.isEmpty()) {
            current = stack.pop();
            if (current.getGroupCount() &lt; count) { // the number of strings mapped to the current Vertex has been changed
                countByPrefix.put(prefix.toString(), count); // saving the result
                count = current.getGroupCount();
            }
            prefix = prefixByVert.get(current);

            for (Vertex neighbour: current.getNextVertByVal().values()) {
                if (next.getGroupCount() == 1) {
                    continue;
                }
                stack.push(neighbour);
                prefixByVert.put(neighbour, new StringBuilder(prefix)
                                    .append(delimiter)
                                    .append(neighbour.getName()));
            }
        }

        if (prefix != null &amp;&amp; count &gt; 1) {
            countByPrefix.putIfAbsent(prefix.toString(), count);
        }
    }

    private static class Vertex {
        private final String name;
        private int groupCount = 1;
        private final Map&lt;String, Vertex&gt; nextVertByVal = new HashMap&lt;&gt;();

        public Vertex(String name) {
            this.name = name;
        }

        public Vertex addNext(String value) {
            if (nextVertByVal.containsKey(value)) {
                nextVertByVal.get(value).incrementGroupCount();
            } else {
                nextVertByVal.put(value, new Vertex(value));
            }
            return nextVertByVal.get(value);
        }

        public void incrementGroupCount() {
            this.groupCount++;
        }

        public String getName() {
            return name;
        }

        public int getGroupCount() {
            return groupCount;
        }

        public Map&lt;String, Vertex&gt; getNextVertByVal() {
            return nextVertByVal;
        }
    }
}
</code></pre>
<p>The following class deals with the task of processing the input data: it splits the lines, takes care of discarding the empty string which might take place, and packs the input into a <code>Deque</code> to accommodate the iteration in both directions in a convenient way.</p>
<p>It also instantiates the <em>graph</em> and governs it's work. <code>GraphManager</code> takes care of providing the <em>delimiter</em> to the graph in order to restore the initial shape of strings while the resulting maps are being created. With that you can split the given lines on a white space, by empty string to process lines character by character or by punctuation marks without changing a single line in these two classes.</p>
<p><strong>GraphManager</strong></p>
<pre class=""lang-java prettyprint-override""><code>public class GraphManager {
    private MultiGraph graph = new MultiGraph();
    private String delimiter;

    private GraphManager(String delimiter) {
        this.delimiter = delimiter;
    }

    public static GraphManager getInstance(Iterable&lt;String&gt; lines, String delimiter) {
        GraphManager gm = new GraphManager(delimiter);
        gm.init(lines);
        return gm;
    }

    private void init(Iterable&lt;String&gt; lines) {
        for (String line: lines) {
            Deque&lt;String&gt; names = new ArrayDeque&lt;&gt;();
            for (String name: line.split(delimiter)) {
                if (!name.isEmpty()) {
                    names.add(name);
                }
            }
            addCluster(names);
        }
    }

    private void addCluster(Deque&lt;String&gt; names) {
        graph.addCluster(names);
    }

    public Map&lt;String, Integer&gt; getPrefixMap() {
        return graph.generatePrefixMap(delimiter);
    }

    public Map&lt;String, Integer&gt; getSuffixMap() {
        return graph.generateSuffixMap(delimiter);
    }
}
</code></pre>
<p><strong>main()</strong></p>
<pre><code>public static void main(String[] args) {
    List&lt;String&gt; lines = List.of(
            &quot;Mary had a little lamb named Willy&quot;, &quot;Mary had a little ham&quot;,
            &quot;Old McDonald had a farm named Willy&quot;, &quot;Willy had a little dog named ham&quot;,
            &quot;( abc )&quot;, &quot;( xyz )&quot;, &quot;Visit Target Store&quot;, &quot;Visit Walmart Store&quot;);

    GraphManager gm = GraphManager.getInstance(lines, &quot; &quot;);
    
    System.out.println(&quot;Prefixes:&quot;);
    for (Map.Entry&lt;String, Integer&gt; entry: gm.getPrefixMap().entrySet()) {
        System.out.println(entry.getValue() + &quot; &quot; + entry.getKey());
    }

    System.out.println(&quot;\nSuffixes:&quot;);
    for (Map.Entry&lt;String, Integer&gt; entry: gm.getSuffixMap().entrySet()) {
        System.out.println(entry.getValue() + &quot; &quot; + entry.getKey());
    }
}
</code></pre>
<p><strong>Output</strong></p>
<pre><code>Prefixes:
2 Mary had a little
2 Visit
2 (

Suffixes:
2 ham
2 )
2 Store
2 Willy named
</code></pre>
"
"72396628","1","Adding multiple products to productlist for queryProductDetailsAsync in android billing 5.0.0","<p>In the old android billing implementation you would build an sku list to query products:</p>
<pre><code>List&lt;String&gt; skuList = new ArrayList&lt;&gt;();
        skuList.add(SKU_POTION);
        skuList.add(SKU_SWORD);
        skuList.add(SKU_BOW);
        SkuDetailsParams.Builder params = SkuDetailsParams.newBuilder();
        params.setSkusList(skuList).setType(BillingClient.SkuType.INAPP);
</code></pre>
<p>The new billing implementation is more involved, and appears to limit you to adding just one product to a query list:</p>
<pre><code>ImmutableList&lt;QueryProductDetailsParams.Product&gt; productList = ImmutableList.from(QueryProductDetailsParams.Product.newBuilder()
                    .setProductId(SKU_POTION)
                    .setProductType(BillingClient.ProductType.INAPP)
                    .build());
    
            QueryProductDetailsParams params = QueryProductDetailsParams.newBuilder()
                    .setProductList(productList)
                    .build();
    
            billingClient.queryProductDetailsAsync(
            params,
            new ProductDetailsResponseListener() {
                public void onProductDetailsResponse(BillingResult billingResult, List&lt;ProductDetails&gt; productDetailsList) {
                    if (billingResult.getResponseCode() == BillingClient.BillingResponseCode.OK &amp;&amp; productDetailsList != null) {
                        for (ProductDetails skuDetails : productDetailsList) {                    
                            mProductDetailsMap.put(skuDetails.getProductId(), skuDetails);                           
                        }
                    }
                   
                }
            }
    );
</code></pre>
<p>It makes you build the productList for the productDetailsList for the mProductDetailsMap that's needed to start the purchase flow:</p>
<pre><code>puchasestring=SKU_POTION;
initiatePurchaseFlow(mProductDetailsMap.get(puchasestring));
</code></pre>
<p>How would I add multiple products to the productList that begins the implementation? I don't want to have to repeat the entire code segment for each item to add to the mProductDetailsMap, which is the Primitive Pete method I'm using for now.</p>
","72397831","<p>For multiple products:</p>
<pre><code>ImmutableList&lt;QueryProductDetailsParams.Product&gt; productList = ImmutableList.from(
QueryProductDetailsParams.Product.newBuilder()
                    .setProductId(SKU_POTION)
                    .setProductType(BillingClient.ProductType.INAPP)
                    .build(),
QueryProductDetailsParams.Product.newBuilder()
                    .setProductId(SKU_SWORD)
                    .setProductType(BillingClient.ProductType.INAPP)
                    .build(),
QueryProductDetailsParams.Product.newBuilder()
                    .setProductId(SKU_BOW)
                    .setProductType(BillingClient.ProductType.INAPP)
                    .build());
</code></pre>
"
"71473553","1","Action requested: Declare your Ad ID permission","<p>Today i have got this email:</p>
<blockquote>
<p>Last July, we announced Advertising policy changes to help bolster
security and privacy. We added new restrictions on identifiers used by
apps that target children. When users choose to delete their
advertising ID in order to opt out of personalization advertising,
developers will receive a string of zeros instead of the identifier if
they attempt to access the identifier. This behavior will extend to
phones, tablets, and Android TV starting April 1, 2022. We also
announced that you need to declare an AD_ID permission when you update
your app targeting API level to 31 (Android 12). Today, we are sharing
that we will give developers more time to ease the transition. We will
require this permission declaration when your apps are able to target
Android 13 instead of starting with Android 12.</p>
<p>Action Items If you use an advertising ID, you must declare the AD_ID
Permission when your app targets Android 13 or above. Apps that don’t
declare the permission will get a string of zeros. Note: You’ll be
able to target Android 13 later this year. If your app uses an SDK
that has declared the Ad ID permission, it will acquire the permission
declaration through manifest merge. If your app’s target audience
includes children, you must not transmit Android Advertising ID (AAID)
from children or users of unknown age.</p>
</blockquote>
<p>My app is not using the Advertising ID. Should i declare the <code>AD_ID</code> Permission in Manifest or not?</p>
","71474159","<p>If your app uses the Google Mobile Ads SDK(<strong>Admob</strong>) version <strong>20.4.0</strong> or higher, you can skip setting up the permission manually since the SDK automatically declares it</p>
<p>More informations here:</p>
<p><a href=""https://developers.google.com/admob/android/quick-start"" rel=""noreferrer"">https://developers.google.com/admob/android/quick-start</a></p>
"
"72227442","1","Unsupported class file major version 61","<p>I am trying to integrate <a href=""https://glowroot.org/"" rel=""noreferrer"">Glowroot</a> into my Java application. Unfortunately, I get the following error:</p>
<pre><code>2022-05-13 09:25:57.777 ERROR o.g.a.w.PointcutClassFileTransformer - Unsupported class file major version 61
java.lang.IllegalArgumentException: Unsupported class file major version 61
    at org.glowroot.agent.shaded.org.objectweb.asm.ClassReader.&lt;init&gt;(ClassReader.java:196)
</code></pre>
<p>Neither Glowroot nor my application seem to use gradle so I have no idea where this incompatibility is coming from.</p>
<p>Have you got any idea on how I could find the source of the incompatibility and then how I could fix it?</p>
<p>Thank you!</p>
<p>EDIT: I use Glowroot in the version 0.13.6 .</p>
<p>Second edit: Seems like the version of glowroot was the issue...</p>
","72229157","<p>(I incorrectly was zeroing in on the &quot;Unsupported class file major version 61&quot; message without looking at the stacktrace.)</p>
<p>The problem (as pointed out by @Mark Rotteveel) is that glowroot is failing while trying to do some code transformation using ASM.  Apparently the <code>ClassReader</code> in the version of ASM that is bundled in glowroot 0.13.6 doesn't understand version 61 (Java 17) class files.</p>
<p>Q: How to solve this?</p>
<p>A: Use glowroot 0.14.0-beta.2 or later; see <a href=""https://github.com/glowroot/glowroot/issues/906"" rel=""nofollow noreferrer"">https://github.com/glowroot/glowroot/issues/906</a>.  Alternative, build your application and its dependencies (as required) for an earlier (target) version of Java, and (maybe<sup>1</sup>) run on an earlier version of Java.</p>
<hr />
<p><sup>1 - It depends on whether the code transformations involve the ASM <code>ClassReader</code> reading Java SE classes.</sup></p>
"
"71548717","1","Differences in floating point between JDK 8 and JDK 13","<p>It seems that JDK 8 and JDK 13 have different floating points.<br />
I get on JDK 8, using Math:</p>
<pre><code>cos(2.3) = -0.666276021279824
</code></pre>
<p>And on JDK 13:</p>
<pre><code>cos(2.3) = -0.6662760212798241
</code></pre>
<p>How does this happen? Difference shows on 11th Gen Intel and on AMD Ryzen using Windows 10.</p>
<p><strong>Edit 20.03.2022:</strong><br />
Using Long.toHexString(Double.doubleToRawLongBits()) I get different bit patterns:<br />
I get on JDK 8:</p>
<pre><code>cos(2.3) = 0xbfe5522217302fe0
</code></pre>
<p>And I get on JDK 13:</p>
<pre><code>cos(2.3) = 0xbfe5522217302fe1
</code></pre>
","71549434","<p>This seems to be caused by a JVM intrinsic function for <code>Math.cos</code>, which is described in the related issue <a href=""https://bugs.openjdk.java.net/browse/JDK-8242461"" rel=""noreferrer"">JDK-8242461</a>. The behavior experienced there is not considered an issue:</p>
<blockquote>
<p>The returned results reported in this bug are indeed adjacent floating-point values [<em>this is the case here as well</em>]</p>
<p>[...]</p>
<p>Therefore, while it is possible one or the other of the returned values is outside of the accuracy bounds, just have different return values for Math.cos is not in and of itself evidence of a problem.</p>
<p>For reproducible results, use the StrictMath.cos instead.</p>
</blockquote>
<p>And indeed, disabling the intrinsics using <code>-XX:+UnlockDiagnosticVMOptions -XX:DisableIntrinsic=_dcos</code> (as proposed in the linked issue), causes <code>Math.cos</code> to have the same (expected) result as <code>StrictMath.cos</code>.</p>
<p>So it appears the behavior you are seeing here is most likely compliant with the <code>Math</code> documentation as well.</p>
"
"72478972","1","Stange behaviour since upgrade from 2.6.2 to 2.7.0","<p>I faced to a strange behaviour while upgrading my application from SpringBoot 2.6.2 to 2.7.0.
I've a starter with autoconfiguration which is responsible of initializing JPA auditing :</p>
<pre><code>@Configuration
@ConditionalOnBean(DataSource.class)
@ConditionalOnClass({DataSource.class, AuditorAware.class, SecurityContextHolder.class})
@AutoConfigureAfter({HibernateJpaAutoConfiguration.class, SecurityAutoConfiguration.class, ClockSpringConfiguration.class})
@EnableJpaAuditing(auditorAwareRef = &quot;auditorProvider&quot;, dateTimeProviderRef = &quot;dateTimeProvider&quot;)
public class JpaAuditingSpringConfiguration {
    @Bean
    public AuditorAware&lt;String&gt; auditorProvider() {
        return () -&gt;
                Optional.ofNullable(SecurityContextHolder.getContext())
                        .map(SecurityContext::getAuthentication)
                        .map(Authentication::getName);
    }

    @Bean
    public DateTimeProvider dateTimeProvider(Clock clock) {
        return () -&gt;
                Optional.of(clock)
                        .map(Clock::instant);
    }
}
</code></pre>
<p>This starter is fine in 2.6.2. But in 2.7.0 the <code>@ConditionalOnBean(DataSource.class)</code> avoid the starter to perform initialization.
When i remove the statement all is fine again.</p>
<p>I don't understand why it doesn't work since the update?
Maybe i misused or forgot some statement. The behaviour i attempt to is the autoconfiguration apply only if a datasource bean is registred.</p>
<p>If someone can help me ?</p>
<p>PS : sorry for my english :-)</p>
","72531265","<p>So i found the solution, it was a mistake from myself... I put the <code>@AutoConfigureAfter</code> on a <code>@Configuration</code> imported by the autoconfiguration entrypoint. So i move the statement on the autoconfiguration class and now all is fine.
The new annotation <code>@AutoConfiguration</code> will be very usefull to avoid this kinf of mistake.</p>
"
"71473485","1","What is the difference between a final Class and a Record?","<p>In simple words what is the difference between a <strong>final class</strong> and a <strong>record</strong> in Java 17?</p>
<p>In which case should I use a record?</p>
","71474203","<p><strong>Record</strong> is an <em><strong>immutable class</strong></em>, i.e. all its fields are <code>final</code>. <em>Records</em> are implicitly <code>final</code>, hence as well as regular <em>final class</em> <code>record</code> can't be <em>extended</em>.</p>
<p>There are a number of <strong>restrictions</strong> imposed on records (<a href=""https://openjdk.java.net/jeps/395"" rel=""noreferrer""><em>for more details, take a look at <strong>JEP 395</strong></em></a>).</p>
<p>Contrary to <em>normal classes</em>:</p>
<ul>
<li>it's forbidden to declare <em><strong>instance fields</strong></em> <em>explicitly</em> inside <strong>records</strong> (<em>and reminder: all fields are</em> <code>final</code>, <em>which is a very impotent distinction</em>);</li>
<li><code>extends</code> clause is not allowed with <strong>records</strong>, because every <strong>record</strong> implicitly <em>extends</em> abstract class <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Record.html"" rel=""noreferrer"">Record</a>;</li>
<li><strong>record</strong> can't be declared with any of these modifiers: <code>abstract</code>, <code>sealed</code>, or <code>non-sealed</code> (as a consequence of being implicitly <code>final</code>);</li>
<li><strong>records</strong> can't declare <em>instance initializers</em> and <em>native methods</em>.</li>
</ul>
<p>Records are meant to be <em><strong>&quot;transparent carriers for immutable data&quot;</strong></em> as <em>JEP 395</em> says.</p>
<p>They are designed to be <em>concise</em>, <em>default constructor</em>, <em>getters</em>, <code>hashCode/equals</code> and <code>toString()</code> will be generated by the compiler for you. So that inside a <strong>record</strong> you need to declare only your custom logic (<em>if any</em>) and record declaration can be literally a <em><strong>one-liner</strong></em>.</p>
<p><em>Records</em> differ a lot from regular <em>final classes</em>.</p>
<p>Also, apart from the peculiarities mentioned above, the mechanism of <em>serialization / deserialization</em> was reimplemented for <strong>records</strong>, so that <em>deserialization</em> doesn't bypass the constructor.</p>
<blockquote>
<p>In which case should I use a record?</p>
</blockquote>
<p>In short, if your objects must be <em><strong>stateful</strong></em>, or you need to <em><strong>extend</strong></em> a particular class, then you can't utilize <code>record</code> in such a case.</p>
<p>On the other hand, if your objects are meant just <em><strong>carry the data</strong></em>, they are not intended to be modified or inherit from other classes, then it might be a good candidate to be implemented as a <code>record</code>.</p>
"
"72259078","1","Invariant Generics don't seem working correctly","<p>I've read some articles about <em>Covariance</em>, <em>Contravariance</em>, and <em>Invariance</em> in Java, but I'm confused about them.</p>
<p>I'm using Java 11, and I have a class hierarchy <code>A =&gt; B =&gt; C</code> (means that <code>C</code> is a subtype of <code>B</code> and <code>A</code>, and <code>B</code> is a subtype of <code>A</code>) and a class <code>Container</code>:</p>
<pre><code>class Container&lt;T&gt; {
    public final T t;
    public Container(T t) {
        this.t = t;
    }
}
</code></pre>
<p>for example, if I define a function:</p>
<pre><code>public Container&lt;B&gt; method(Container&lt;B&gt; param){
  ...
}
</code></pre>
<p>here is my confusion, why does the third line compile?</p>
<pre><code>method(new Container&lt;&gt;(new A())); // ERROR
method(new Container&lt;&gt;(new B())); // OK
method(new Container&lt;&gt;(new C())); // OK Why ?, I make a correction, this compiles OK
</code></pre>
<p>if in Java Generics are <em>invariant</em>.</p>
<p>When I define something like this:</p>
<pre><code>Container&lt;B&gt; conta =  new Container&lt;&gt;(new A()); // ERROR, Its OK!
Container&lt;B&gt; contb =  new Container&lt;&gt;(new B()); // OK, Its OK!
Container&lt;B&gt; contc =  new Container&lt;&gt;(new C()); // Ok, why ? It's not valid, because they are invariant
</code></pre>
","72275673","<p>One of the boons introduced with Java 7 is the so-called <a href=""https://docs.oracle.com/javase/tutorial/java/generics/types.html#diamond"" rel=""nofollow noreferrer""><em>diamond operator</em></a> <code>&lt;&gt;</code>.</p>
<p>And it has been with us for so long, that it's easy to forget that every time when diamond is being used while instantiating a generic class the compiler should <strong>infer</strong> the generic type from the context.</p>
<p>If we define a variable which will hold a reference to a list of <code>Person</code> objects like this:</p>
<pre><code>List&lt;Person&gt; people = new ArrayList&lt;&gt;(); // effectively - ArrayList&lt;Person&gt;()
</code></pre>
<p>the compiler will <em>infer</em> the type of the <code>ArrayList</code> instance from the type of the variable <code>people</code> on the left.</p>
<p>In the <em>Java language specification</em>, the expression <code>new ArrayList&lt;&gt;()</code> is being described as a <a href=""https://docs.oracle.com/javase/specs/jls/se17/html/jls-15.html#jls-15.9"" rel=""nofollow noreferrer""><em>class instance creation expression</em></a> and because it doesn't specify the generic type parameter and is used within a <em>context</em>, it should be classified as being a <em><strong>poly expression</strong></em>. A quote from the specification:</p>
<blockquote>
<p>A <em>class instance creation expression</em> is a <strong>poly expression</strong> (§15.2) if
it uses the <strong>diamond</strong> form for type arguments to the class, and it
appears in an <strong>assignment context</strong> or an <strong>invocation context</strong> (§5.2,
§5.3).</p>
</blockquote>
<p>I.e. when <em>diamond</em> <code>&lt;&gt;</code> is used with a generic class instantiation, the actual type will depend on the <strong>context</strong> in which it appears.</p>
<p>The three statements below represent the case of so-called <em>assignment context</em>. And all three instances <code>Container</code> will be inferred as being of type <code>B</code>.</p>
<pre><code>Container&lt;B&gt; conta = new Container&lt;&gt;(new A()); // 1 - ERROR   because `B t = new A()` is incorrect
Container&lt;B&gt; contb = new Container&lt;&gt;(new B()); // 2 - fine    because `B t = new B()` is correct
Container&lt;B&gt; contc = new Container&lt;&gt;(new C()); // 3 - fine    because `B t = new C()` is also correct
</code></pre>
<p>Since all instances of container are of type <code>B</code> and of parameter type expected by the contractor also will be <code>B</code>. I.e. can provide an instance of <code>B</code> or any of its subtypes. Therefore, in the case <code>1</code> we are getting a compilation error, meanwhile <code>2</code> and <code>3</code> (<code>B</code> and subtype of <code>B</code>) will compile correctly.</p>
<p>And it in't a violation of <em>invariant behavior</em>. Think about it this way: we can store in a <code>List&lt;Number&gt;</code> instances of <code>Integer</code>, <code>Byte</code>, <code>Double</code>, etc., that would not lead to any problem since they all can represent their super type <code>Number</code>. But the compiler will not allow assigning this list to any list that is not of type <code>List&lt;Number&gt;</code> because otherwise it would be impossible to ensure that this assignment is safe. And that is what the invariance means - we can assign only <code>List&lt;Number&gt;</code> to a variable of type <code>List&lt;Number&gt;</code> (but we are free to store any subtype of <code>Number</code> in it, it's safe).</p>
<p>As an example, let's consider that there's a setter method in the <code>Container</code> class:</p>
<pre><code>public class Container&lt;T&gt; {
    public T t;
    public Container(T t) {
        this.t = t;
    }
        
    public void setT(T t) {
        this.t = t;
    }
}
</code></pre>
<p>Now let's use it:</p>
<pre><code>Container&lt;B&gt; contb =  new Container&lt;&gt;(null); // to avoid any confusion initialy `t` will be assigned to `null`

contb.setT(new A()); // compilation error - because expected type is `B` or it's subtype
contb.setT(new B()); // fine
contb.setT(new C()); // fine because C is a subtype of B
</code></pre>
<p>When we deal with a class instance creation expression using diamond <code>&lt;&gt;</code>, which is passed to a method as an argument, the type will be inferred from the <em>invocation context</em> as the quote from the specification provided above states.</p>
<p>Because <code>method()</code> expects <code>Container&lt;B&gt;</code>, all instances above will be inferred as being of type <code>B</code>.</p>
<pre><code>method(new Container&lt;&gt;(new A())); // Error
method(new Container&lt;&gt;(new B())); // OK - because `B t = new B()` is correct
method(new Container&lt;&gt;(new C())); // OK - because `B t = new C()` is also correct
</code></pre>
<p><em><strong>Note</strong></em></p>
<p>The important thing to mention that prior to Java 8 (<em>i.e. with Java 7, because we are using diamond</em>) the expression <code>new Container&lt;&gt;(new C())</code> will be interpreted by the compiler as a <em>standalone expression</em> (i.e. the context will be ignored) creating an instance of <code>Container&lt;C&gt;</code>. It means your initial guess was somewhat correct: with <strong>Java 7</strong> the below statement would not compile.</p>
<pre><code>Container&lt;B&gt; contc = new Container&lt;&gt;(new C()); // Container&lt;B&gt; = Container&lt;C&gt; - is an illegal assignment
</code></pre>
<p>But Java 8 has introduced a feature called <a href=""https://docs.oracle.com/javase/tutorial/java/generics/genTypeInference.html#target_types"" rel=""nofollow noreferrer""><em>target types</em></a> and <em>poly expressions</em> (i.e. expressions that appear within a <em>context</em>) that insures that <em>context</em> will always be taken into account by the type inference mechanism.</p>
"
"71642208","1","Parameter value [%Gabrek%] did not match expected type [java.lang.Character (n/a)];","<p>i've been writing wirting a program in Spring Boot Web with JPA and i'm using a query to access some data with a 'contains' and 'ignorecase' filter, i've done this before in other programs and it has worked fine, but now i'm getting this error, i'm completely lost at this point since i can't find anything in google, i went really far down the rabbit hole looking as to why it happens and so far i don't see anything out of place in my code, the type of variable declared seems to be okay but as i've said, i'm lost. It's important to mention that for some reason when I do the query on my website for the first time, everything works fine, i get the proper results and all, but when I go back to home and try with another query (or even the same) i get the error. Code below:</p>
<p><strong>Model</strong></p>
<pre><code>import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;

@Entity
public class Serie {
    
    @Id
    @Column(columnDefinition = &quot;NUMERIC(19,0)&quot;)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer id;
    private String title;
    private String red;
    @Column(columnDefinition = &quot;NUMERIC(19,0)&quot;)
    private double rating;
</code></pre>
<p><strong>Repository</strong></p>
<pre><code>import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;

import cl.desafiolatam.imdb.modelo.Serie;

public interface SerieRepository extends JpaRepository&lt;Serie, Integer&gt; {

    public List&lt;Serie&gt; findByTitleContainingIgnoreCase(String title);
    
}
</code></pre>
<p><strong>Service</strong></p>
<pre><code>import cl.desafiolatam.imdb.vo.SerieVO;

public interface SerieService {
    
    public SerieVO findByTitleContainingIgnoreCase(String title);

}
</code></pre>
<p><strong>Service implementation</strong></p>
<pre><code>import java.util.ArrayList;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import cl.desafiolatam.imdb.dao.SerieRepository;
import cl.desafiolatam.imdb.modelo.Serie;
import cl.desafiolatam.imdb.service.SerieService;
import cl.desafiolatam.imdb.vo.SerieVO;

@Service
public class SerieServiceImpl implements SerieService {
    
    private static final Logger logger = LoggerFactory.getLogger(SerieServiceImpl.class);
    
    @Autowired
    SerieRepository dao;
    SerieVO respuesta;

    @Override
    @Transactional(readOnly = true)
    public SerieVO findByTitleContainingIgnoreCase(String title) {
        
        respuesta = new SerieVO(&quot;Ha ocurrido un error!&quot;, &quot;104&quot;, new ArrayList&lt;Serie&gt;());

        try {
            List&lt;Serie&gt; serie = dao.findByTitleContainingIgnoreCase(title);
            System.out.println(serie);
            if(serie.size() &gt; 0) {
                respuesta.setSeries(serie);
                respuesta.setMensaje(&quot;Se ha encontrado el registro&quot;);
                respuesta.setCodigo(&quot;0&quot;);
            } else {
                respuesta.setMensaje(&quot;No se ha encontrado el registro&quot;);
                respuesta.setCodigo(&quot;104&quot;);
            }
        } catch (Exception e) {
            logger.error(&quot;Error al buscar la serie&quot;, e);
        }
        
        return respuesta;
    }

}
</code></pre>
<p><strong>Visual object</strong></p>
<pre><code>import java.util.List;

import cl.desafiolatam.imdb.modelo.Serie;

public class SerieVO extends GenericVO {
    
    List&lt;Serie&gt; series;

    public SerieVO(String mensaje, String codigo, List&lt;Serie&gt; series) {
        super(mensaje, codigo);
        this.series = series;
    }

    public SerieVO() {
        super();
    }
</code></pre>
<p><strong>Controller</strong></p>
<pre><code>import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import cl.desafiolatam.imdb.modelo.Serie;
import cl.desafiolatam.imdb.service.SerieService;
import cl.desafiolatam.imdb.vo.SerieVO;

@Controller
public class SerieController {

    private final static Logger logger = LoggerFactory.getLogger(SerieController.class);

    @Autowired
    private SerieService svc;

@GetMapping(&quot;/buscarSerie&quot;)
    public ModelAndView buscarSerie(Model model, @RequestParam String nombreSerie) {
        
        SerieVO respuestaServicio = new SerieVO();
        respuestaServicio.setMensaje(&quot;No se ha encontrado la serie&quot;);
        
        try {
            respuestaServicio = svc.findByTitleContainingIgnoreCase(nombreSerie);
            model.addAttribute(&quot;listaSeries&quot;, respuestaServicio.getSeries());
            return new ModelAndView(&quot;resultadoserie&quot;);
        } catch (Exception e) {
            logger.error(&quot;Error al buscar la serie&quot;, e);
        }
        
        return new ModelAndView(&quot;redirect:/user&quot;);
        
    }
}
</code></pre>
<p><strong>Search input</strong></p>
<pre><code>&lt;div class=&quot;d-flex justify-content-center pb-2&quot;&gt;
        &lt;div class=&quot;container row&quot;&gt;
            &lt;div class=&quot;col-md-4&quot;&gt;
                &lt;div class=&quot;d-flex justify-content-center&quot;&gt;
                    &lt;h2&gt;Buscar serie&lt;/h2&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class=&quot;col-md-8&quot;&gt;
                &lt;form action=&quot;buscarSerie&quot; method=&quot;get&quot;&gt;
                    &lt;div class=&quot;row g-2&quot;&gt;
                        &lt;div class=&quot;col-md&quot;&gt;
                            &lt;div class=&quot;form-floating&quot;&gt;
                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;floatingInputGrid&quot;
                                    value=&quot;&quot; name=&quot;nombreSerie&quot; required&gt; &lt;label
                                    for=&quot;floatingInputGrid&quot;&gt;Serie&lt;/label&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;d-flex justify-content-center pt-4&quot;&gt;
                        &lt;input type=&quot;submit&quot; class=&quot;btn m-2 btn-dark&quot; value=&quot;Buscar&quot; /&gt;
                    &lt;/div&gt;
                &lt;/form&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
</code></pre>
<p>As i've said, im really lost, researched everywhere, and checked the code in my last projects, i just can't find out why this one does me this dirty. Won't even fail at the start, it gives me a glimpse of hope and when i want to retry it, it crushes that little hope. :)</p>
<p>I tried deleting my code and copy&amp;paste from projects where i know it works as intended, changed the variable and param. names to make it work with the new program but didn't work. Did a side by side comparison, tried a @Query writing the specific instruction. Looking for info. only with the 'contains' filter and yet, nothing worked.</p>
","71649782","<p>According to the Spring Data JPA <a href=""https://github.com/spring-projects/spring-data-jpa/issues/2472"" rel=""nofollow noreferrer"">issue #2472</a> this seems to be a problem in Hibernate 5.6.6 and 5.6.7.</p>
<p>The Hibernate bug is <a href=""https://hibernate.atlassian.net/browse/HHH-15142"" rel=""nofollow noreferrer"">HHH-15142</a>.</p>
<p>The solution is to either downgrade to Hibernate 5.6.5 or wait for a Hibernate patch to solve this issue.</p>
<p><strong>Update</strong>: According to the bug report above this is resolved in version 5.6.9.</p>
"
"72510274","1","Terminate a Stream when there is no incoming Data after certain Timeout","<p>I have an <code>InputStream</code> and <code>OutputStream</code> (<em>there is no socket</em>).</p>
<p>I have a stream-based code that does some <em>mapping/filtering/grouping/processing</em>.</p>
<p>My main goal to terminate the stream if the <code>maxDuration</code> was exceeded:</p>
<pre><code>void fillStreamMap(BufferedReader reader) {
    final Instant end = Instant.now().plusNanos(TimeUnit.NANOSECONDS.convert(maxDuration));

    this.map = reader.lines()
        .takeWhile(e -&gt; checkTimeout(end))
        .map(this::jsonToBuyerEventInput)
        .filter(Objects::nonNull)
        .filter(getFilter()::apply)
        .limit(super.maxEvent)
        .collect(Collectors.groupingBy(BuyerEventInput::getBuyer));
}

boolean checkTimeout(Instant end){
    return Instant.now().getEpochSecond() &lt;= end.getEpochSecond();
}
</code></pre>
<p>I'm using <code>takeWhile</code> which is a very useful function, but it checks the termination condition if there is an upcoming event.</p>
<p>So if there is no data sent, it doesn't check the condition because this function is built to take a <code>Predicate</code> as an argument.</p>
<p>Is there any way to accomplish this goal?</p>
","72553605","<p>Here is an approach that operates on Streams. The core function is <code>timedTake(Stream&lt;T&gt; stream, long timeout, TimeUnit unit)</code>. The idea is to traverse the original stream using its raw <a href=""https://docs.oracle.com/javase/9/docs/api/java/util/Spliterator.html"" rel=""nofollow noreferrer"">Spliterator</a>, which makes it possible to set a timeout.</p>
<pre><code>import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Optional;
import java.util.Spliterator;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
import java.util.function.Supplier;
import java.util.stream.Stream;

class Main {
    static &lt;T&gt; Stream&lt;T&gt; generateOrderedStream(Supplier&lt;Optional&lt;T&gt;&gt; s) {
        // Returns an ordered stream with the values of the Optionals returned by s.get(). An empty Optional ends the stream.
        // As pseudocode:
        //     for (Optional&lt;T&gt; o = s.get(); o.isPresent(); o = s.get())
        //         emit o.get();
        return Stream.iterate(s.get(), Optional::isPresent, prev -&gt; s.get())
            .map(Optional::get);
    }

    static &lt;T&gt; Optional&lt;T&gt; advance(Spliterator&lt;T&gt; iter) {
        // Returns an Optional with the next element of the iterator, or an empty Optional if there are no more elements.
        // (This method is much nicer than calling iter.tryAdvance() directly.)
        final var r = new Object() { T elem; };
        return iter.tryAdvance(elem -&gt; r.elem = elem) ? Optional.of(r.elem) : Optional.empty();
    }

    static ThreadFactory daemonThreadFactory() {
        return (r) -&gt; {
            Thread thread = new Thread(r);
            thread.setDaemon(true);
            return thread;
        };
    }

    static &lt;T&gt; Stream&lt;T&gt; timedTake(Stream&lt;T&gt; stream, long timeout, TimeUnit unit) {
        // Traverses the stream until the timeout elapses and returns the traversed elements.
        final long deadlineNanos = System.nanoTime() + unit.toNanos(timeout);
        final ExecutorService executor = Executors.newSingleThreadExecutor(daemonThreadFactory());
        final Spliterator&lt;T&gt; iter = stream.spliterator();
        return generateOrderedStream(() -&gt; {
            try {
                Future&lt;Optional&lt;T&gt;&gt; future = executor.submit(() -&gt; advance(iter));
                long remainingNanos = deadlineNanos - System.nanoTime();
                Optional&lt;T&gt; optElem = future.get(remainingNanos, TimeUnit.NANOSECONDS);
                if (!optElem.isPresent()) { // this is the end of the input stream, so clean up
                    executor.shutdownNow();
                }
                return optElem;
            } catch (TimeoutException e) {
                executor.shutdownNow();
                return Optional.empty(); // mark this as the end of the result stream
            } catch (ExecutionException e) {
                executor.shutdownNow();
                throw new RuntimeException(e.getCause());
            } catch (InterruptedException e) {
                executor.shutdownNow();
                throw new RuntimeException(e);
            }
        });
    }

    static void fillStreamMap(BufferedReader reader) {
        // streaming demo
        long maxDurationSecs = 5;
        timedTake(reader.lines(), maxDurationSecs, TimeUnit.SECONDS)
            .takeWhile(line -&gt; !line.contains(&quot;[stop]&quot;))
            .map(line -&gt; &quot;[mapped] &quot; + line)
            .forEachOrdered(System.out::println);
    }

    public static void main(String[] args) {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        fillStreamMap(reader);
    }
}
</code></pre>
<hr />
<p>Another approach is to operate at the Reader level, and read with a timeout from the <code>BufferedReader</code> (which presumably wraps <code>System.in</code>). Unfortunately, it's very hard to do this properly (see e.g. <a href=""https://stackoverflow.com/questions/10059068/set-timeout-for-users-input"">Set timeout for user's input</a>, and the article <a href=""https://www.javaspecialists.eu/archive/Issue153-Timeout-on-Console-Input.html"" rel=""nofollow noreferrer"">Timeout on Console Input</a>).</p>
<p>One idea from those linked pages is to poll <a href=""https://docs.oracle.com/javase/9/docs/api/java/io/BufferedReader.html#ready()"" rel=""nofollow noreferrer"">BufferedReader.ready()</a> until it returns <code>true</code>, and then call <code>readLine()</code>. This is ugly (because it uses polling) and unreliable, because <code>readLine()</code> can block even if <code>ready()</code> returned true – for example because an incomplete line is available (on Unix-like systems the user can achieve this by typing some text then pressing Ctrl+D instead of Enter).</p>
<p>Another idea is to create a background thread that repeatedly calls <code>BufferedReader.readLine()</code> and inserts the results into a <a href=""https://docs.oracle.com/javase/9/docs/api/java/util/concurrent/BlockingQueue.html"" rel=""nofollow noreferrer"">BlockingQueue</a> (such as <a href=""https://docs.oracle.com/javase/9/docs/api/java/util/concurrent/ArrayBlockingQueue.html"" rel=""nofollow noreferrer"">ArrayBlockingQueue</a>). Then the main thread can call <a href=""https://docs.oracle.com/javase/9/docs/api/java/util/concurrent/BlockingQueue.html#take()"" rel=""nofollow noreferrer"">take()</a> or <a href=""https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/BlockingQueue.html#poll(long,%20java.util.concurrent.TimeUnit)"" rel=""nofollow noreferrer"">poll(timeout, unit)</a> on the queue to obtain lines.</p>
<p>A limitation of this approach is that if you later want to read from the <code>BufferedReader</code> directly (as opposed to through the queue), it's pretty much impossible to avoid losing (at least) one line of input. This is because a thread can't be interrupted cleanly when it's blocked on <code>readLine()</code>, so if the main thread decides to stop early (e.g. because of a timeout) it can't prevent the background thread from reading the line it is currently waiting for.</p>
<p>You could try to &quot;unread&quot; the last line using <a href=""https://docs.oracle.com/javase/9/docs/api/java/io/BufferedReader.html#mark-int-"" rel=""nofollow noreferrer"">mark(readAheadLimit)</a> and <a href=""https://docs.oracle.com/javase/9/docs/api/java/io/BufferedReader.html#reset--"" rel=""nofollow noreferrer"">reset()</a>, but synchronization will be difficult – another thread could try to read from the <code>BufferedReader</code> before the background thread calls <code>reset()</code>. You'd probably have to synchronize using the the <a href=""https://docs.oracle.com/javase/9/docs/api/java/io/Reader.html#lock"" rel=""nofollow noreferrer"">lock field</a>, however its access level is <code>protected</code> so you'd only be able to access it using reflection or by subclassing <code>BufferedReader</code>. Also, <code>reset()</code> will fail if the line to be unread is longer than <code>readAheadLimit</code>.</p>
<p>Here is an implementation that assumes you only read lines via the queue.</p>
<p><strong>DISCLAIMER:</strong> Beware of bugs in these code snippets – multi-threading is tricky. I might try improve the code another time.</p>
<pre><code>import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Optional;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.TimeUnit;
import java.util.function.Supplier;
import java.util.stream.Stream;

class InterruptibleLineReader {
    private static final String EOF = new String(&quot;&lt;EOF&gt;&quot;);
    BufferedReader reader;
    ArrayBlockingQueue&lt;String&gt; lines = new ArrayBlockingQueue&lt;&gt;(/* capacity: */ 2);
    Thread backgroundThread;
    IOException exception;

    public InterruptibleLineReader(BufferedReader reader) {
        this.reader = reader;
        // start a background thread to read lines
        backgroundThread = new Thread(this::backgroundTask);
        backgroundThread.setDaemon(true);
        backgroundThread.start();
    }

    public void close() {
        backgroundThread.interrupt();
        lines.clear();
        lines.add(EOF);
    }

    private void backgroundTask() {
        try {
            try {
                while (true) {
                    String line = reader.readLine();
                    if (Thread.interrupted()) {
                        // nothing to do (close() is responsible for lines.put(EOF) etc. in this case)
                        break;
                    } else if (line == null) {
                        lines.put(EOF);
                        break;
                    }
                    lines.put(line);
                }
            } catch (IOException e) {
                exception = e;
                lines.put(EOF);
            }
        } catch (InterruptedException e) {
            // nothing to do (close() is responsible for lines.put(EOF) etc. in this case)
        }
    }

    public String readLine(long timeout, TimeUnit unit) throws IOException, InterruptedException {
        String line = lines.poll(timeout, unit);
        if (line == EOF) { // EOF or IOException
            lines.put(EOF); // restore the EOF so that any concurrent (and future) calls to this method won't block
            if (exception != null) {
                throw exception;
            } else {
                return null;
            }
        }
        return line;
    }
}

class Main {
    static &lt;T&gt; Stream&lt;T&gt; generateOrderedStream(Supplier&lt;Optional&lt;T&gt;&gt; s) {
        // Returns an ordered stream with the values of the Optionals returned by s.get(). An empty Optional ends the stream.
        // As pseudocode:
        //     for (Optional&lt;T&gt; o = s.get(); o.isPresent(); o = s.get())
        //         emit o.get();
        return Stream.iterate(s.get(), Optional::isPresent, prev -&gt; s.get())
            .map(Optional::get);
    }

    static Stream&lt;String&gt; timedReadLines(InterruptibleLineReader lineReader, long timeout, TimeUnit unit) {
        // Reads lines until the timeout elapses and returns them as a stream.
        final long deadlineNanos = System.nanoTime() + unit.toNanos(timeout);
        return generateOrderedStream(() -&gt; {
            try {
                long remainingNanos = deadlineNanos - System.nanoTime();
                return Optional.ofNullable(lineReader.readLine(remainingNanos, TimeUnit.NANOSECONDS));
            } catch (IOException|InterruptedException e) {
                throw new RuntimeException(e);
            }
        });
    }

    static void fillStreamMap(InterruptibleLineReader lineReader) {
        // streaming demo
        long maxDurationSecs = 5;
        timedReadLines(lineReader, maxDurationSecs, TimeUnit.SECONDS)
            .takeWhile(line -&gt; !line.contains(&quot;[stop]&quot;))
            .map(line -&gt; &quot;[mapped] &quot; + line)
            .forEachOrdered(System.out::println);
    }

    public static void main(String[] args) {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

        // stream lines
        InterruptibleLineReader lineReader = new InterruptibleLineReader(reader);
        fillStreamMap(lineReader);
        lineReader.close();

        /*
        // attempt to use the BufferedReader directly
        // NOTE: several lines may be lost (depending on the capacity of the ArrayBlockingQueue and how quickly the lines are consumed)
        System.out.println(&quot;--- reading directly from BufferedReader ---&quot;);
        while (true) {
            try {
                String line = reader.readLine();
                if (line == null) { break; }
                System.out.println(&quot;[raw] &quot; + line);
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
        }
        */
    }
}
</code></pre>
<p>Here is a more sophisticated implementation that only loses one line of input if you close the queue and read directly from the <code>BufferedReader</code>. It uses a custom &quot;0-capacity&quot; queue to ensure that at most one line will be lost.</p>
<pre><code>import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.NoSuchElementException;
import java.util.Optional;
import java.util.concurrent.TimeUnit;
import java.util.function.Supplier;
import java.util.stream.Stream;

class InterruptibleLineReader {
    BufferedReader reader;
    ZeroCapacityBlockingQueue&lt;String&gt; lines = new ZeroCapacityBlockingQueue&lt;&gt;(); // a null line indicates EOF or IOException
    Thread backgroundThread;
    IOException exception;
    boolean eof;

    public InterruptibleLineReader(BufferedReader reader) {
        this.reader = reader;
        // start a background thread to read lines
        backgroundThread = new Thread(this::backgroundTask);
        backgroundThread.setDaemon(true);
        backgroundThread.start();
    }

    private void markAsEOF() {
        eof = true;
        if (lines.poll() != null) { // markAsEOF() should not be called when there are unconsumed lines
            throw new IllegalStateException();
        }
        lines.offer(null); // unblock threads that are waiting on the queue
    }

    public void close() {
        backgroundThread.interrupt();
        // warn if there is an unconsumed line, and consume it so we can indicate EOF
        String line = lines.poll();
        if (line != null) {
            System.err.println(&quot;InterruptibleLineReader: warning: discarding unconsumed line during close(): '&quot; + line + &quot;'&quot;);
        }
        markAsEOF();
    }

    private void backgroundTask() {
        try {
            while (true) {
                String line = reader.readLine();
                if (Thread.interrupted()) {
                    if (line != null) {
                        System.err.println(&quot;InterruptibleLineReader: warning: discarding line that was read after close(): '&quot; + line + &quot;'&quot;);
                    }
                    // nothing further to do (close() is responsible for calling markAsEOF() in this case)
                    break;
                } else if (line == null) { // EOF
                    markAsEOF();
                    break;
                }
                lines.put(line); // this blocks until the line has been consumed (&quot;0-capacity&quot; behaviour)
                if (Thread.interrupted()) {
                    // nothing to do (close() is responsible for calling markAsEOF() in this case)
                    break;
                }
            }
        } catch (IOException e) {
            exception = e;
            markAsEOF();
        } catch (InterruptedException e) {
            // nothing to do (close() is responsible for calling markAsEOF() in this case)
        }
    }

    public String readLine() throws IOException, InterruptedException {
        String line = lines.take();
        if (line == null) { // EOF or IOException
            markAsEOF(); // restore the null so that any concurrent (and future) calls to this method won't block
            if (exception != null) {
                throw exception;
            } else {
                return null; // EOF
            }
        } else {
            return line;
        }
    }

    public String readLine(long timeout, TimeUnit unit) throws IOException, InterruptedException {
        String line = lines.poll(timeout, unit);
        if (line == null &amp;&amp; eof) { // EOF or IOException (not timeout)
            markAsEOF(); // restore the null so that any concurrent (and future) calls to this method won't block
            if (exception != null) {
                throw exception;
            } else {
                return null; // EOF
            }
        } else {
            return line;
        }
    }
}

class ZeroCapacityBlockingQueue&lt;T&gt; {
    int count;
    T item;

    public synchronized boolean add(T x) {
        // does not block (i.e. behaves as if the capacity is actually 1)
        if (count == 1) {
            throw new IllegalStateException(&quot;Queue full&quot;);
        }
        item = x;
        count++;
        notifyAll();
        return true;
    }

    public synchronized boolean offer(T x) {
        // does not block (i.e. behaves as if the capacity is actually 1)
        if (count == 1) {
            return false;
        }
        return add(x);
    }

    public synchronized void put(T x) throws InterruptedException {
        // blocks until the item has been removed (&quot;0-capacity&quot; behaviour)
        while (count == 1) {
            wait();
        }
        add(x);
        while (count == 1 &amp;&amp; item == x) {
            wait();
        }
    }

    public synchronized T remove() {
        if (count == 0) {
            throw new NoSuchElementException();
        }
        T x = item;
        item = null;
        count--;
        notifyAll();
        return x;
    }

    public synchronized T poll() {
        if (count == 0) {
            return null;
        }
        return remove();
    }

    public synchronized T take() throws InterruptedException {
        while (count == 0) {
            wait();
        }
        return remove();
    }

    public synchronized T poll(long timeout, TimeUnit unit) throws InterruptedException {
        long deadlineNanos = System.nanoTime() + unit.toNanos(timeout);
        while (count == 0) {
            long remainingNanos = deadlineNanos - System.nanoTime();
            if (remainingNanos &lt;= 0) {
                return null;
            }
            TimeUnit.NANOSECONDS.timedWait(this, remainingNanos);
        }
        return remove();
    }
}

class Main {
    static &lt;T&gt; Stream&lt;T&gt; generateOrderedStream(Supplier&lt;Optional&lt;T&gt;&gt; s) {
        // Returns an ordered stream with the values of the Optionals returned by s.get(). An empty Optional ends the stream.
        // As pseudocode:
        //     for (Optional&lt;T&gt; o = s.get(); o.isPresent(); o = s.get())
        //         emit o.get();
        return Stream.iterate(s.get(), Optional::isPresent, prev -&gt; s.get())
            .map(Optional::get);
    }

    static Stream&lt;String&gt; timedReadLines(InterruptibleLineReader lineReader, long timeout, TimeUnit unit) {
        // Reads lines until the timeout elapses and returns them as a stream.
        final long deadlineNanos = System.nanoTime() + unit.toNanos(timeout);
        return generateOrderedStream(() -&gt; {
            try {
                long remainingNanos = deadlineNanos - System.nanoTime();
                return Optional.ofNullable(lineReader.readLine(remainingNanos, TimeUnit.NANOSECONDS));
            } catch (IOException|InterruptedException e) {
                throw new RuntimeException(e);
            }
        });
    }

    static void fillStreamMap(InterruptibleLineReader lineReader) {
        // streaming demo
        long maxDurationSecs = 5;
        timedReadLines(lineReader, maxDurationSecs, TimeUnit.SECONDS)
            .takeWhile(line -&gt; !line.contains(&quot;[stop]&quot;))
            .map(line -&gt; &quot;[mapped] &quot; + line)
            .forEachOrdered(System.out::println);
    }

    public static void main(String[] args) {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

        // stream lines
        InterruptibleLineReader lineReader = new InterruptibleLineReader(reader);
        fillStreamMap(lineReader);
        lineReader.close();

        /*
        // attempt to use the BufferedReader directly
        // NOTE: a line will be lost
        System.out.println(&quot;--- reading directly from BufferedReader ---&quot;);
        while (true) {
            try {
                String line = reader.readLine();
                if (line == null) { break; }
                System.out.println(&quot;[raw] &quot; + line);
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
        }
        */
    }
}
</code></pre>
<p>Here is an example run of the second implementation (with the last part of <code>main()</code> uncommented). The timestamps are in seconds and &quot;&gt;&quot; denotes input.</p>
<pre class=""lang-none prettyprint-override""><code>0.06 --- streaming lines using InterruptibleLineReader for 5.0 sec  ---
0.82 &gt; one
0.83 [mapped] one
1.76 &gt; two
1.76 [mapped] two
2.73 &gt; three
2.73 [mapped] three
5.06 --- reading directly from BufferedReader ---
6.93 &gt; four
6.94 InterruptibleLineReader: warning: discarding line that was read after close(): 'four'
7.76 &gt; five
7.76 [raw] five
8.60 &gt; six
8.60 [raw] six
</code></pre>
<p>Note how the line &quot;four&quot; was lost. To avoid losing lines, don't use the underlying <code>BufferedReader</code> after the <code>InterruptibleLineReader</code> instance is created.</p>
<p>(If you really need a <code>BufferedReader</code> after that point, you could write a dummy subclass of <code>BufferedReader</code> that wraps <code>InterruptibleLineReader</code> and forwards <code>readLine()</code> calls to it. The other <code>BufferedReader</code> methods, such as <code>read()</code> and <code>mark()</code>, can't be implemented easily.)</p>
"
"71525731","1","java.lang.IllegalAccessError: class org.jetbrains.kotlin.kapt3.base.KaptContext Android","<p>I've been getting an error like this for days, but I couldn't find a solution. Can you please help me?</p>
<p>What could the problem be caused by?</p>
<p>Error :</p>
<pre><code>java.lang.IllegalAccessError: class org.jetbrains.kotlin.kapt3.base.KaptContext (in unnamed module @0x6acdb135) cannot access class com.sun.tools.javac.util.Context (in module jdk.compiler) because module jdk.compiler does not export com.sun.tools.javac.util to unnamed module @0x6acdb135
    at org.jetbrains.kotlin.kapt3.base.KaptContext.&lt;init&gt;(KaptContext.kt:28)
    at org.jetbrains.kotlin.kapt3.KaptContextForStubGeneration.&lt;init&gt;(KaptContextForStubGeneration.kt:40)
    at org.jetbrains.kotlin.kapt3.AbstractKapt3Extension.contextForStubGeneration(Kapt3Extension.kt:287)
    at org.jetbrains.kotlin.kapt3.AbstractKapt3Extension.analysisCompleted(Kapt3Extension.kt:171)
    at org.jetbrains.kotlin.kapt3.ClasspathBasedKapt3Extension.analysisCompleted(Kapt3Extension.kt:102)
    at org.jetbrains.kotlin.cli.jvm.compiler.TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration$invokeExtensionsOnAnalysisComplete(TopDownAnalyzerFacadeForJVM.kt:112)
    at org.jetbrains.kotlin.cli.jvm.compiler.TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration(TopDownAnalyzerFacadeForJVM.kt:122)
    at org.jetbrains.kotlin.cli.jvm.compiler.TopDownAnalyzerFacadeForJVM.analyzeFilesWithJavaIntegration$default(TopDownAnalyzerFacadeForJVM.kt:86)
    at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler$analyze$1.invoke(KotlinToJVMBytecodeCompiler.kt:252)
    at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler$analyze$1.invoke(KotlinToJVMBytecodeCompiler.kt:243)
    at org.jetbrains.kotlin.cli.common.messages.AnalyzerWithCompilerReport.analyzeAndReport(AnalyzerWithCompilerReport.kt:113)
    at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.analyze(KotlinToJVMBytecodeCompiler.kt:243)
    at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.compileModules$cli(KotlinToJVMBytecodeCompiler.kt:90)
    at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.compileModules$cli$default(KotlinToJVMBytecodeCompiler.kt:56)
    at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:169)
    at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:52)
    at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:92)
    at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:44)
    at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:98)
    at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:412)
    at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:112)
    at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileIncrementally(IncrementalCompilerRunner.kt:358)
    at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileIncrementally$default(IncrementalCompilerRunner.kt:300)
    at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl$rebuild(IncrementalCompilerRunner.kt:119)
    at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:170)
    at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:81)
    at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:607)
    at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:96)
    at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1658)
    at jdk.internal.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)
    at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.base/java.lang.reflect.Method.invoke(Method.java:568)
    at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
    at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
    at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
    at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
    at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
    at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
    at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
    at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
    at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
    at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
    at java.base/java.lang.Thread.run(Thread.java:833)


Execution failed for task ':app:kaptGenerateStubsMacellanDebugKotlin'.
&gt; Internal compiler error. See log for more details
</code></pre>
","71527580","<p>I found a solution and fixed this damn problem :D</p>
<p>I recommend using, adding it to the root build.gradle. This will force using the given dependency in the whole project:</p>
<p>build.gradle (Project)</p>
<pre><code>allprojects {
    configurations.all {
        resolutionStrategy {
            force 'org.xerial:sqlite-jdbc:3.34.0'
        }
    }
}
</code></pre>
"
"71818173","1","How to handle NumberFormatException with Java StreamAPI","<p>Is there a way to filter out all values that are bigger than the max value that can be stored in a <code>Long</code> using Stream API?</p>
<p>The current situation is that you can search in the frontend with a simple search bar after some customers by using their ID.</p>
<p>For example: <code>123456789, 10987654321.</code> If you put a <em>&quot;separator&quot;</em> between these two IDs, everything works. But if you forget the <em>&quot;separator&quot;</em> my code is trying to parse <code>12345678910987654321</code> into a Long and I guess there is the problem.</p>
<p>That causes a <code>NumberFormatException</code> after trying to search. Is there a way to filter these numbers out that can't be parsed into a <code>Long</code> because they are too big?</p>
<pre><code>String hyphen = &quot;-&quot;;

String[] customerIds = bulkCustomerIdProperty.getValue()
              .replaceAll(&quot;[^0-9]&quot;, hyphen)
              .split(hyphen);
...
customerFilter.setCustomerIds(Arrays.asList(customerIds).stream()
              .filter(n -&gt; !n.isEmpty()) 
              .map(n -&gt; Long.valueOf(n)) // convert to Long
              .collect(Collectors.toSet()));
</code></pre>
","71818306","<p>You can either extract parsing into a separate method and wrap it with a <code>try/catch</code>, or use <code>BigInteger</code> to eliminate values that exceed the range of <code>long</code>.</p>
<p>Example with <code>BigInteger</code>:</p>
<pre><code>Set&lt;Long&gt; result =  Stream.of(&quot;&quot;, &quot;12345&quot;, &quot;9999999999999999999999999999&quot;)
        .filter(n -&gt; !n.isEmpty())
        .map(BigInteger::new)
        .filter(n -&gt; n.compareTo(BigInteger.valueOf(Long.MAX_VALUE)) &lt;= 0 &amp;&amp;
                     n.compareTo(BigInteger.valueOf(Long.MIN_VALUE)) &gt;= 0)
        .map(BigInteger::longValueExact) // convert to Long
        .peek(System.out::println) // printing the output
        .collect(Collectors.toSet());
</code></pre>
<p>Example with handling <code>NumberFormatException</code> in a separate method:</p>
<pre><code>Set&lt;Long&gt; result =  Stream.of(&quot;&quot;, &quot;12345&quot;, &quot;9999999999999999999999999999&quot;)
        .filter(n -&gt; !n.isEmpty())
        .map(n -&gt; safeParse(n))
        .filter(OptionalLong::isPresent)
        .map(OptionalLong::getAsLong) // extracting long primitive and boxing it into Long
        .peek(System.out::println) // printing the output
        .collect(Collectors.toSet());

public static OptionalLong safeParse(String candidate) {
    try {
        return OptionalLong.of(Long.parseLong(candidate));
    } catch (NumberFormatException e) {
        return OptionalLong.empty();
    }
}
</code></pre>
<p><strong>Output</strong> (from <code>peek()</code>)</p>
<pre><code>12345
</code></pre>
"
"71643702","1","Making sense of error message related to type inference when using a method reference","<p>I wanted to create a list of non-alphabetic characters from a string, so I wrote:</p>
<pre class=""lang-java prettyprint-override""><code>str.chars()
        .mapToObj(c -&gt; (char) c)
        .filter(Predicate.not(Character::isAlphabetic))
        .toList();
</code></pre>
<p>However this throws the following error message:</p>
<blockquote>
<p>no instance(s) of type variable(s) exist so that Character conforms to
Integer inference variable T has incompatible bounds: equality
constraints: Integer lower bounds: Character</p>
</blockquote>
<p>I didn't fully understand the error message, but I figured that it is caused by <code>Character#isAlphabetic</code> taking in <code>int codePoint</code> as a parameter instead of a char because replacing <code>Character::isAlphabetic</code> with <code>Character::isUpperCase</code> (for example) which takes in a <code>char</code> works fine.</p>
<p>Now, if I write:</p>
<pre class=""lang-java prettyprint-override""><code>str.chars()
        .mapToObj(c -&gt; (char) c)
        .filter(c -&gt; !Character.isAlphabetic(c))
        .toList();
</code></pre>
<p>it compiles just fine, and I'm not even that surprised/confused. However, if I write</p>
<pre class=""lang-java prettyprint-override""><code>str.chars()
        .mapToObj(c -&gt; (char) c)
        .filter(Predicate.not(c -&gt; Character.isAlphabetic(c)))
        .toList();
</code></pre>
<p>it also compiles just fine, which definitely confuses me because isn't <code>Character::isAlphabetic</code> basically equivalent to <code>c -&gt; Character.isAlphabetic(c)</code>? Well, apparently it isn't in all cases (because AFAIK it is in most)</p>
<p>So my 2 questions are:</p>
<ol>
<li>What exactly is this error message saying? I do understand it to an extent but definitely not completely</li>
<li>Why does the first version not work but the third does?</li>
</ol>
","71648220","<p>The difference between <code>Character::isAlphabetic</code> and <code>c -&gt; Character.isAlphabetic(c)</code> is that since <code>Character.isAlphabetic(int)</code> is not an overloaded method, the former is an <a href=""https://docs.oracle.com/javase/specs/jls/se17/html/jls-15.html#jls-15.13.1-400"" rel=""noreferrer"">exact method reference</a> whereas the latter is an <a href=""https://docs.oracle.com/javase/specs/jls/se17/html/jls-15.html#jls-15.27.1-210"" rel=""noreferrer"">implicitly typed lambda expression</a>.</p>
<p>We can show that an inexact method reference is accepted the same way as an implicitly typed lambda expression:</p>
<pre class=""lang-java prettyprint-override""><code>class SO71643702 {
    public static void main(String[] args) {
        String str = &quot;123abc456def&quot;;
        List&lt;Character&gt; l = str.chars()
            .mapToObj(c -&gt; (char) c)
            .filter(Predicate.not(SO71643702::isAlphabetic))
            .toList();
        System.out.println(l);
    }

    public static boolean isAlphabetic(int codePoint) {
        return Character.isAlphabetic(codePoint);
    }

    public static boolean isAlphabetic(Thread t) {
      throw new AssertionError(&quot;compiler should never choose this method&quot;);
    }
}
</code></pre>
<p>This is accepted by the compiler.</p>
<p>However, this doesn’t imply that this behavior is correct. Exact method references may help in overload selection where inexact do not, as specified by <a href=""https://docs.oracle.com/javase/specs/jls/se17/html/jls-15.html#jls-15.12.2"" rel=""noreferrer"" title=""15.12.2. Compile-Time Step 2: Determine Method Signature"">§15.12.2.</a>:</p>
<blockquote>
<p>Certain argument expressions that contain implicitly typed lambda expressions (<a href=""https://docs.oracle.com/javase/specs/jls/se17/html/jls-15.html#jls-15.27.1"" rel=""noreferrer"">§15.27.1</a>) or inexact method references (<a href=""https://docs.oracle.com/javase/specs/jls/se17/html/jls-15.html#jls-15.13.1"" rel=""noreferrer"">§15.13.1</a>) are ignored by the applicability tests, because their meaning cannot be determined until the invocation's target type is selected.</p>
</blockquote>
<p>In contrast, when it comes to the <a href=""https://docs.oracle.com/javase/specs/jls/se17/html/jls-15.html#jls-15.13.2"" rel=""noreferrer"">15.13.2. Type of a Method Reference</a>, there is no difference between exact and inexact method references mentioned. Only the target type determines the actual type of the method reference (assuming that the target type is a functional interface and the method reference is congruent).</p>
<p>Consequently, the following works without problems:</p>
<pre class=""lang-java prettyprint-override""><code>class SO71643702 {
    public static void main(String[] args) {
        String str = &quot;123abc456def&quot;;
        List&lt;Character&gt; l = str.chars()
            .mapToObj(c -&gt; (char) c)
            .filter(Character::isAlphabetic)
            .toList();
        System.out.println(l);
    }
}
</code></pre>
<p><sup>Of course, that’s not the original program logic</sup></p>
<p>Here, <code>Character::isAlphabetic</code> still is an exact method reference, but it’s congruent with the target type <code>Predicate&lt;Character&gt;</code>, so it works not different to</p>
<pre class=""lang-java prettyprint-override""><code>Predicate&lt;Character&gt; p = Character::isAlphabetic;
</code></pre>
<p>or</p>
<pre class=""lang-java prettyprint-override""><code>Predicate&lt;Character&gt; p = (Character c) -&gt; Character.isAlphabetic(c);
</code></pre>
<p>It’s not as if the insertion of a generic method into nesting of method invocations will stop the type inference from working in general. As discussed in <a href=""https://stackoverflow.com/a/53516501/2711488"">this answer</a> to a similar fragile type inference issue, we can insert a generic method not contributing to the resulting type without problems:</p>
<pre class=""lang-java prettyprint-override""><code>class SO71643702 {
    static &lt;X&gt; X dummy(X x) { return x; }

    public static void main(String[] args) {
        String str = &quot;123abc456def&quot;;
        List&lt;Character&gt; l = str.chars()
            .mapToObj(c -&gt; (char) c)
            .filter(dummy(Character::isAlphabetic))
            .toList();
        System.out.println(l);
    }
}
</code></pre>
<p>and even “fix” the problem of the original code by inserting the method</p>
<pre class=""lang-java prettyprint-override""><code>class SO71643702 {
    static &lt;X&gt; X dummy(X x) { return x; }

    public static void main(String[] args) {
        String str = &quot;123abc456def&quot;;
        List&lt;Character&gt; l = str.chars()
            .mapToObj(c -&gt; (char) c)
            .filter(Predicate.not(dummy(Character::isAlphabetic)))
            .toList();
        System.out.println(l);
    }
}
</code></pre>
<p>It’s important that there is no subtype relationship between <code>Predicate&lt;Character&gt;</code> and <code>Predicate&lt;Integer&gt;</code>, so the <code>dummy</code> method can not translate between them. It’s just returning exactly the same type as the compiler inferred for its argument.</p>
<p>I consider the compiler error a bug, but as I said at the other answer, even if the specification backs up this behavior, it should get corrected, in my opinion.</p>
<hr />
<p>As a side note, for this specific example, I’d use</p>
<pre class=""lang-java prettyprint-override""><code>var l = str.chars()
    .filter(c -&gt; !Character.isAlphabetic(c))
    .mapToObj(c -&gt; (char)c)
    .toList();
</code></pre>
<p>anyway, as this way, you’re not boxing <code>int</code> values to <code>Character</code> objects, just to unbox them to <code>int</code> again in the predicate, but rather, only box values after passing the filter.</p>
"
"72300024","1","Does the use of Spring Webflux's WebClient in a blocking application design cause a larger use of resources than RestTemplate","<p>I am working on several spring-boot applications which have the traditional pattern of thread-per-request. We are using Spring-boot-webflux to acquire WebClient to perform our RESTful integration between the applications. Hence our application design requires that we block the publisher right after receiving a response.</p>
<p>Recently, we've been discussing whether we are unnecessarily spending resources using a reactive module in our otherwise blocking application design. As I've understood it, WebClient makes use of the event loop by assigning a worker thread to perform the reactive actions in the event loop. So using webclient with <code>.block()</code> would sleep the original thread while assigning another thread to perform the http-request. Compared to the alternative RestTemplate, it seems like WebClient would spend additional resources by using the event loop.</p>
<p>Is it correct that partially introducing spring-webflux in this way leads to additional spent resources while not yielding any positive contribution to performance, neither single threaded and concurrent? We are not expecting to ever upgrade our current stack to be fully reactive, so the argument of gradually upgrading does not apply.</p>
","72311944","<p>In <a href=""https://www.youtube.com/watch?v=IZ2SoXUiS7M"" rel=""noreferrer"">this presentation</a> <code>Rossen Stoyanchev</code> from the <code>Spring</code> team explains some of these points.</p>
<p><code>WebClient</code> will use a limited number of threads - 2 per core for a total of <code>12 threads</code> on my local machine - to handle all requests and their responses in the application. So if your application receives <code>100 requests</code> and makes one request to an external server for each, <code>WebClient</code> will handle all of those using those threads in a <code>non-blocking</code> / <code>asynchronous</code> manner.</p>
<p>Of course, as you mention, once you call <code>block</code> your original thread will block, so it would be 100 threads + 12 threads for a total of <code>112 threads</code> to handle those requests. But keep in mind that <strong>these 12 threads do not grow in size as you make more requests, and that they don't do I/O heavy lifting</strong>, so it's not like <code>WebClient</code> is spawning threads to actually perform the requests or keeping them busy on a thread-per-request fashion.</p>
<p>I'm not sure if when the thread is under <code>block</code> it behaves the same as when making a blocking call through <code>RestTemplate</code> - it seems to me that in the former the thread should be <code>inactive</code> waiting for the <code>NIO</code> call to complete, while in the later the thread should be handling <code>I/O</code> work, so maybe there's a difference there.</p>
<p>It gets interesting if you begin using the <code>reactor</code> goodies, for example handling requests that depend on one another, or many requests in parallel. Then <code>WebClient</code> definitely gets an edge as it'll perform all concurrent actions using the same 12 threads, instead of using a thread per request.</p>
<p>As an example, consider this application:</p>
<pre class=""lang-java prettyprint-override""><code>@SpringBootApplication
public class SO72300024 {

    private static final Logger logger = LoggerFactory.getLogger(SO72300024.class);

    public static void main(String[] args) {
        SpringApplication.run(SO72300024.class, args);
    }

    @RestController
    @RequestMapping(&quot;/blocking&quot;)
    static class BlockingController {

        @GetMapping(&quot;/{id}&quot;)
        String blockingEndpoint(@PathVariable String id) throws Exception {
            logger.info(&quot;Got request for {}&quot;, id);
            Thread.sleep(1000);
            return &quot;This is the response for &quot; + id;
        }

        @GetMapping(&quot;/{id}/nested&quot;)
        String nestedBlockingEndpoint(@PathVariable String id) throws Exception {
            logger.info(&quot;Got nested request for {}&quot;, id);
            Thread.sleep(1000);
            return &quot;This is the nested response for &quot; + id;
        }

    }

    @Bean
    ApplicationRunner run() {
        return args -&gt; {
            Flux.just(callApi(), callApi(), callApi())
                    .flatMap(responseMono -&gt; responseMono)
                    .collectList()
                    .block()
                    .stream()
                    .flatMap(Collection::stream)
                    .forEach(logger::info);
            logger.info(&quot;Finished&quot;);
        };
    }

    private Mono&lt;List&lt;String&gt;&gt; callApi() {
        WebClient webClient = WebClient.create(&quot;http://localhost:8080&quot;);
        logger.info(&quot;Starting&quot;);
        return Flux.range(1, 10).flatMap(i -&gt;
                        webClient
                                .get().uri(&quot;/blocking/{id}&quot;, i)
                                .retrieve()
                                .bodyToMono(String.class)
                                .doOnNext(resp -&gt; logger.info(&quot;Received response {} - {}&quot;, I, resp))
                                .flatMap(resp -&gt; webClient.get().uri(&quot;/blocking/{id}/nested&quot;, i)
                                        .retrieve()
                                        .bodyToMono(String.class)
                                        .doOnNext(nestedResp -&gt; logger.info(&quot;Received nested response {} - {}&quot;, I, nestedResp))))
                .collectList();
    }
}
</code></pre>
<p>If you run this app, you can see that all 30 requests are handled immediately in parallel by the same 12 (in my computer) threads. <code>Neat!</code> If you think you can benefit from such kind of parallelism in your logic, it's probably worth it giving <code>WebClient</code> a shot.</p>
<p>If not, while I wouldn't actually worry about the &quot;extra resource spending&quot; given the reasons above, I don't think it would be worth it adding the whole <code>reactor/webflux</code> dependency for this - besides the extra baggage, in day to day operations it should be a lot simpler to reason about and debug <code>RestTemplate</code> and the <code>thread-per-request</code> model.</p>
<p>Of course, as others have mentioned, you ought to run load tests to have proper metrics.</p>
"
"71884469","1","Unable to find /oauth/device/code Auth0 Java API","<p>Is there an API to fetch the device code via Auth0 Java API, we use the following snippet in Go, the question is if there is a standard API or should we make a HTTP request call</p>
<pre class=""lang-go prettyprint-override""><code>url := &quot;https://dev-foo.us.auth0.com/oauth/device/code&quot;

payload := strings.NewReader(&quot;client_id=RO6N7mr&amp;scope=openid&amp;audience=https://dev-foo.us.auth0.com/api/v2/&quot;)

req, _ := http.NewRequest(&quot;POST&quot;, url, payload)
</code></pre>
","71909729","<p>The <a href=""https://auth0.com/docs/api/authentication#get-device-code"" rel=""nofollow noreferrer"">documentation</a> tells you that you need to send a POST request like the following:</p>
<blockquote>
<p>POST https://YOUR_DOMAIN/oauth/device/code</p>
</blockquote>
<blockquote>
<p>Content-Type:</p>
</blockquote>
<blockquote>
<p>application/x-www-form-urlencoded</p>
<p>client_id=YOUR_CLIENT_ID&amp;scope=SCOPE&amp;audience=API_IDENTIFIER</p>
</blockquote>
<p>and the response would look like</p>
<pre><code>HTTP/1.1 200 OK
Content-Type: application/json
{
  &quot;device_code&quot;:&quot;GmRh...k9eS&quot;,
  &quot;user_code&quot;:&quot;WDJB-MJHT&quot;,
  &quot;verification_uri&quot;:&quot;https://YOUR_DOMAIN/device&quot;,
  &quot;verification_uri_complete&quot;:&quot;https://YOUR_DOMAIN/device?user_code=WDJB-MJHT&quot;,
  &quot;expires_in&quot;:900, //in seconds
  &quot;interval&quot;:5
}
</code></pre>
<p><a href=""https://i.stack.imgur.com/J11aI.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/J11aI.png"" alt=""enter image description here"" /></a></p>
"
"72401149","1","limit set by 'FEATURE_SECURE_PROCESSING'","<p>I used my own xlst transformator in java (XSLTTransformator) but transformation is very big and I have got error:</p>
<pre><code>Caused by: javax.xml.transform.TransformerConfigurationException: JAXP0801002: the compiler encountered an XPath expression containing '107' operators that exceeds the '100' limit set by 'FEATURE_SECURE_PROCESSING'.
                at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl.newTemplates(TransformerFactoryImpl.java:990)
                at com.aspp.dms.ruleengine.transformation.TemplatesCache.retrieveUncached(TemplatesCache.java:44)
                at com.aspp.dms.ruleengine.transformation.TemplatesCache.retrieveUncached(TemplatesCache.java:21)
                at com.gratex.java.util.SoftValueCache.get(SoftValueCache.java:41)
                at com.aspp.dms.ruleengine.transformation.XSLTTransformator.transform(XSLTTransformator.java:73)
</code></pre>
<p>Can you please help me find correct argument for java to solve my problem? Something like -DxpathOperatorsLimit=150</p>
<p>thank you</p>
","72833393","<p>That behaviour seems to come from new FEATURE_SECURE_PROCESSING, which Oracle introduced in a recent &quot;update&quot; of their Java. See: <a href=""https://www.oracle.com/java/technologies/javase/11-0-15-relnotes.html"" rel=""noreferrer"">https://www.oracle.com/java/technologies/javase/11-0-15-relnotes.html</a></p>
<p>It is 3 parameters they introduced:</p>
<ol>
<li>jdk.xml.xpathExprGrpLimit Description: Limits the number of groups
an XPath expression can contain. Default 10.</li>
<li>jdk.xml.xpathExprOpLimit Description: Limits the number of operators
an XPath expression can contain. Default 100.</li>
<li>jdk.xml.xpathTotalOpLimit Description: Limits the total number of
XPath operators in an XSL Stylesheet. Default 10000.</li>
</ol>
<p>Your problem is on #2 (JAXP0801002, default 100).
We got a very similar issue on #3 (JAXP0801003, default 10.000), with this message (quoted, so google will find it):</p>
<pre><code>ERROR:  'JAXP0801003: the compiler encountered XPath expressions with an accumulated '10.002' operators that exceeds the '10.000' limit set by 'FEATURE_SECURE_PROCESSING'.'
FATAL ERROR:  'JAXP0801003: the compiler encountered XPath expressions with an accumulated '10.002' operators that exceeds the '10.000' limit set by 'FEATURE_SECURE_PROCESSING'.'
</code></pre>
<p>We wasted 2 days in getting away of that sh*t.</p>
<p>We added some parameters to the java call:</p>
<pre><code>    java -Djdk.xml.xpathExprGrpLimit=0 -Djdk.xml.xpathExprOpLimit=0 -Djdk.xml.xpathTotalOpLimit=0 -Xmx2g -Xms512m -XX:-UseGCOverheadLimit ....

</code></pre>
<p>Parameters 1,2,3 to to solve the issue. Values &quot;0&quot; set the limits to &quot;off&quot;. As XPath can now get huge, it might be advisable to set the heap and stack size and change behaviour of the garbage collection (parameters 4-6).</p>
<p>I hope it will help you too. Have fun!</p>
"
"72388741","1","Android manifest POST_NOTIFICATIONS missing import","<p>Trying to implement the notification permission for android 13 or &quot;Tiramisu&quot; but failed to get the import for that permission.</p>
<p>Currently:
targeted SDK version is 32
compile SDK version is 32</p>
<p>I've declared it also in manifiest as below:</p>
<pre><code> &lt;uses-permission android:name=&quot;android.permission.POST_NOTIFICATIONS&quot;
</code></pre>
<p>import i'm using:</p>
<pre><code>import android.Manifest
</code></pre>
<ul>
<li>But even not getting import in my fragment.</li>
</ul>
<p><a href=""https://i.stack.imgur.com/ozyhp.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/ozyhp.png"" alt=""enter image description here"" /></a></p>
","72390497","<pre><code>     android {
     namespace 'com.example.myapplication'
    compileSdkVersion 33//update this

     defaultConfig {
        applicationId &quot;com.example.myapplication&quot;
        minSdk 23
        targetSdkVersion 33//update this
        versionCode 1
        versionName &quot;1.0&quot;
        
        testInstrumentationRunner &quot;androidx.test.runner.AndroidJUnitRunner&quot;
    }
</code></pre>
"
"72025894","1","List differences: DTO, VO, Entity, Domain, Model","<p>Now I study about the Spring Boot that with JAVA platform.</p>
<p>A problem I faced is how can you tell the difference between DTO, VO, Entity, Domain, and Model.</p>
<p>Honestly it all look too similar to tell the difference.</p>
<p>I already checked some stackoverflow answers about &quot;Difference between DTO and VO&quot; and something like that.</p>
<p>However, I am still wondering how do they different each other in terms of developer with Spring Boot.</p>
","72027443","<ul>
<li>Entity - is a class with an ID. In the case of relational DB it's usually a class that's mapped to a DB table with some primary key.</li>
<li>DTO (Data Transfer Object) - is a class that maps well on what you're sending over the network. E.g. if you exchange JSON or XML data, it usually has fields just enough to fill those requests/responses. Note, that it may have fewer or more fields than Entity.</li>
<li>VO (Value Object) is a class-value. E.g. you could create class like Grams or Money - it will contain some primitives (e.g. some <code>double</code> value) and it's possible to compare Value Objects using these primitives. They don't have a database ID. They help replacing primitives with more object-oriented classes related to our particular domain.</li>
<li>Domain Model contains all Entities and Value Objects. And some other types of classes depending on the classification you use.</li>
</ul>
<p>In order to get acquainted with these you should read:</p>
<ul>
<li>Enterprise Application Patterns by Fowler. Mentions Value Object and Domain Model.</li>
<li>Domain Driven Design by Eric Evans. Mentions Entity, Value Object and Domain Model.</li>
<li>And maybe get acquainted with Java EE design patterns. They mention DTO. But these are pretty badly written articles (if they are still even available on the internet). Confusingly, they also had Value Object which was defined very similarly to DTO, but no one uses that definition of VO.</li>
</ul>
"
"71810594","1","Spring Boot 2.6.4 -> 2.6.6 : strange NullPointerException within Logback when logging a mock Exception","<p>while upgrading from Spring Boot 2.6.4 to 2.6.6 , one of my tests (written in Kotlin), fails :</p>
<pre class=""lang-java prettyprint-override""><code>    @Test
    fun shouldLogProperMessageIfNotAbleToHitAPI() {

        val configValidator = ConfigValidator(GitHubCrawlerProperties(SourceControlConfig(url = &quot;someIncorrectURL&quot;,organizationName=&quot;someOrg&quot;)),mockRemoteSourceControl)

        `when`(mockRemoteSourceControl.validateRemoteConfig(&quot;someOrg&quot;)).thenThrow(NoReachableRepositories(&quot;problem !&quot;,mock(Exception::class.java)))

        val validationErrors=configValidator.getValidationErrors()

        assertThat(validationErrors).hasSize(1);

    }

</code></pre>
<p>the build passes with Spring Boot 2.6.4. It works in Spring Boot 2.6.6 when I run the test individually in my IDE, but fails during the maven build.</p>
<p>the stacktrace was not showing by default, but after surrounding the call by a try/catch, I am able to get it, and it points to Logback :</p>
<pre><code>java.lang.NullPointerException: null
        at ch.qos.logback.classic.spi.ThrowableProxy.&lt;init&gt;(ThrowableProxy.java:99)
        at ch.qos.logback.classic.spi.ThrowableProxy.&lt;init&gt;(ThrowableProxy.java:89)
        at ch.qos.logback.classic.spi.ThrowableProxy.&lt;init&gt;(ThrowableProxy.java:62)
        at ch.qos.logback.classic.spi.LoggingEvent.&lt;init&gt;(LoggingEvent.java:119)
        at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:419)
        at ch.qos.logback.classic.Logger.filterAndLog_0_Or3Plus(Logger.java:383)
        at ch.qos.logback.classic.Logger.error(Logger.java:538)
        at com.societegenerale.githubcrawler.ConfigValidator.getValidationErrors(ConfigValidator.kt:48)
</code></pre>
<p>Logback version doesn't seem to change, I still get v 1.2.11 .</p>
<p>Looking at Logback source code, in ThrowableProxy :</p>
<pre class=""lang-java prettyprint-override""><code>        if (GET_SUPPRESSED_METHOD != null) {
            // this will only execute on Java 7
            Throwable[] throwableSuppressed = extractSupressedThrowables(throwable);
            
            if (throwableSuppressed.length &gt; 0) {
                List&lt;ThrowableProxy&gt; suppressedList = new ArrayList&lt;ThrowableProxy&gt;(throwableSuppressed.length);
                for (Throwable sup : throwableSuppressed) {
...
</code></pre>
<p>note : I build with Java 11, so the comment saying in Logback source code that <code>this will only execute on Java 7</code> , seems wrong.</p>
<p>It seems that <code>throwableSuppressed</code> is null, and I get the NPE when <code>throwableSuppressed.size</code> is called.</p>
<p>The test passes if instead of using a mock in <code>NoReachableRepositories(&quot;problem !&quot;,mock(Exception::class.java))</code> , I use <code>NoReachableRepositories(&quot;problem !&quot;,Exception())</code></p>
<p>I realize it's probably better to use a real Exception rather than a mock, so my problem is solved in a way (after spending 2 hours on this..).</p>
<p>However, I am curious : what could cause this issue after upgrading to Spring Boot 2.6.6 which should be a a minor change ?</p>
","71823439","<p>This issue was introduced in <code>logback:1.2.11</code> by this <a href=""https://github.com/qos-ch/logback/commit/398aa4bd8f2bc0bb7f1465e8f7aca418c4464c15#diff-91f381102ba772e2944bcc4d01e615b39d0f366a91b9dddd05b29d736cbea9c1"" rel=""nofollow noreferrer"">commit</a>. It is tracked in this Jira <a href=""https://jira.qos.ch/browse/LOGBACK-1623"" rel=""nofollow noreferrer"">ticket</a>.</p>
<p><code>Logback</code> was upgraded to 1.2.11 from spring boot 2.6.5, you can refer to this <a href=""https://github.com/spring-projects/spring-boot/releases/tag/v2.6.5"" rel=""nofollow noreferrer"">changelog</a>. So you would have encountered this same error if you upgraded to 2.6.5.</p>
<p>What we can do now is override the version of <code>logback</code> to 1.2.10 by adding this line in <code>build.gradle</code> file.</p>
<pre class=""lang-kotlin prettyprint-override""><code>ext[&quot;logback.version&quot;] = &quot;1.2.10&quot;
</code></pre>
<p>If you're using Maven <code>dependencyManagement</code> section for Spring Boot dependencies instead of the starter parent then you can try this:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;!-- ... --&gt;
&lt;dependencyManagement&gt;
  &lt;dependencies&gt;
    &lt;!-- temp. override logback version for https://jira.qos.ch/browse/LOGBACK-1623--&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;
      &lt;artifactId&gt;logback-access&lt;/artifactId&gt;
      &lt;version&gt;1.2.10&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;
      &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;
      &lt;version&gt;1.2.10&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;
      &lt;artifactId&gt;logback-core&lt;/artifactId&gt;
      &lt;version&gt;1.2.10&lt;/version&gt;
    &lt;/dependency&gt;

    &lt;dependency&gt;
      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
      &lt;artifactId&gt;spring-boot-dependencies&lt;/artifactId&gt;
      &lt;version&gt;2.7.5&lt;/version&gt;
      &lt;type&gt;pom&lt;/type&gt;
      &lt;scope&gt;import&lt;/scope&gt;
    &lt;/dependency&gt;
&lt;/dependencyManagement&gt;
&lt;!-- ... --&gt;
</code></pre>
<p><strong>Update</strong>: Spring Boot 2 latest version (2.7.5) is still using <code>logback:1.2.11</code>.</p>
"
"72598626","1","Official recommendation / coding style guide on using multiple @throws tags for the same exception in JavaDoc","<p>I just recently found out that <a href=""https://stackoverflow.com/questions/9229991/can-i-use-multiple-throws-tags-for-the-same-exception-in-javadoc"">one can use multiple <code>@throws</code> tags for the same exception in Javadoc</a>.</p>
<p>One of my students used it to document one of his methods in <a href=""https://en.wikipedia.org/wiki/Connect_Four"" rel=""noreferrer"">Connect Four</a>:</p>
<pre><code>/*
 * ...
 * @throws IllegalArgumentException if the number of rows or columns is invalid 
 * @throws IllegalArgumentException if one of the players has {@link Stone#None} as stone
 * @throws IllegalStateException if both players use the same stone color
 */
public void doSomething(...) { ... }
</code></pre>
<p>Now my (and his) question: Is there an official style guide or a general recommendation on whether to use a single <code>@throws</code> tag or &quot;is it fine&quot; to use multiple ones per exception type?</p>
","72600530","<p>There is an Oracle style guide for javadocs:</p>
<ul>
<li><a href=""https://www.oracle.com/au/technical-resources/articles/java/javadoc-tool.html"" rel=""nofollow noreferrer"">How to Write Doc Comments for the Javadoc Tool</a>.</li>
</ul>
<p>Whether that counts as &quot;official&quot; depends on your point of view.  Either way, I cannot see any mention in that document of multiple tags for the same exception.</p>
<p>However, according to the following Q&amp;A, multiple <code>@throws</code> tags for the same exception is <em>supported</em> by the standard Javadoc tool chain; i.e. each of them will result in an entry in the generated HTML.</p>
<ul>
<li><a href=""https://stackoverflow.com/questions/9229991/"">Can I use multiple @throws tags for the same exception in Javadoc?</a></li>
</ul>
<p><sub>(My personal opinion is the javadocs will be more readable if you don't do this, but that is <em>just my opinion</em>.)</sub></p>
"
"73163378","1","""Suspicious assignment in copy constructor"" for byte[] - What is suspicious?","<p>I have a copy constructor for class, but Android Studio code inspection throws a warning I don't understand:</p>
<blockquote>
<p>Suspicious assignment in copy constructor of
'java.util.Arrays.copyOf(other.value, other.value.length)' to field
value</p>
</blockquote>
<pre><code>public class CpuVariable extends BaseIdentifier {
    private int memoryType;
    private byte[] value;

    public CpuVariable(@NonNull CpuVariable other) {
        super(other);
        this.memoryType = other.memoryType;
        if (other.value != null) {
            this.value = java.util.Arrays.copyOf(other.value, other.value.length);
        }
    }
}
</code></pre>
<p>Changing code to</p>
<pre><code>this.value = other.value
</code></pre>
<p>would remove the warning, but this is not an option since I need to create a deep copy or a clone for the field.</p>
<p>Am I coding something wrong or is it safe to ignore or suppress the warning?</p>
","73163884","<p>It is clearly a false positive.  There is nothing actually wrong with your constructor.</p>
<p>I think that the code that produced this warning is based on <a href=""https://github.com/jkovacs/CopyConstructorPlugin/blob/master/src/de/umass/idea/copyConstructor/inspection/IncompleteCopyConstructorInspection.java"" rel=""nofollow noreferrer"">this code</a>.  Note that this is not the real Android Studio code, but there are clues to suggest that Android Studio may have &quot;borrowed&quot; it via some path.</p>
<p>If you look at the <code>constructorAssignsAllFields</code> method (line 63), the intent of the code seems to be to look for code bugs where a copy constructor is copying the wrong fields; e.g. something like this:</p>
<pre><code>MyClass(MyClass other) {
   this.x = other.x;
   this.y = other.x; // Ooops
}
</code></pre>
<p>But the method is not correctly dealing with the case where the copy constructor is transforming one of the fields.</p>
<p>Looking at the code, you need to write <code>this.value = </code> in a way that makes the checker not realize that it is assigning to a field.  For example, if you used a setter method something like this:</p>
<pre><code>public CpuVariable(@NonNull CpuVariable other) {
    super(other);
    this.memoryType = other.memoryType;
    this.value = other.value;  // Dummy
    if (other.value != null) {
        this.setValue(java.util.Arrays.copyOf(other.value, other.value.length));
    }
}
</code></pre>
"
"72089617","1","How to write a method that takes in a List of Integer, Float, Double and calculate the average?","<p>I am trying to write a method that takes in a list of numeric values - eg <code>List&lt;Integer&gt;</code>, <code>List&lt;Float&gt;</code>, <code>List&lt;Double&gt;</code> etc - and give me the average.</p>
<pre><code>public double getAverage(List&lt;? extends Number&gt; stats) {
    double sum = 0.00;
    if(!stats.isEmpty()) {
        // sum = stats.stream()
        //            .reduce(0, (a, b) -&gt; a + b);
        // return sum / stats.size();
    }
}
</code></pre>
<p>These are the errors I get:</p>
<blockquote>
<p>Operator '+' cannot be applied to 'capture&lt;? extends java.lang.Number&gt;', 'capture&lt;? extends java.lang.Number&gt;'</p>
</blockquote>
","72089958","<blockquote>
<p><strong>OptionalDouble average()</strong></p>
<p>Where, OptionalDouble is a container object  which may or may not
contain a double value.</p>
</blockquote>
<pre><code>  public class Test {

    public static OptionalDouble getAverage(List&lt;? extends Number&gt; stats) {
        return stats.
                stream().
                 mapToDouble(d -&gt; d.doubleValue()).
                    average();
            
    }
    
    public static void main(String[] args) throws IOException {

        List&lt;Integer&gt; list = Arrays.asList(1, 4, 5, 67, 3);
        if(getAverage(list).isPresent());
        {
            Double average = getAverage(list).getAsDouble();
            System.out.println(average);
        }
        
    }
}
</code></pre>
<p>or</p>
<p>Using Goolge <a href=""https://mvnrepository.com/artifact/com.google.guava/guava/31.0.1-jre"" rel=""nofollow noreferrer"">Guava</a></p>
<pre><code> Double averge = Stats.meanOf(list);

      
</code></pre>
<p>it gets syntactically simplified</p>
"
"71737495","1","Getting the oracle database host name at runtime","<p>There is a Springboot application which connects to the Oracle data. The URL for the database is configured as</p>
<pre><code>spring.datasource.url=jdbc:oracle:thin:@(DESCRIPTION=\
  (LOAD_BALANCE=OFF)(FAILOVER=ON)\
  (ADDRESS=(PROTOCOL=TCP)(HOST=domainName1.com) (PORT=1521))\
  (ADDRESS=(PROTOCOL=TCP)(HOST=domainName2.com)(PORT=1521))\
  (CONNECT_DATA=(SERVICE_NAME=xyz)))
</code></pre>
<p>This URL is configured so that when one host is down then the application connects to second database.
The URL to the database is printed in the application healthcheck as shown below</p>
<pre><code>Hello 
version    : 4.0.0
build      : 2022-03-3 
datasource :    oracle.jdbc.OracleDriver
db url     :    jdbc:oracle:thin:@(DESCRIPTION=(LOAD_BALANCE=OFF)(FAILOVER=ON)(ADDRESS=(PROTOCOL=TCP)(HOST=domainName1.com) (PORT=1521))(ADDRESS=(PROTOCOL=TCP)(HOST=domainName2.com)(PORT=1521))(CONNECT_DATA=(SERVICE_NAME=xyz)))
db status  :    ok 
</code></pre>
<p>My question is how can I get just the host name of the database being used, that means how can I get the host currently being used (domainName1 or domainName2) by the application and display it on healthcheck? For example as shown below.</p>
<pre><code>Hello 
version    : 4.0.0
build      : 2022-03-3
datasource :    oracle.jdbc.OracleDriver
db url     :    jdbc:oracle:thin:@domainName1.com: 1521/coldv1
db status  :    ok (LVZ count = 379)
</code></pre>
<p>The java code I used for this healthcheck is as shown below.</p>
<pre><code>@GetMapping(path = &quot;/healthcheck&quot;,
            produces = MediaType.APPLICATION_JSON_VALUE
    )
    public String getServiceStatus(){
        String[] activeProfiles = environment.getActiveProfiles();
        final BeanWrapper accessor = PropertyAccessorFactory.forBeanPropertyAccess(dataSource);
        final String driverClassName = String.valueOf(accessor.getPropertyValue(&quot;driverClassName&quot;));
        String url = null;

        if(activeProfiles[1].equals(&quot;external_tomcat&quot;)) {
            url = String.valueOf(accessor.getPropertyValue(&quot;url&quot;));
        }else{
            try {
                String[] dataSourceProperties = nameService.getDataSource();
                url = dataSourceProperties[0];
            } catch (SQLException ex) {
//                throwables.printStackTrace();
                log.error(ex.getMessage(), ex);
            }
        }

        String version = buildProperties.getVersion();
        String buildTimestamp = String.valueOf(buildProperties.getTime());
        BigDecimal count = nameService.getCount(&quot;Table_name_of_database&quot;);

        StringBuilder result = new StringBuilder(&quot;Hello&quot;)
                .append(&quot;\nversion    :\t&quot;)
                .append(version)
                .append(&quot;\nbuild      :\t&quot;)
                .append(buildTimestamp)
                .append(&quot;\ndatasource :\t&quot;)
                .append(driverClassName)
                .append(&quot;\ndb url     :\t&quot;)
                .append(url)
                .append(&quot;\ndb status  :\tok  &quot;)
                .append(count.intValue())
                .append(&quot;)&quot;);
        return result.toString();
    }
</code></pre>
<h2>NameService.java</h2>
<pre><code> @Override
    public String[] getDataSource() throws SQLException {
        return getDataSourceProperties();
    }


   

    public String[] getDataSourceProperties() {
        String[] dataSourceProperties = new String[2];
        HikariDataSource dataSource = getDataSourceFromHibernateEntityManager();
        if(dataSource.getJdbcUrl() != null){
            dataSourceProperties[0] = dataSource.getJdbcUrl();
            dataSourceProperties[1] = dataSource.getDataSourceClassName();
        }
        return dataSourceProperties;
    }
</code></pre>
","71841619","<p>@Olivier and @ik_zelf both answers works for me.
And the way I implemented in spring boot application is using the following code snippet.</p>
<pre><code>public String getHostNameFromUrl() {
        String sql = &quot;SELECT host_name FROM v$instance&quot;;
//        String sql = &quot;SELECT sys_context('USERENV','SERVER_HOST') server_host FROM dual&quot;; this also works
        Query query = entityManager.createNativeQuery(sql);
        return query.getSingleResult().toString();
}
</code></pre>
<p>and later in the controller I call this method to display in the healthcheck.</p>
"
"71737901","1","How to upgrade spring framework version in spring boot","<p>I am using spring-boot 2.3.3.RELEASE with the according spring-boot-starter-parent in maven.</p>
<pre><code>&lt;parent&gt;
   &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
   &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
   &lt;version&gt;2.3.3.RELEASE&lt;/version&gt;
   &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;
 &lt;/parent&gt;
</code></pre>
<p>Due to the spring4shell CVE I wanted to upgrade the spring-framework to 5.2.20.RELEASE instead of the already included 5.2.8.RELEASE. I tried overriding the <code>spring-framework.version</code> property from spring-boot-dependencies.</p>
<pre><code>    &lt;spring-framework.version&gt;5.2.20.RELEASE&lt;/spring-framework.version&gt;
</code></pre>
<p>But it did not work. I also looked up the spring-boot-starter-web-2.3.3.RELEASE.pom and it has the spring-web dependency hardcoded to 5.2.8.RELEASE.</p>
<p>Are there any other ways of upgrading the spring-framework version in spring-boot besides  adding all the new versions as dependencies to the <code>dependencyManagement</code> section?
Thx</p>
<p>Full POM:</p>
<pre><code>&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; 
  xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; 
  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 
  http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;
&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

&lt;parent&gt;
  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
  &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
  &lt;version&gt;2.3.3.RELEASE&lt;/version&gt;
  &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;
&lt;/parent&gt;

&lt;groupId&gt;group&lt;/groupId&gt;
&lt;artifactId&gt;app&lt;/artifactId&gt;
&lt;version&gt;3.1.0-SNAPSHOT&lt;/version&gt;
&lt;packaging&gt;war&lt;/packaging&gt;

&lt;properties&gt;
  &lt;flyway.version&gt;4.1.2&lt;/flyway.version&gt;
  &lt;groovy.version&gt;2.4.20&lt;/groovy.version&gt;
  &lt;spring-framework.version&gt;5.2.20.RELEASE&lt;/spring-framework.version&gt;
  &lt;spring-cloud.version&gt;Hoxton.SR7&lt;/spring-cloud.version&gt;
  &lt;h2.version&gt;1.4.196&lt;/h2.version&gt;
&lt;/properties&gt;

&lt;dependencyManagement&gt;
&lt;dependencies&gt;

  &lt;dependency&gt;
    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
    &lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;
    &lt;version&gt;${spring-cloud.version}&lt;/version&gt;
    &lt;type&gt;pom&lt;/type&gt;
    &lt;scope&gt;import&lt;/scope&gt;
  &lt;/dependency&gt;

&lt;/dependencies&gt;
&lt;/dependencyManagement&gt;

&lt;dependencies&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
  &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
  &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
  &lt;artifactId&gt;spring-boot-starter-data-rest&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
  &lt;artifactId&gt;spring-boot-starter-webflux&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
  &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
  &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;
  &lt;scope&gt;test&lt;/scope&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
  &lt;artifactId&gt;spring-boot-starter-tomcat&lt;/artifactId&gt;
  &lt;scope&gt;provided&lt;/scope&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
  &lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt;
  &lt;optional&gt;true&lt;/optional&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.mockito&lt;/groupId&gt;
  &lt;artifactId&gt;mockito-core&lt;/artifactId&gt;
&lt;/dependency&gt;


&lt;dependency&gt;
  &lt;groupId&gt;org.codehaus.groovy&lt;/groupId&gt;
  &lt;artifactId&gt;groovy-all&lt;/artifactId&gt;
  &lt;version&gt;${groovy.version}&lt;/version&gt;
&lt;/dependency&gt;

&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-xml --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;com.fasterxml.jackson.dataformat&lt;/groupId&gt;
  &lt;artifactId&gt;jackson-dataformat-xml&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;/dependencies&gt;
&lt;build&gt;
&lt;finalName&gt;app&lt;/finalName&gt;
&lt;resources&gt;
  &lt;resource&gt;
    &lt;directory&gt;src/main/resources&lt;/directory&gt;
    &lt;filtering&gt;true&lt;/filtering&gt;
    &lt;includes&gt;
      &lt;include&gt;**/version.json&lt;/include&gt;
      &lt;include&gt;**/**.properties&lt;/include&gt;
    &lt;/includes&gt;
  &lt;/resource&gt;

  &lt;resource&gt;
    &lt;directory&gt;src/main/resources&lt;/directory&gt;
    &lt;filtering&gt;false&lt;/filtering&gt;
    &lt;includes&gt;
      &lt;include&gt;**/*.*&lt;/include&gt;
    &lt;/includes&gt;
    &lt;excludes&gt;
      &lt;exclude&gt;**/version.json&lt;/exclude&gt;
      &lt;exclude&gt;**/**.properties&lt;/exclude&gt;
    &lt;/excludes&gt;
  &lt;/resource&gt;
&lt;/resources&gt;
&lt;/build&gt;
&lt;/project&gt;
</code></pre>
<p><strong>EDIT:</strong>
This is a part of mvn dependency:tree:</p>
<pre><code>+- org.springframework.boot:spring-boot-starter-webflux:jar:2.3.3.RELEASE:compile
[INFO] |  +- org.springframework.boot:spring-boot-starter-json:jar:2.3.3.RELEASE:compile
[INFO] |  |  +- com.fasterxml.jackson.datatype:jackson-datatype-jdk8:jar:2.11.2:compile
[INFO] |  |  \- com.fasterxml.jackson.module:jackson-module-parameter-names:jar:2.11.2:compile
[INFO] |  +- org.springframework.boot:spring-boot-starter-reactor-netty:jar:2.3.3.RELEASE:compile
[INFO] |  +- org.springframework:spring-web:jar:5.2.8.RELEASE:compile
[INFO] |  +- org.springframework:spring-webflux:jar:5.2.8.RELEASE:compile
[INFO] |  \- org.synchronoss.cloud:nio-multipart-parser:jar:1.1.0:compile
[INFO] |     \- org.synchronoss.cloud:nio-stream-storage:jar:1.1.3:compile
</code></pre>
<p>If you have a look at the <code>spring-boot-starter-webflux-2.3.3.RELEASE.pom</code> which includes the problematic spring-web 5.2.8.RELEASE you will find that the spring version is hardcoded to 5.2.8.RELEASE. So setting the <code>spring.framework</code> property in maven will have no effect.</p>
<pre><code>    &lt;dependency&gt;
      &lt;groupId&gt;org.springframework&lt;/groupId&gt;
      &lt;artifactId&gt;spring-web&lt;/artifactId&gt;
      &lt;version&gt;5.2.8.RELEASE&lt;/version&gt;
      &lt;scope&gt;compile&lt;/scope&gt;
    &lt;/dependency&gt;
</code></pre>
<p>Output of mvn help:effective-pom:</p>
<pre><code> &lt;dependency&gt;
        &lt;groupId&gt;org.springframework&lt;/groupId&gt;  &lt;!-- org.springframework:spring-framework-bom:5.2.8.RELEASE, line 126 --&gt;
        &lt;artifactId&gt;spring-web&lt;/artifactId&gt;  &lt;!-- org.springframework:spring-framework-bom:5.2.8.RELEASE, line 127 --&gt;
        &lt;version&gt;5.2.8.RELEASE&lt;/version&gt;  &lt;!-- org.springframework:spring-framework-bom:5.2.8.RELEASE, line 128 --&gt;
      &lt;/dependency&gt;
      &lt;dependency&gt;
        &lt;groupId&gt;org.springframework&lt;/groupId&gt;  &lt;!-- org.springframework:spring-framework-bom:5.2.8.RELEASE, line 131 --&gt;
        &lt;artifactId&gt;spring-webflux&lt;/artifactId&gt;  &lt;!-- org.springframework:spring-framework-bom:5.2.8.RELEASE, line 132 --&gt;
        &lt;version&gt;5.2.8.RELEASE&lt;/version&gt;  &lt;!-- org.springframework:spring-framework-bom:5.2.8.RELEASE, line 133 --&gt;
      &lt;/dependency&gt;
</code></pre>
<p><strong>Edit after Solution by @Inthai2002:</strong>
I have additonally an internal lib pom imported in my pom.xml</p>
<pre><code>&lt;dependencyManagement&gt;
        &lt;dependencies&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;internal&lt;/groupId&gt;
                &lt;artifactId&gt;lib&lt;/artifactId&gt;
                &lt;version&gt;4.4.0&lt;/version&gt;
                &lt;scope&gt;import&lt;/scope&gt;
                &lt;type&gt;pom&lt;/type&gt;
            &lt;/dependency&gt;

            &lt;dependency&gt;
                &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
                &lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;
                &lt;version&gt;${spring-cloud.version}&lt;/version&gt;
                &lt;type&gt;pom&lt;/type&gt;
                &lt;scope&gt;import&lt;/scope&gt;
            &lt;/dependency&gt;

        &lt;/dependencies&gt;
    &lt;/dependencyManagement&gt;
</code></pre>
<p>and this internal lib has the spring-boot-dependencies pom directly imported which leads to the fact that spring-framework.version property is ignored:</p>
<pre><code>          &lt;dependency&gt;
                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
                &lt;artifactId&gt;spring-boot-dependencies&lt;/artifactId&gt;
                &lt;version&gt;2.3.3.RELEASE&lt;/version&gt;
                &lt;scope&gt;import&lt;/scope&gt;
                &lt;type&gt;pom&lt;/type&gt;
            &lt;/dependency&gt;
</code></pre>
","72173843","<p>I just tried your pom (with and without the <strong>spring-framework.version</strong> property) on a clean m2 repo. Without the property, spring-framework is 5.2.8, with the property, it is 5.2.20. Can you try on a clean repo?</p>
<p>The <strong>spring-framework-bom</strong> at version X is hardcoded to all the spring packages for version X (see <a href=""https://repo1.maven.org/maven2/org/springframework/spring-framework-bom/5.2.8.RELEASE/spring-framework-bom-5.2.8.RELEASE.pom"" rel=""noreferrer"">https://repo1.maven.org/maven2/org/springframework/spring-framework-bom/5.2.8.RELEASE/spring-framework-bom-5.2.8.RELEASE.pom</a>)</p>
<p>The <strong>spring-framework.version</strong> property is declared and used to pull the <strong>spring-framework-bom</strong> in <strong>spring-boot-dependencies</strong> and inherited by its descendants (see <a href=""https://repo1.maven.org/maven2/org/springframework/boot/spring-boot-dependencies/2.3.3.RELEASE/spring-boot-dependencies-2.3.3.RELEASE.pom"" rel=""noreferrer"">https://repo1.maven.org/maven2/org/springframework/boot/spring-boot-dependencies/2.3.3.RELEASE/spring-boot-dependencies-2.3.3.RELEASE.pom</a>).</p>
<p><strong>spring-boot-dependencies</strong> is parent of <strong>spring-boot-starter-parent</strong> (see <a href=""https://repo1.maven.org/maven2/org/springframework/boot/spring-boot-starter-parent/2.3.3.RELEASE/spring-boot-starter-parent-2.3.3.RELEASE.pom"" rel=""noreferrer"">https://repo1.maven.org/maven2/org/springframework/boot/spring-boot-starter-parent/2.3.3.RELEASE/spring-boot-starter-parent-2.3.3.RELEASE.pom</a>).</p>
<p>Because the property is inherited by descendant, you can override its value at the pom of your application. By overriding it with 5.2.20, you are swapping out spring-framework-bom 5.2.8 for 5.2.20 which effectively pull most of the spring packages for 5.2.20</p>
"
"72169818","1","Sometime video buffering very slowly in exoplayer?","<p>I don't know why, but sometimes <code>Exoplayer</code> buffers my video very slowly. My server is responding properly and the internet is also fast but sometimes <code>Exoplayer</code> buffers my video slowly for less than 1 second. And it buffering always after every 1-2 seconds on playing.</p>
<pre><code>        int MIN_BUFFER_DURATION = 3000;
        int MAX_BUFFER_DURATION = 8000;
        int MIN_PLAYBACK_RESUME_BUFFER = 1500;
        int MIN_PLAYBACK_START_BUFFER = 500;
        LoadControl loadControl = new DefaultLoadControl.Builder()
                .setAllocator(new DefaultAllocator(true, 16))
                .setBufferDurationsMs(MIN_BUFFER_DURATION,
                        MAX_BUFFER_DURATION,
                        MIN_PLAYBACK_START_BUFFER,
                        MIN_PLAYBACK_RESUME_BUFFER)
                .setTargetBufferBytes(-1)
                .setPrioritizeTimeOverSizeThresholds(true).createDefaultLoadControl();
        TrackSelector trackSelector = new DefaultTrackSelector();
        simpleExoPlayer = new ExoPlayer.Builder(this).setTrackSelector(trackSelector).setLoadControl(loadControl).build();
        binding.exoPlayerView.setPlayer(simpleExoPlayer);
        mediaItem = MediaItem.fromUri(getVid);
        simpleExoPlayer.addMediaItem(mediaItem);
        simpleExoPlayer.prepare();
        simpleExoPlayer.play();
</code></pre>
<p>I'm testing my video in my Exoplayer and <code>Chrome Browser player. </code>Chrome browser<code>player plays my video 4X faster than my app</code>Exoplayer`? And I'm playing the same video and the same time. Someone also asked this question in exoplayer git but not got a good answer or result see their question <a href=""https://github.com/google/ExoPlayer/issues/6484"" rel=""nofollow noreferrer"">exoplayer issue github</a> this same issue causing me!</p>
<p>Does anyone know why this happens? Your answer will helpful for me.</p>
","72293324","<ol>
<li><p>Make sure you are using the latest version of Exoplayer. As of this writing, that is 2.10.4.</p>
</li>
<li><p>Try increasing the buffer duration values in your LoadControl:</p>
</li>
</ol>
<pre><code>int MIN_BUFFER_DURATION = 3000; // 3 seconds 
int MAX_BUFFER_DURATION = 8000; // 8 seconds 
int MIN_PLAYBACK_RESUME_BUFFER = 1500; // 1.5 seconds 
int MIN_PLAYBACK_START_BUFFER = 500; // 0.5 seconds 
LoadControl loadControl = new DefaultLoadControl.Builder() .setAllocator(new DefaultAllocator(true, 16)) .setBufferDurationsMs(MIN_BUFFER_DURATION, MAX_BUFFER_DURATION, MIN_PLAYBACK_START_BUFFER, MIN_PLAYBACK_RESUME_BUFFER) .setTargetBufferBytes(-1) .setPrioritizeTimeOverSizeThresholds(true).createDefaultLoadControl()
</code></pre>
<ol start=""3"">
<li>Try using a different LoadControl. For example, you could use DefaultLoadControl with a smaller target buffer (e.g. 25% of the video bitrate):</li>
</ol>
<pre><code>int TARGET_BUFFER_BYTES = (int) (0.25 * videoBitrate); // 25% of the video bitrate in bytes 
LoadControl loadControl = new DefaultLoadControl(new DefaultAllocator(true, 16), TARGET_BUFFER_BYTES , DEFAULT _MIN _REBUFFER _MS , DEFAULT _MAX LOADING _MS, DEFAULT __MIN ELAPSED __MS_BEFORE STOPPING , false); 
</code></pre>
<ol start=""4"">
<li>Try using a different Allocator. For example, you could use a larger one:</li>
</ol>
<pre><code>int allocatorSize = 2 * 1024 * 1024; // 2MB 
Allocator allocator = new DefaultAllocator(true, allocatorSize); 
LoadControl loadControl = new DefaultLoadControl(allocator , DEFAULT _TARGET_BUFFER _BYTES , DEFAULT __MIN REBUFFER MS , DEFAULT MAX LOADING MS , DEFAULT MIN ELAPSED MS BEFORE STOPPING , false); 
</code></pre>
"
"73126185","1","What is overhead of Java Native Memory Tracking in ""summary"" mode?","<p>I'm wondering what is the real/typical overhead when NMT is enabled via <code>‑XX:NativeMemoryTracking=summary</code> (the full command options I'm after are <code>-XX:+UnlockDiagnosticVMOptions ‑XX:NativeMemoryTracking=summary ‑XX:+PrintNMTStatistics</code>)</p>
<p>I could not find much information anywhere - either on SO, blog posts or the official docs.
The docs say:</p>
<blockquote>
<p>Note: Enabling NMT causes a <strong>5% -10% performance overhead</strong>.</p>
</blockquote>
<p>But they do not say which mode is expected to have this performance overhead (both <em>summary</em> and <em>detail</em>?)
and what this overhead really is (CPU, memory, ...).
In <a href=""https://docs.oracle.com/en/java/javase/18/troubleshoot/diagnostic-tools.html#GUID-1F53A50E-86FF-491D-A023-8EC4F1D1AC77"" rel=""noreferrer"">Native Memory Tracking guide</a> they claim:</p>
<blockquote>
<p>Enabling NMT will result in a 5-10 percent JVM performance drop, and memory usage for NMT adds 2 machine words to all malloc memory as a malloc header. NMT memory usage is also tracked by NMT.</p>
</blockquote>
<p>But again, is this true for both <em>summary</em> and <em>detail</em> mode?</p>
<p>What I'm after is basically whether it's safe to add <code>‑XX:NativeMemoryTracking=summary</code> permanently for a production app (similar to <em>continuous</em> JFR recording) and what are potential costs.
So far, when testing this on our app, I didn't spot a difference but it's difficult to</p>
<p>Is there an authoritative source of information containing more details about this performance overhead?
Does somebody have experience with enabling this permanently for production apps?</p>
","73167790","<p>The overhead of Native Memory Tracking obviously depends on how often the application allocates native memory. Usually, this is not something too frequent in a Java application, but cases may differ. Since you've already tried and didn't notice performance difference, your application is apparently not an exception.</p>
<p>In the <code>summary</code> mode, Native Memory Tracking roughly does the following things:</p>
<ul>
<li>increases every <code>malloc</code> request in the JVM by 2 machine words (16 bytes);</li>
<li>records the allocation size and flags in these 2 words;</li>
<li>atomically increments (or decrements on <code>free</code>) the counter corresponding to the given memory type;</li>
<li>besides <code>malloc</code> and <code>free</code>, it also handles changes in virtual memory reservation and allocations of new arenas, but these are even less frequent than <code>malloc/free</code> calls.</li>
</ul>
<p>So, to me, the overhead is quite small; 5-10% is definitely a large overestimation (the numbers would make sense for <code>detail</code> mode which collects and stores stack traces, which is expensive, but <code>summary</code> doesn't do that).</p>
<p>When many threads concurrently allocate/free native memory, the update of an atomic counter could become a bottleneck, but again, that's more like an extreme case. In short, if you measured a real application and didn't notice any degradation, you're likely safe to enable NMT summary in production.</p>
"
"72596066","1","""error: package R does not exist"" in Navigation after adding Assets folder: Android Studio","<p>Since adding an Assets folder to my project I now get:</p>
<pre><code>error: package R does not exist
&quot;return new ActionOnlyNavDirections(R.id.action_newAlarmFragment_to_homeFragment);&quot;
</code></pre>
<p>which is from this auto generated code:</p>
<pre><code>import androidx.annotation.NonNull;
import androidx.navigation.ActionOnlyNavDirections;
import androidx.navigation.NavDirections;

public class SetNewAlarmFragmentDirections {
  private SetNewAlarmFragmentDirections() {
  }

  @NonNull
  public static NavDirections actionNewAlarmFragmentToHomeFragment() {
    return new ActionOnlyNavDirections(R.id.action_newAlarmFragment_to_homeFragment);
  }
}
</code></pre>
<p>I have tried cleaning and rebuilding the project and tried &quot;Invalidate caches and restart&quot; as suggested in the comments</p>
<p>Looking through other answered questions here it seems it can be an import of R. somewhere causing this, but I can't find anything..</p>
<p>The NavDirection itself comes from this fragment:</p>
<pre><code>import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.CompoundButton
import androidx.fragment.app.Fragment
import androidx.lifecycle.ViewModelProvider
import androidx.navigation.Navigation
import com.pleavinseven.alarmclockproject.alarmmanager.AlarmManager
import com.pleavinseven.alarmclockproject.data.model.Alarm
import com.pleavinseven.alarmclockproject.data.viewmodel.AlarmViewModel
import com.pleavinseven.alarmclockproject.databinding.FragmentSetNewAlarmBinding
import com.pleavinseven.alarmclockproject.util.TimePickerUtil
import java.util.*


class SetNewAlarmFragment : Fragment() {

    private val timePickerUtil = TimePickerUtil()
    lateinit var binding: FragmentSetNewAlarmBinding
    private lateinit var alarmViewModel: AlarmViewModel


    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {

        binding = FragmentSetNewAlarmBinding.inflate(inflater, container, false)

           binding.fragmentCreateAlarmRecurring.setOnCheckedChangeListener(CompoundButton.OnCheckedChangeListener { _, isChecked -&gt;
        if (isChecked) {
            binding.fragmentCreateAlarmRecurring.visibility = View.VISIBLE
        } else {
            binding.fragmentCreateAlarmRecurring.visibility = View.GONE
        }
    })

    alarmViewModel = ViewModelProvider(this)[AlarmViewModel::class.java]


    binding.fragmentBtnSetAlarm.setOnClickListener(View.OnClickListener { _ -&gt;
        scheduleAlarm()
        Navigation.findNavController(requireView())
            .navigate(com.pleavinseven.alarmclockproject.R.id.action_newAlarmFragment_to_homeFragment)
    })
    return binding.root


}
</code></pre>
<p>nav xml:</p>
<pre><code>?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;navigation xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
xmlns:tools=&quot;http://schemas.android.com/tools&quot;
android:id=&quot;@+id/alarm_nav&quot;
app:startDestination=&quot;@id/homeFragment&quot;&gt;

&lt;fragment
    android:id=&quot;@+id/homeFragment&quot;
     android:name=&quot;com.pleavinseven.alarmclockproject.fragments.HomeFragment&quot;
    android:label=&quot;fragment_home&quot;
    tools:layout=&quot;@layout/fragment_home&quot; &gt;
    &lt;action
        android:id=&quot;@+id/action_homeFragment_to_newAlarmFragment&quot;
        app:destination=&quot;@id/newAlarmFragment&quot; /&gt;
    &lt;action
        android:id=&quot;@+id/action_homeFragment_to_updateFragment&quot;
        app:destination=&quot;@id/updateFragment&quot; /&gt;
&lt;/fragment&gt;
&lt;fragment
    android:id=&quot;@+id/newAlarmFragment&quot;
    android:name=&quot;com.pleavinseven.alarmclockproject.fragments.SetNewAlarmFragment&quot;
    android:label=&quot;NewAlarmFragment&quot; &gt;
    &lt;action
        android:id=&quot;@+id/action_newAlarmFragment_to_homeFragment&quot;
        app:destination=&quot;@id/homeFragment&quot; /&gt;
&lt;/fragment&gt;
&lt;fragment
    android:id=&quot;@+id/updateFragment&quot;
    android:name=&quot;com.pleavinseven.alarmclockproject.fragments.UpdateFragment&quot;
    android:label=&quot;UpdateFragment&quot; &gt;
    &lt;action
        android:id=&quot;@+id/action_updateFragment_to_homeFragment&quot;
        app:destination=&quot;@id/homeFragment&quot; /&gt;
    &lt;argument
        android:name=&quot;currentAlarm&quot;
        app:argType=&quot;com.pleavinseven.alarmclockproject.data.model.Alarm&quot; /&gt;
&lt;/fragment&gt;
</code></pre>

","72627732","<p>Just move package name from build.gradle app level to manifest.</p>
<p>from</p>
<pre><code>android  { 
    namespace 'com.example.app' //remove this
}
</code></pre>
<p>to</p>
<pre><code>&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    package=&quot;com.example.app&quot;&gt; //add this
</code></pre>
"
"72668718","1","How to create Context using traceId in Open Telemetry","<p>I try to get all spans created in the following chain associated to the same trace context/traceId by context propagation:</p>
<p>service1 -&gt; aws sqs queue -&gt; service2</p>
<p>Auto. context propagation is not working with aws sqs and aws sdk v2 atm (<a href=""https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/3684"" rel=""noreferrer"">https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/3684</a>), even though the AwsTraceHeader is actually set in the sqs message, I have to take care for it explicitly by</p>
<ul>
<li>service1: Writing traceId in sqs message user attribute
<code>traceId=Span.current().getSpanContext().getTraceId()</code></li>
<li>service2: Reading traceId from sqs message user attribute <code>traceId</code> and overwriting current span.traceId / essentially creating Context of service1</li>
</ul>
<p>However, it is now unclear how to actually overwrite span.traceId in the span that service2 created which is confusing because for example with Golang it seems to be straightforward: <a href=""https://stackoverflow.com/questions/70378025/how-to-create-opentelemetry-span-from-a-string-traceid"">How to create opentelemetry span from a string traceid</a></p>
<p>I see only getters e.g. <code>Span.current().getSpanContext().getTraceId()</code>
but no setters or builder methods.</p>
<p>Update:</p>
<p>Even by creating a new span and making it current (not sure if this goes in the right direction)  the <code>tracer.spanBuilder</code> does no offer setters for traceId AFAIU)</p>
<pre><code>@Inject
io.opentelemetry.api.trace.Tracer tracer;

Span consumeMessageSpan = tracer.spanBuilder(&quot;consumeMessage&quot;).startSpan();

consumeMessage.makeCurrent();
</code></pre>
<p>Update 2</p>
<p>This snippet from otel official docs looks promising</p>
<blockquote>
<p>To link spans from remote processes, it is sufficient to set
the Remote Context as parent.</p>
</blockquote>
<pre><code>Span childRemoteParent = tracer.spanBuilder(&quot;Child&quot;).setParent(remoteContext).startSpan(); 
</code></pre>
<p>However, also no examples or ideas how to create remoteContext and setting traceId to the one extracted from the sqs message</p>
<p>Any hints how to do that?</p>
","72826169","<p>I've done the following for a child JVM
(that is running using the <a href=""https://github.com/open-telemetry/opentelemetry-java-instrumentation"" rel=""nofollow noreferrer"">OTel auto-instrumentation agent</a>):</p>
<pre><code>    public static void main(String[] args) {
        Span span = createSpanLinkedToParent();
        try (Scope scope = span.makeCurrent()) {
            // do stuff
        } finally {
            span.end();
        }
    }

    private static Span createSpanLinkedToParent() {
        // Fetch the trace and span IDs from wherever you've stored them
        String traceIdHex = System.getProperty(&quot;otel.traceid&quot;);
        String spanIdHex = System.getProperty(&quot;otel.spanid&quot;);

        SpanContext remoteContext = SpanContext.createFromRemoteParent(
                traceIdHex,
                spanIdHex,
                TraceFlags.getSampled(),
                TraceState.getDefault());

        return GlobalOpenTelemetry.getTracer(&quot;&quot;)
                .spanBuilder(&quot;root span name&quot;)
                .setParent(Context.current().with(Span.wrap(remoteContext)))
                .startSpan();
    }
</code></pre>
<p>The next improvement I plan to make it to serialise the flags and state, perhaps using code here in Context Propagation <a href=""https://opentelemetry.io/docs/instrumentation/java/manual/#context-propagation"" rel=""nofollow noreferrer"">https://opentelemetry.io/docs/instrumentation/java/manual/#context-propagation</a> but the above works for now.</p>
"
"72345283","1","getDeclaredMethods() return inherited methods if superclass is default","<p>I have two classes</p>
<pre class=""lang-java prettyprint-override""><code>// BaseClass.java
class BaseClass&lt;T&gt; {
 
   public String getTest(){
       return &quot;one&quot;;
   }
 
   public String getTest2(T t){
       return &quot;two&quot;;
   }
   public String getTest3(T t){
       return &quot;three&quot;;
   }
}
 
// OverrideClass.java
public class OverrideClass extends BaseClass&lt;Test&gt;{
}
 
</code></pre>
<p>I tried to run the following code</p>
<pre class=""lang-java prettyprint-override""><code>// Test.java
public class Test {
   public static void main(String[] args) {
       Class&lt;OverrideClass&gt; overrideClass = OverrideClass.class;
       Method[] declaredMethods = overrideClass.getDeclaredMethods();
       System.out.println(Arrays.toString(declaredMethods));
   }
}
</code></pre>
<p>and I think it should output</p>
<pre class=""lang-java prettyprint-override""><code>[]
</code></pre>
<p>but in fact the output is</p>
<pre class=""lang-java prettyprint-override""><code>[public java.lang.String OverrideClass.getTest()]
</code></pre>
<p>Through the bytecode, I thought this a bridge method, but I don't know why it generates, and if I make BaseClass public it will disappear.</p>
<pre class=""lang-java prettyprint-override""><code>  // access flags 0x1041
  public synthetic bridge getTest()Ljava/lang/String;
   L0
    LINENUMBER 1 L0
    ALOAD 0
    INVOKESPECIAL BaseClass.getTest ()Ljava/lang/String;
    ARETURN
   L1
    LOCALVARIABLE this LOverrideClass; L0 L1 0
    MAXSTACK = 1
    MAXLOCALS = 1
}
</code></pre>
<p>My question is:</p>
<ol>
<li>Why <code>getTest()</code> generate a bridge method if BaseClass is default?</li>
<li>Why <code>getTest2()</code> and <code>getTest3()</code> did not generate their bridge method? This seems to be related to generics.</li>
</ol>
","72345557","<p>I have analyzed the issue and here is the results. I have simplified a bit the example from the question.</p>
<p>This answer handles the first question of OP</p>
<blockquote>
<p>Why getTest() generate a bridge method if BaseClass is default?</p>
</blockquote>
<p>For second question regarding the inconsistency appearing with generics you can read <a href=""https://stackoverflow.com/a/72354692/7237884"">Denis answer</a></p>
<h2>Example 1</h2>
<pre><code>class BaseClass {

    public String getTest(){
        return &quot;one&quot;;
    }

    public String getTest2(){
        return &quot;two&quot;;
    }
    public String getTest3(){
        return &quot;three&quot;;
    }
}


public class OverrideClass extends BaseClass{}


public class Application {

public static void main(String[] args) throws Exception {
    Class&lt;OverrideClass&gt; overrideClass1 = OverrideClass.class;
    Method[] declaredMethods1 = overrideClass1.getDeclaredMethods();
    System.out.println(Arrays.toString(declaredMethods1));
   }
}
</code></pre>
<p>The execution of this either with JDK 8 or with JDK 17 has always the same result</p>
<pre><code>[public java.lang.String OverrideClass.getTest(), public java.lang.String OverrideClass.getTest2(), public java.lang.String OverrideClass.getTest3()]
</code></pre>
<h2>Example 2</h2>
<p>Just modify the above example into</p>
<pre><code>public class BaseClass {

    public String getTest(){
        return &quot;one&quot;;
    }

    public String getTest2(){
        return &quot;two&quot;;
    }
    public String getTest3(){
        return &quot;three&quot;;
    }
}
</code></pre>
<p>Note that the change is in the access modifier on Base class which now is <strong>public</strong>!</p>
<p>The execution of this produces the expected behavior of  <code>[]</code></p>
<p>This however is not a bug of JDK. It is intended to be this way.</p>
<h2>Explanation</h2>
<p>The reason that in the example1 the <code>getDeclaredMethods()</code> has returned the same methods of the parent class is not because those methods are printed as inherited. It is because those are bridge methods that actually belong to that child class (OverrideClass).</p>
<p>This functionality has been added long ago and the explanation as you can see <a href=""https://bugs.java.com/bugdatabase/view_bug.do?bug_id=JDK-6342411"" rel=""noreferrer"">here</a> from developers of oracle was</p>
<blockquote>
<p>The proposal is to add bridge methods in these very rare cases to fix
a problem in reflection with no other forseen fix or workaround.
Specifically, we would generate a bridge method when a public method
is inherited from a nonpublic class into a public class.</p>
</blockquote>
<p>And as you can also see <a href=""https://bugs.java.com/bugdatabase/view_bug.do?bug_id=6815786"" rel=""noreferrer"">here</a>, the most recent comment from oracle developers was</p>
<blockquote>
<p>The bridge methods are added in a case like this where a public class
public methods from a non-public superclass to allow for the
possibility of reflective access of the subclasses methods
JDK-6342411).</p>
<p>Closing this issue as not a bug.</p>
</blockquote>
<p>So this is happening only in non public parent classes because in this case the public methods that are inherited need to be added as bridge methods in that children class.</p>
<p>In the <strong>example 2</strong> where bridge methods do not exist, if you try to print out the disassembled code using <code>javap -c OverrideClass</code> you will see the following</p>
<pre><code>public class OverrideClass extends BaseClass {
      public OverrideClass();
        Code:
           0: aload_0
           1: invokespecial #1                  // Method BaseClass.&quot;&lt;init&gt;&quot;:()V
           4: return
    }
</code></pre>
<p>In the <strong>example 1</strong> with bridge methods existing, if you try to print out the disassembled code using <code>javap -c OverrideClass</code> you will see the following</p>
<pre><code>public class OverrideClass extends BaseClass {
  public OverrideClass();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method BaseClass.&quot;&lt;init&gt;&quot;:()V
       4: return

  public java.lang.String getTest3();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method BaseClass.getTest3:()Ljava/lang/String;
       4: areturn

  public java.lang.String getTest2();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method BaseClass.getTest2:()Ljava/lang/String;
       4: areturn

  public java.lang.String getTest();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method BaseClass.getTest:()Ljava/lang/String;
       4: areturn
}
</code></pre>
"
"73281636","1","Java Generics: Stream.map() returns ""capture of ?"" instead of ""?""","<p>I'm trying to build a <code>List</code> of Classes that implement a certain interface called <code>Interface</code>:</p>
<pre><code>List&lt;Class&lt;? extends Interface&gt;&gt; myList= myMap.entrySet().stream()
    .filter(entry -&gt; entry.getValue().equals(myValue))
    .map(Map.Entry::getKey)   // Stream&lt;Interface&gt;
    .map(Interface::getClass) // Stream&lt;Class&lt;capture of ? extends Interface&gt;&gt;
    .distinct()
    .toList();
</code></pre>
<p>I added as comment the type of the elements in the Stream after <code>map()</code> is called.</p>
<p>The code iterates over all the entries in the map, and if their value is equal to <code>myValue</code>, then:</p>
<ul>
<li>first, gets the <em>instance</em> of type <code>Interface</code> (which is the <em>key</em> of the <em>entry</em>)</li>
<li>then, gets the <code>Class</code> implementing the <code>Interface</code>.</li>
</ul>
<p><code>myMap</code> is defined as:</p>
<pre><code>Map&lt;Interface, Integer&gt; myMap = new HashMap&lt;&gt;()
</code></pre>
<p>The error I'm getting :</p>
<pre><code>Incompatible types.
Found: 'java.util.List&lt;java.lang.Class&lt;capture&lt;? extends application.interfaces.Interface&gt;&gt;&gt;',
required: 'java.util.List&lt;java.lang.Class&lt;? extends application.interfaces.Interface&gt;&gt;'
</code></pre>
<p>I am clearly missing something about how <em>Generics</em> work in Java, but I am at a loss here. I suppose it's something related to the fact that the compiler cannot correctly reify my <code>?</code> wildcard.</p>
","73281848","<p>As <em>@Slaw</em> has pointed out in the comments, in this case <code>getClass()</code> is capable to provide the information about the generic type to the compiler.</p>
<p>According to the <a href=""https://docs.oracle.com/en/java/javase/18/docs/api/java.base/java/lang/Object.html#getClass()"" rel=""nofollow noreferrer""><em>documentation</em></a>:</p>
<blockquote>
<p>The actual result type is <code>Class&lt;? extends |X|&gt;</code> where <code>|X|</code> is the erasure of the static type of the expression on which getClass is called.</p>
</blockquote>
<p>Hence, at compile time, we would have a type <code>? extends Interface</code> and the reason of the observed behavior is related solely to peculiarities of <strong>type inference</strong> in Java.</p>
<p>In this case, when we are chaining methods after <code>map()</code> operation, the compiler fails to infer the type of the method reference <code>Interface::getClass</code> correctly based on the resulting type returned by the stream.</p>
<p>If we substitute <code>toList</code>, which expects elements of type <code>T</code> and produces <code>List&lt;T&gt;</code>, with <code>collect(Collectors.toList())</code>, in which collector is of type <code>Collector&lt;? super T, A, R&gt;</code>, the compiler would be able to do its job (here's a <a href=""https://www.jdoodle.com/ia/tN1"" rel=""nofollow noreferrer""><em>proof</em></a>):</p>
<pre><code>List&lt;Class&lt;? extends Interface&gt;&gt; myList = myMap.entrySet().stream()
    .filter(entry -&gt; Objects.equals(entry.getValue(), myValue))
    .map(Map.Entry::getKey)   // Stream&lt;Interface&gt;
    .map(Interface::getClass) // Stream&lt;Class&lt;? extends Interface&gt;&gt;
    .distinct()
    .collect(Collectors.toList());
</code></pre>
<p>But to make type inference working with <code>toList()</code> we need to provide the generic type <strong>explicitly</strong>.</p>
<p>For instance, this code would compile, because the type of <code>Interface::getClass</code> could be inferred from the assignment context (here there are no operations after <code>map()</code>, hence <code>myStream</code> directly says what should be the return type of <code>map()</code>):</p>
<pre><code>Stream&lt;Class&lt;? extends Interface&gt;&gt; myStream = myMap.entrySet().stream()
    .filter(entry -&gt; Objects.equals(entry.getValue(), myValue))
    .map(Map.Entry::getKey)
    .map(Interface::getClass);

List&lt;Class&lt;? extends Interface&gt;&gt; myList = myStream.distinct().toList();
</code></pre>
<p>A more handy way would be to use a so-called <em>Type Witness</em>:</p>
<pre><code>Map&lt;Interface, Integer&gt; myMap = Map.of(new ClasA(), 1, new ClasB(), 1);
        
int myValue = 1;
        
List&lt;Class&lt;? extends Interface&gt;&gt; myList = myMap.entrySet().stream()
    .filter(entry -&gt; Objects.equals(entry.getValue(), myValue))
    .map(Map.Entry::getKey)                               // Stream&lt;Interface&gt;
    .&lt;Class&lt;? extends Interface&gt;&gt;map(Interface::getClass) // Stream&lt;Class&lt;? extends Interface&gt;&gt;
    .distinct()
    .toList();
        
myList.forEach(c -&gt; System.out.println(c.getSimpleName()));
</code></pre>
<p><em>Output:</em></p>
<pre><code>ClasA
ClasB
</code></pre>
<p><em>Dummy classes:</em></p>
<pre><code>interface Interface {}
class ClasA implements Interface {}
class ClasB implements Interface {}
</code></pre>
"
"73336136","1","Does having a wrapper object return value (e.g. Integer) cause auto boxing in Java?","<p>I couldn't find a definitive answer for this seemingly simple question. If I write a method like this:</p>
<pre><code>public Integer getAnInt() {
  int[] i = {4};
  return i[0];
}
</code></pre>
<p>is the return value autoboxed into an Integer, or does it depend on what happens to the value after it's returned (e.g. whether the variable it is assigned to is declared as an Integer or int)?</p>
","73336170","<h1>Yes, boxed</h1>
<p>It will be (auto)boxed in the bytecode (<code>.class</code> file) because it's part of the public API, so other code might depend on the return value being an <code>Integer</code>.</p>
<p>The boxing and unboxing might be removed at runtime by the JITter under the right circumstances, but I don't know if it does that sort of thing.</p>
"
"72841549","1","Container Fails to Start: Insufficient memory for the Java Runtime Environment to continue","<p>We have an enterprise application running on Java 8. The deployment environment is built &amp; updated through Bitbucket pipelines. I have a <a href=""https://i.stack.imgur.com/0Z3Ga.png"" rel=""noreferrer"">graphic showing the high-level architecture of the environment</a>.  We have two app servers running identical configurations apart from some application specific environment variables.</p>
<p>It was all working well until a week ago when after a successful pipeline run, the 2 app instances on one of the servers stopped working with the following error:</p>
<pre><code>There is insufficient memory for the Java Runtime Environment to continue.
Cannot create GC thread. Out of system resources.
</code></pre>
<p>Both the instances are working fine on the other server. In contrast, the containers fail to start on this server.</p>
<h2>Solutions Tried</h2>
<p>The error accompanies the following information:</p>
<p>Possible reasons:
The system is out of physical RAM or swap space
The process is running with CompressedOops enabled, and the Java Heap may be blocking the growth of the native heap.</p>
<p>Possible solutions:</p>
<ul>
<li>Reduce memory load on the system</li>
<li>Increase physical memory or swap space</li>
<li>Check if swap backing store is full</li>
<li>Decrease Java heap size (-Xmx/-Xms)</li>
<li>Decrease number of Java threads</li>
<li>Decrease Java thread stack sizes (-Xss)</li>
<li>Set larger code cache with -XX:ReservedCodeCacheSize=</li>
</ul>
<p>We have tried:</p>
<ol>
<li>Adding more swap memory. The server has 8GB of RAM while we have tried the swap from 4GB to 9GB.</li>
<li>Played with the heap sizes Xms &amp; Xmx from 128m to 4096m.</li>
<li>Increased the RAM on this server to 16GB while the other server that works still does on 8GB.</li>
</ol>
<p>Here is how the memory &amp; swap consumption looks like:</p>
<pre><code>free -mh
              total        used        free      shared  buff/cache   available
Mem:           15Gi       378Mi        12Gi       1.0Mi       2.9Gi        14Gi
Swap:           9Gi          0B         9Gi
</code></pre>
<p>I have links to several related artifacts.  These include the <a href=""https://pastebin.mozilla.org/tE82QzDQ"" rel=""noreferrer"">complete <code>docker logs</code> output</a> and the output of <code>docker info</code> on <a href=""https://pastebin.mozilla.org/DdgUDpwj"" rel=""noreferrer"">the failing server</a> and <a href=""https://pastebin.mozilla.org/GrzhTFBT"" rel=""noreferrer"">the operational server</a>.</p>
<p>This is what <code>docker ps -a</code> gets us:</p>
<pre><code>:~$ docker ps -a
CONTAINER ID   IMAGE                                                                                  COMMAND                  CREATED        STATUS                    PORTS                                       NAMES
d29747bf2ad3   :a7608a838625ae945bd0a06fea9451f8bf11ebe4   &quot;catalina.sh run&quot;        10 hours ago   Exited (1) 10 hours ago                                               jbbatch
0951b6eb5d42   :a7608a838625ae945bd0a06fea9451f8bf11ebe4   &quot;catalina.sh run&quot;        10 hours ago   Exited (1) 10 hours ago                                               jbapp
</code></pre>
<p>We are out of ideas right now as we have tried almost all the solutions on stack overflow. What are we missing?</p>
","72841934","<p>I see that your Docker image uses Ubuntu 22.04 LTS as its base. Recently base Java images were rebuilt on top of this LTS version, which caused a lot of issues on older Docker runtimes. Most likely this is what you're experiencing. It has nothing to do with memory, but rather with Docker incompatibility with a newer Linux version used as a base image.</p>
<p>Your operational server has Docker server version 20.10.10, while the failing server has version 20.10.09. The incompatibility issue was fixed exactly in Docker 20.10.10. Some more technical details on the incompatibility issue are available <a href=""https://github.com/adoptium/containers/issues/215#issuecomment-1142046045"" rel=""noreferrer"">here</a>.</p>
<p>The solution would be to upgrade the failing server to at least Docker 20.10.10.</p>
"
"73337717","1","IntelliJ Idea debugger's evaluator gives different results than normal program for comparing Scala Long and Float variables","<p><a href=""https://i.stack.imgur.com/bqEBG.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/bqEBG.png"" alt=""enter image description here"" /></a></p>
<p>As the screenshot shows, While I'm comparing the same literal values with type of Float and Long, Scala says it's not equal</p>
<p>But the evaluator says they are equal to each other!</p>
<p>I suspect this is a bug in Intellij Idea, since the same code will yield different results in a normal Scala runtime than in a evaluator runtime.</p>
<p>If the Evaluator's result is untrustworthy, this may cause trouble for developers.</p>
<p>I wonder if there is anything wrong with my thinking and hope someone can point it out.</p>
","73338149","<p>I could not reproduce your example using the Intellij evaluator (though I don't use a Mac, this might be a bug on the Mac version of Intellij), but what I can say is that Java and Scala treat this differently. Actually, in Scala 2.13.x those values are equal.</p>
<p>Java treats this code differently based on their types (primitive vs wrapper types):</p>
<pre><code>    long vl = 32294629407L;
    float vf = 32294629407f;
    Boolean res11 = vl == vf;
    System.out.println(res11); // true

    Long vl1 = 32294629407L;
    Float vf1 = 32294629407f;
    Boolean res22 = vl1.equals(vf1);
    System.out.println(res22); // false
</code></pre>
<p>Since Scala was designed to be a more regular language, such discrepancies were removed from the language, by special casing the <code>==</code> method for these classes:</p>
<pre><code>  val vl: Long  = 32294629407L
  val vf: Float = 32294629407f
  val res11     = vl == vf // true 

  println(res11) // true
</code></pre>
<blockquote>
<p>The only case where == does not directly call <code>equals</code> is for Java's
boxed numeric types.</p>
</blockquote>
<p><strong>NOTE</strong>:</p>
<p>For prior versions of Scala, this does not hold, as it seems in Scala 2.12 this is not valid.</p>
"
"71832118","1","sbt assembly cannot create jar getting java.lang.UnsupportedOperationException","<p>I am using</p>
<pre><code>scala 1.12.10
akka 2.6.3
addSbtPlugin(&quot;io.spray&quot; % &quot;sbt-revolver&quot; % &quot;0.9.1&quot;)
addSbtPlugin(&quot;com.eed3si9n&quot; % &quot;sbt-assembly&quot; % &quot;1.1.0&quot;)
</code></pre>
<p>However when executing <code>sbt assembly</code> I am getting:</p>
<pre><code>java.lang.UnsupportedOperationException: The Security Manager is deprecated and will be removed in a future release
    at java.base/java.lang.System.setSecurityManager(System.java:416)
    at sbt.TrapExit$.installManager(TrapExit.scala:53)
    at sbt.StandardMain$.runManaged(Main.scala:109)
    at sbt.xMain.run(Main.scala:76)
    at xsbt.boot.Launch$$anonfun$run$1.apply(Launch.scala:111)
    at xsbt.boot.Launch$.withContextLoader(Launch.scala:131)
    at xsbt.boot.Launch$.run(Launch.scala:111)
    at xsbt.boot.Launch$$anonfun$apply$1.apply(Launch.scala:37)
    at xsbt.boot.Launch$.launch(Launch.scala:120)
    at xsbt.boot.Launch$.apply(Launch.scala:20)
    at xsbt.boot.Boot$.runImpl(Boot.scala:56)
    at xsbt.boot.Boot$.main(Boot.scala:18)
    at xsbt.boot.Boot.main(Boot.scala)
[error] [launcher] error during sbt launcher: java.lang.UnsupportedOperationException: The Security Manager is deprecated and will be removed in a future release
</code></pre>
<p>running java 18</p>
<pre><code>java -version
openjdk version &quot;18&quot; 2022-03-22
OpenJDK Runtime Environment (build 18+36-2087)
OpenJDK 64-Bit Server VM (build 18+36-2087, mixed mode, sharing)
</code></pre>
","71847512","<p>Using java 8 solved this issue as AminMal suggested</p>
"
"72878610","1","Is there a reason to create the string variable before input?","<p>Newly learning java and for input, we did</p>
<pre><code>Scanner scan = new Scanner(System.in);
String name;
System.out.println(&quot;What is your  name?&quot;);
name = scan.nextLine();
System.out.println(name);
</code></pre>
<p>However, I found that</p>
<pre><code>Scanner scan = new Scanner(System.in);
String name = scan.nextLine();
System.out.println(name);
</code></pre>
<p>works the same. Is this being taught to me in the bigger form because it's more generally used/is clearer or am I just being taught the bigger form since I'm a beginner to avoid too much confusion? (Basically, are there any reasons why people would use the expanded version rather than the condensed version?)</p>
","72878772","<p>In your case its one and the same thing. It is more useful though when used in the context of variable scoping.</p>
<p>Creating a reference variable before initializing it with a value is the preferred way while using code blocks, so that the reference can be used outside of the block as well. Check out this example:</p>
<pre><code>int sum = 0;
for(int idx=0; idx&lt;5; idx++) {
   sum+=idx;
}
return sum;
</code></pre>
"
"73456148","1","Unit test: Collection being processed with for-loop but not with streams","<p>Issue with unit test is that the same collection is processed differently in a stream and in a for loop.
The collection in both cases is empty <code>(data.size() = 0)</code>, but in the Case 1 that collection is somehow processed, in other words it will step in the for-loop.
In Case 2, that collection is just skipped (which is expected since it's empty).</p>
<p>Tests are using Mockito, and <code>Result&lt;Record&gt;</code> is comming for JOOQ.</p>
<p>The tests are old and unchanged, the only change is going from for-loop to stream.</p>
<p><strong>Case 1</strong></p>
<pre><code>private SearchResult iterateData(
      Result&lt;Record&gt; data, ...) {

      for (Record record : data) {
           doSomething(record);
    }
</code></pre>
<p><strong>Case 2</strong></p>
<pre><code>private SearchResult iterateData(
      Result&lt;Record&gt; data, ...) {
      data.stream().forEach(record -&gt; doSomething(record)); 
</code></pre>
<p>Screenshot of Case 1
<a href=""https://i.stack.imgur.com/NMg8l.png"" rel=""nofollow noreferrer"">for loop example</a></p>
<p><strong>Mocked Result object</strong></p>
<pre><code>private DefaultSearchRequestModel rowSpecificValuesTestSetup(
      parameters...) {
    

    DefaultSearchRequestModel searchRequest = new DefaultSearchRequestModel(
        Arrays.asList(....),
        Collections.singletonList(
            new SearchFilter(
                &quot;test&quot;,
                Collections.singletonList(...)));

    List&lt;Column&gt; columns =
        this.searchService.filterUserAllowedColumns(...);

    Condition searchCondition =
        this.searchRepositoryMock.getSearchConditions(...);

    List&lt;TableJoinMapping&gt; joinMappings = ColumnHelper.getColumnTranslateDeviceJoinMappings(
        columns,
        searchRequest.getFilters());

    Result&lt;Record&gt; deviceDataResultMock = Mockito.mock(Result.class);
    Iterator&lt;Record&gt; resultIterator = Mockito.mock(Iterator.class);
    final Table fromTableMock = Mockito.mock(Table.class);
    when(resultIterator.hasNext()).thenReturn(true, false);
    Record recordMock = Mockito.mock(Record.class);
    when(resultIterator.next()).thenReturn(recordMock);
    when(deviceDataResultMock.iterator()).thenReturn(resultIterator);
    when(recordMock.get(CONTRACTID)).thenReturn(contractId);
   ...
when(this.userPermissions.getAccessPermissions()).thenReturn(searchRequest.getColumns().stream().map
        (name -&gt; Column.findByName(name).getId()).collect(
        Collectors.toList()));
    when(this.searchRepositoryMock.getCurrentTable(companyId))
        .thenReturn(fromTableMock);
    when(recordMock.get(TYPEID)).thenReturn(financialTypeId);
    when(this.searchRepositoryMock.getDeviceData(
        ArgumentMatchers.anyList(),
        ArgumentMatchers.anyList(),
        any(),
        any(),
        eq(searchRequest.getPageSize()),
        eq(searchRequest.getPage()),
        eq(searchRequest.getSortCriterias()),
        eq(fromTableMock),
        ArgumentMatchers.anyList(),
        eq(Optional.empty()),
        eq(this.dslContextMock)))
        .thenReturn(deviceDataResultMock);

    return searchRequest;
  }```
</code></pre>
","73469713","<h3>Why it didn't work</h3>
<p>You're mocking <code>Result.iterator()</code>:</p>
<pre class=""lang-java prettyprint-override""><code>when(deviceDataResultMock.iterator()).thenReturn(resultIterator);
</code></pre>
<p>But you didn't mock <code>Result.spliterator()</code>, or at least I didn't see it, which is what's being called by <code>Result.stream()</code>, which is just <code>Collection.stream()</code>:</p>
<pre class=""lang-java prettyprint-override""><code>default Stream&lt;E&gt; stream() {
    return StreamSupport.stream(spliterator(), false);
}
</code></pre>
<p>So, you'll have to mock the <code>spliterator()</code> method as well, and probably a few others, too! Alternatively, tell Mockito to call <code>default</code> methods:</p>
<p><a href=""https://stackoverflow.com/q/27663252/521799"">Can you make mockito (1.10.17) work with default methods in interfaces?</a></p>
<h3>A comment on mocking in general</h3>
<p>I'm not convinced that mocking the jOOQ API is a very good idea. The jOOQ API is vast, and you'll likely forget to mock this or that method as this question here has aptly shown. With your current setup, you're planning on updating your mock <em>every time</em> you project a new column? E.g. you're doing this:</p>
<pre class=""lang-java prettyprint-override""><code>when(recordMock.get(DEVICEID.getName()).thenReturn(deviceId);
</code></pre>
<p>What if the column is renamed? Or another column is projected? You'll have to update this test. That feels like quite the chore, and it's very error prone.</p>
<p>While jOOQ itself has <a href=""https://www.jooq.org/doc/latest/manual/sql-execution/mocking-connection/"" rel=""noreferrer"">JDBC mocking capabilities</a>, please consider the bold disclaimer on that manual page:</p>
<blockquote>
<p>Disclaimer: The general idea of mocking a JDBC connection with this jOOQ API is to provide quick workarounds, injection points, etc. using a very simple JDBC abstraction. It is NOT RECOMMENDED to emulate an entire database (including complex state transitions, transactions, locking, etc.) using this mock API. Once you have this requirement, please consider using an actual database product instead for integration testing, rather than implementing your test database inside of a MockDataProvider</p>
</blockquote>
<p>When working with databases, it's usually best to resort to running integration tests, see the following resources for some details:</p>
<ul>
<li><a href=""https://stackoverflow.com/q/57443526/521799"">Integration testing with Jooq</a></li>
<li><a href=""https://blog.jooq.org/using-h2-as-a-test-database-product/"" rel=""noreferrer"">Using H2 as a Test Database Product with jOOQ</a></li>
<li><a href=""https://blog.jooq.org/how-to-integration-test-stored-procedures-with-jooq/"" rel=""noreferrer"">How to Integration Test Stored Procedures with jOOQ</a></li>
<li><a href=""https://blog.jooq.org/using-testcontainers-to-generate-jooq-code/"" rel=""noreferrer"">Using Testcontainers to Generate jOOQ Code</a></li>
</ul>
<p>Of course, you can write a few smoke tests to ensure jOOQ works correctly if you don't trust jOOQ (jOOQ being an external dependency). But the jOOQ unit and integration tests are vast, so in general, you should be able to trust core types like <code>Result</code> or <code>Record</code> to do the right thing for you. What you really want to test is your query correctness, and that, you can only integration test against an actual database instance.</p>
"
"73654810","1","Why does String creation using `newInstance()` method behave different when using `var` compared to using explicit type `String`?","<p>I am learning about reflection in Java. By accident, I discovered the following, for me unexpected behavior.</p>
<p>Both tests as written below succeed.</p>
<pre class=""lang-java prettyprint-override""><code>class NewInstanceUsingReflection {
    @Test
    void testClassNewInstance()
        throws NoSuchMethodException, InvocationTargetException,
        InstantiationException, IllegalAccessException
    {
        final var input = &quot;A string&quot;;
        final var theClass = input.getClass();
        final var constructor = theClass.getConstructor();
        final String newString = constructor.newInstance();

        assertEquals(&quot;&quot;, newString);
    }

    @Test
    void testClassNewInstanceWithVarOnly()
        throws NoSuchMethodException, InvocationTargetException,
        InstantiationException, IllegalAccessException
    {
        final var input = &quot;A string&quot;;
        final var theClass = input.getClass();
        final var constructor = theClass.getConstructor();
        final var newString = constructor.newInstance();

        assertEquals(&quot;A string&quot;, newString);
    }
}
</code></pre>
<p>The only difference apart from the assertion is that the <strong><code>newString</code></strong> variable type is explicit in the first test and declared as <code>var</code> in the second test.</p>
<p>I'm using java 17 and the junit5 test framework.</p>
<p>Why is the value of <code>newString</code> an empty string in the first test and the <code>input</code> string value in the second test?</p>
<p>Does it have something todo with the string-pool?</p>
<p>Or is something else going on?</p>
","73655162","<p>Java17, same problem. The explanation is clearly: bug.</p>
<p>decompiling it, the relevant section:</p>
<pre><code>        20: anewarray     #2                  // class java/lang/Object
        23: invokevirtual #35                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
        26: checkcast     #41                 // class java/lang/String
        29: astore        4
        31: ldc           #23                 // String A string
        33: ldc           #23                 // String A string
        35: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
</code></pre>
<p><code>astore 4</code> is where the result goes, which is nowhere: slot 4 is not used any further. Instead, the same string constant is loaded twice, trivially resulting in, effectively, <code>&quot;A string&quot;.equals(&quot;A string&quot;)</code>, which is of course <code>true</code>.</p>
<p>Replacing <code>var</code> with String, recompiling, and rerunning <code>javap</code>:</p>
<pre><code>        20: anewarray     #2                  // class java/lang/Object
        23: invokevirtual #35                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
        26: checkcast     #41                 // class java/lang/String
        29: astore        4
        31: ldc           #23                 // String A string
        33: aload         4
        35: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
</code></pre>
<p>Identical in every way, except the second <code>ldc</code> is the correct <code>aload 4</code>.</p>
<p>I'm having a hard time figuring out what's happening here. It feels more like the <code>var</code> is somehow causing that <code>ldc</code> to duplicate (in contrast to an analysis incorrectly thinking that the values are guaranteed to be identical; javac intentionally does very little such optimizations).</p>
<p>I'm having a <em>really</em> hard time figuring out how this has been in <strong>2</strong> LTS releases. Impressive find.</p>
<p>Next step is to verify on the <a href=""https://jdk.java.net/18/"" rel=""noreferrer"">latest JDK (18)</a>, and then to <a href=""https://bugs.java.com/bugdatabase/"" rel=""noreferrer"">file a bug</a>. I did a quick look if it has been reported already, but I'm not sure what search terms to use. I didn't find any report in my search, though.</p>
<p>NB: The decompilation traces were produced using <code>javap -c -v NewInstanceUsingReflection</code>.</p>
<p>EDIT: Just tried on ecj (<code>Eclipse Compiler for Java(TM) v20210223-0522, 3.25.0, Copyright IBM Corp 2000, 2020. All rights reserved.</code>) - bug doesn't happen there.</p>
"
"72349380","1","How can I create a Locale with a specific script code?","<p>I'm trying to convert this String <code>az_AZ_#Latn</code>, <a href=""https://www.localeplanet.com/java/"" rel=""noreferrer"">found here</a>, to a Locale but I'm unable to parse the <code>#Latn</code> part.</p>
<p>If I do <code>new Locale(&quot;az_AZ_#Latn&quot;)</code> I lose the <code>#Latn</code> part (the Script code).</p>
<p>I've tried as well using the <code>LocaleUtils</code> from commons-lang but I get an error saying that it's an invalid format.</p>
","72349890","<p>As written in the <a href=""https://docs.oracle.com/javase/tutorial/i18n/locale/create.html"" rel=""noreferrer"">docs</a>:</p>
<blockquote>
<p>It is not possible to set a script code on a Locale object in a
release earlier than JDK 7.</p>
</blockquote>
<p>But you can use the <code>Locale builder</code> to make it like this:</p>
<pre><code>Locale locale = new Locale.Builder().setLanguage(&quot;az&quot;).setRegion(&quot;AZ&quot;).setScript(&quot;Latn&quot;).build();
</code></pre>
<p>You can get the Script it by calling <code>locale.getScript()</code></p>
<p><strong>Edit:</strong></p>
<p>Here's a method I made for converting a string into a locale (doesn't work for extensions):</p>
<pre><code>public static Locale stringToLocale(String locale){
    if(locale == null || locale.isEmpty()) return null;
    String[] parts = locale.split(&quot;_&quot;);
    if(parts.length == 1) return new Locale(parts[0]);
    if(parts.length == 2) return new Locale(parts[0],parts[1]);
    if(parts.length == 3) 
        if(parts[2].charAt(0) != '#') return new Locale(parts[0],parts[1],parts[2]);
        else return new Locale.Builder().setLanguage(parts[0]).setRegion(parts[1]).setScript(parts[2].substring(1)).build();
    if(parts.length == 4) return new Locale.Builder().setLanguage(parts[0]).setRegion(parts[1]).setVariant(parts[2]).setScript(parts[3].charAt(0)=='#'? parts[3].substring(1):null).build();
    return null;
}
    //works for the toString output expect for extensions. test: for(Locale l:  Locale.getAvailableLocales()) System.out.println(l.equals(stringToLocale(l.toString())));
   // output : true true true...
</code></pre>
<p>usage:</p>
<pre><code>Locale l = stringToLocale(&quot;az_AZ_#Latn&quot;);
</code></pre>
"
"71641264","1","How can I solve this issue on Mac M1 Caused by: java.lang.Exception: No native library is found for os.name=Mac and os.arch=aarch64","<p>I solved this issue with the code below in my build.gradle</p>
<pre><code>  allprojects {
configurations.all {
    resolutionStrategy {
        force 'org.xerial:sqlite-jdbc:3.34.0'
      }
   }
 } 
</code></pre>
<p>But it has an effect on the project I am working on. for some reason, it is not working with room sql implemented on the project.</p>
<p>I get this error when i removed the code above.</p>
<p>Is there a better approach to solve this.</p>
<pre><code>Caused by: java.lang.ExceptionInInitializerError
at androidx.room.processor.DatabaseProcessor.doProcess(DatabaseProcessor.kt:82)
at androidx.room.processor.DatabaseProcessor.process(DatabaseProcessor.kt:57)
at androidx.room.RoomProcessor$DatabaseProcessingStep.process(RoomProcessor.kt:134)
at com.google.auto.common.BasicAnnotationProcessor.process(BasicAnnotationProcessor.java:330)
at com.google.auto.common.BasicAnnotationProcessor.process(BasicAnnotationProcessor.java:181)
at org.jetbrains.kotlin.kapt3.base.incremental.IncrementalProcessor.process(incrementalProcessors.kt)
at org.jetbrains.kotlin.kapt3.base.ProcessorWrapper.process(annotationProcessing.kt:161)
at 

 
</code></pre>
<p>jdk.compiler/com.sun.tools.javac.processing.JavacProcessingEnvironment.callProcessor(JavacProcessingEnvironment.java:980)
... 39 more</p>
<pre><code>Caused by: java.lang.Exception: No native library is found for os.name=Mac and 
os.arch=aarch64. path=/org/sqlite/native/Mac/aarch64
at org.sqlite.SQLiteJDBCLoader.loadSQLiteNativeLibrary(SQLiteJDBCLoader.java:333)
at org.sqlite.SQLiteJDBCLoader.initialize(SQLiteJDBCLoader.java:64)
at androidx.room.verifier.DatabaseVerifier.&lt;clinit&gt;(DatabaseVerifier.kt:68)
... 47 more
</code></pre>
","71898182","<p>update your room library</p>
<pre><code>   implementation &quot;androidx.room:room-runtime:2.4.2&quot;
   implementation &quot;androidx.room:room-ktx:2.4.2&quot;
   kapt &quot;androidx.room:room-compiler:2.4.2&quot;
</code></pre>
<p>Here is <a href=""https://developer.android.com/jetpack/androidx/releases/room#version_240_2"" rel=""noreferrer"">Reference</a></p>
"
"73038137","1","What's the best way to encode and decode parameter in springboot?","<p>I use <code>@RequestParam</code> to get the parameter value,but I find the if I pass the value like 'name=abc&amp;def&amp;id=123',I will get the name value 'abc' instead of 'abc&amp;def'. I find the encode and decode the parameter value can solve my problem.But I have to write the encode and decode mehtod in every controller method,Do spring have the global mehtod that decode every  <code>@RequestParam</code> value?When using <code>@RequestParam</code>, is it necessary to encode and decode every value?</p>
<p>Here is my code:</p>
<pre><code>@PostMapping(&quot;/getStudent&quot;)
public Student getStudent(
        @RequestParam String name,
        @RequestParam String id) { 
        name= URLDecoder.decode(name, &quot;UTF-8&quot;);  
        //searchStudent
        return Student;
}

@PostMapping(&quot;/getTeacher&quot;)
public teacher getTeacher(
        @RequestParam String name,
        @RequestParam String teacherNo) { 
        name= URLDecoder.decode(name, &quot;UTF-8&quot;);  
        //searchTeacher
        return teacher;
}
</code></pre>
<p>Somebody say the the Spring will have already done this,but I have try,the result is not right.Only use curl cmd is ok,but java code is not ok.</p>
<pre><code>@PostMapping(value = &quot;/example&quot;)
public String handleUrlDecode1(@RequestParam String param) { 
    //print ello%26test
    System.out.println(&quot;/example?param received: &quot; + param); 
    return &quot;success&quot;;
}

@GetMapping(value = &quot;/request&quot;)
public String request() {
    String url =  &quot;http://127.0.0.1:8080/example?param=ello%26test&quot;;
    System.out.println(url);
    RestTemplate restTemplate = new RestTemplate();
    return restTemplate.postForObject(url, null, String.class);
}
</code></pre>
","73053590","<p>You must create an HTTP entity and send the headers and parameter in body.</p>
<pre><code>@GetMapping(value = &quot;/request&quot;)
public String request()  {
    String url =  &quot;http://127.0.0.1:8080/example&quot;;
    System.out.println(url);
    RestTemplate restTemplate = new RestTemplate(); 
    HttpHeaders headers = new HttpHeaders();
    headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED);
    MultiValueMap&lt;String, String&gt; map= new LinkedMultiValueMap&lt;String, String&gt;();
    map.add(&quot;param&quot;,&quot;ello&amp;test&quot;);
    map.add(&quot;id&quot;,&quot;ab&amp;c=def&quot;);
    HttpEntity&lt;MultiValueMap&lt;String, String&gt;&gt; request = new HttpEntity&lt;MultiValueMap&lt;String, String&gt;&gt;(map, headers); 
    return restTemplate.postForObject(url, request, String.class);
}
</code></pre>
"
"72362798","1","ZonedDateTime format and parsing exception with “z” in format pattern","<p>I have a problem with parsing <code>ZonedDateTime</code>:</p>
<pre class=""lang-java prettyprint-override""><code>DateTimeFormatter format = DateTimeFormatter.ofPattern(&quot;yyyy-MM-ddzhh:mm&quot;);
ZonedDateTime.parse(s, formatter);
</code></pre>
<p>This results in an error:</p>
<pre class=""lang-none prettyprint-override""><code>java.time.format.DateTimeParseException:
    Text '2022-05-24UTC12:15' could not be parsed at index 10
</code></pre>
<p>whats wrong with this code?</p>
","72362956","<p>The character <code>z</code> should be able to parse <code>&quot;UTC&quot;</code> (in most <code>Locale</code>s) because <em>UTC</em> is considered a <em>time-zone ID</em> and a <em>time-zone name</em> in <code>java.time</code>. A <code>VV</code> can parse <em>time-zone ids</em> while <code>z</code>can parse <em>time-zone-names</em> according to the <a href=""https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html"" rel=""nofollow noreferrer"">JavaDocs of <code>java.time.DateTimeFormatter</code></a>, here's the relevant part of the docs:</p>
<pre class=""lang-none prettyprint-override""><code>Symbol  Meaning                     Presentation      Examples
------  -------                     ------------      -------
(…)

V       time-zone ID                zone-id           America/Los_Angeles; Z; -08:30
z       time-zone name              zone-name         Pacific Standard Time; PST

(…)
</code></pre>
<p>That means you can parse it using the character <code>V</code> without providing a specific <code>Locale</code> to your <code>DateTimeFormatter</code>. You will have to put two of them (<code>VV</code>) or you will get a nice <code>IllegalArgumentException</code> with the following message:</p>
<pre class=""lang-none prettyprint-override""><code>java.lang.IllegalArgumentException: Pattern letter count must be 2: V
</code></pre>
<p>If you still want to use <code>z</code>, provide a <code>Locale</code> that considers <code>UTC</code> an abbreviation of <em>Universal Time Coordinated</em>, the <em>Central European Summer Time</em> is an abbreviation that definitely changes among different <code>Locale</code>s, e.g.</p>
<ul>
<li>English: <code>CEST</code></li>
<li>German:  <code>MESZ</code></li>
</ul>
<p>Other <code>Locale</code>s might have different abbreviations, which makes me wonder if your <code>Locale</code> actually even has a different one for <code>UTC</code>.<br />
Provide <code>Locale.ENGLISH</code>, for example and it should parse successfully.</p>
<p>You should provide one anyway because if you don't, the <code>DateTimeFormatter</code> will implicitly use the default <code>Locale</code> of your (Java Virtual) machine.</p>
<p>So you can try this:</p>
<pre class=""lang-java prettyprint-override""><code>DateTimeFormatter format = DateTimeFormatter.ofPattern(&quot;uuuu-MM-ddVVHH:mm&quot;);
</code></pre>
<p>or this:</p>
<pre class=""lang-java prettyprint-override""><code>DateTimeFormatter format = DateTimeFormatter.ofPattern(&quot;uuuu-MM-ddzHH:mm&quot;, Locale.ENGLISH);
</code></pre>
<p>both should be able to parse an input like <code>&quot;2022-05-24UTC12:15&quot;</code> <strong>if you use <code>HH</code> instead of <code>hh</code></strong> for hours of day (<code>hh</code> = 12h format, <code>HH</code> = 24h format).</p>
"
"72046624","1","Firebase Tools and Java 11","<p>This question falls somewhere between Firebase Tools, MacOS and Java. Probably 75% Java, 20% Firebase Tools and 5% MacOS.</p>
<p>Starting with v10.5, firebase-tools started stating that 'Support for Java version &lt;= 10 will be dropped soon in firebase-tools@11. Please upgrade to Java version 11 or above to continue using the emulators.'</p>
<p>I run macOS v11.6.5 on a Macbook Pro from mid-2014. When I go to <a href=""https://www.java.com/en/download/"" rel=""noreferrer"">Java's Downloads page</a>, it recommends Java 'Version 8 Update 331'. Not Java 11.</p>
<p>Information on downloading Java 11 seems to be scarce. Oracle's <a href=""https://www.oracle.com/java/technologies/javase/products-doc-jdk11certconfig.html"" rel=""noreferrer"">page of certified configurations</a> includes MacOS 11, but I can't find anywhere obvious where Java 11 can be readily downloaded.</p>
<p>A big part of the problem seems to be the terminology used. If I run <code>java -version</code>, I get:</p>
<pre><code>java version &quot;1.8.0_331&quot;
Java(TM) SE Runtime Environment (build 1.8.0_331-b09)
Java HotSpot(TM) 64-Bit Server VM (build 25.331-b09, mixed mode)
</code></pre>
<p>Okay, I have build 1.8 of the Java Runtime Environment, aka the JRE if you are a Java enthusiast. <a href=""https://github.com/firebase/firebase-tools/pull/4347/commits/9c2029cd0ed650a0403fb73ffe5bb1a8b989597f#diff-a1ad4cf0c9fac1cb8905b5f41ced4ca7dab42af061d383305738cc514a7923f3R442"" rel=""noreferrer"">That</a> is apparently what is triggering the warning in Firebase Tools.</p>
<p>There is also a Java product out there called 'Java SE 11'. The product itself is ambiguous, but the <a href=""https://www.oracle.com/a/tech/docs/11-0-15-1-checksum.html"" rel=""noreferrer"">checksums</a> all say 'SDK'. (A Software Development Kit: a thing that enables developers to develop Java programs. The name doesn't imply a Runtime Environment: a thing that enables Java to run on an operating system.) There is <a href=""https://java.tutorials24x7.com/blog/how-to-install-java-11-on-mac"" rel=""noreferrer"">an article</a> out there which claims that, if you <a href=""https://www.oracle.com/java/technologies/downloads/#java11"" rel=""noreferrer"">install Java SE 11</a> and run <code>java -version</code>, it will spit out <code>java version &quot;11.0.7&quot;</code>. That will probably satisfy Firebase Tools.</p>
<p>But <a href=""https://www.oracle.com/java/technologies/javase/11-relnote-issues.html"" rel=""noreferrer"">Oracle's release notes</a> say: 'In Windows and macOS, installing the JDK in previous releases optionally installed a JRE. In JDK 11, this is no longer an option.' No longer an option... as in now you implicitly get JRE 11 with SDK 11? Or as in the SDK and JRE are now fully divorced, and the JRE must be ferreted out of its hiding like a wild beast?</p>
<p>UPDATE 6/5/22: Java's checksums page now says 'JDK', and I guess that is better than 'SDK' because it implies 'Java Development Kit', which <a href=""https://en.wikipedia.org/wiki/Java_Development_Kit"" rel=""noreferrer"">this Wikipedia article</a> claims to include both a JRE ('java') and SDK (most of the other files).</p>
","72046625","<p>To install Java SE:</p>
<p>Go <a href=""https://www.oracle.com/java/technologies/downloads/"" rel=""nofollow noreferrer"">here</a>.</p>
<ol>
<li>Scroll down to find your product. I chose Java SE 11. (Oracle will probably list later versions as they are made available.)</li>
<li>Choose your operating system. I chose MacOS.</li>
<li>Choose your file set. I chose the DMG installer.</li>
<li>Download your chosen file set.</li>
</ol>
<p><a href=""https://i.stack.imgur.com/XkYUB.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/XkYUB.png"" alt=""Illustration"" /></a>
5. Do whatever is required by your platform to install Java SE using the downloaded file set from #5.</p>
<p>After installing Java SE 11, <code>java -version</code> now says <code>&quot;11.0.14&quot;</code> and Firebase Tools is now satisfied. My best guess is that JRE 11 was implicitly downloaded, and that developers need to start ignoring the <a href=""https://www.java.com/en/download/"" rel=""nofollow noreferrer"">main Download page</a> used by everyone else. (Why didn't the main Download page recommend Java 11 from the start?) Hopefully someone will see this question and clarify whether in the future, the 'Java SE' product implicitly includes both the JRE and SDK, and that the numbering system will always encompass both. In other words, hopefully when someone says we need 'Java 11', it means that we need to download SE 11, containing JRE 11 and SDK 11.</p>
"
"72140664","1","Azure build error: ""Android Gradle plugin requires Java 11 to run. You are currently using Java 1.8""","<p>When building <code>Flutter</code> app in <code>azure devOps</code>, I receive this error:</p>
<pre><code>Build file 'D:\a\1\s\android\app\build.gradle' line: 24

* What went wrong:
A problem occurred evaluating project ':app'.
&gt; Failed to apply plugin 'com.android.internal.application'.
   &gt; Android Gradle plugin requires Java 11 to run. You are currently using Java 1.8.
     You can try some of the following options:
       - changing the IDE settings.
       - changing the JAVA_HOME environment variable.
       - changing `org.gradle.java.home` in `gradle.properties`.
</code></pre>
<p>I've tried, these solutions:</p>
<ul>
<li>Creating <code>jitpack.yml</code> file, with <code>- openjdk11</code> value.</li>
<li>Adding below lines to <code>app/build.gradle</code> file inside <code>android {}</code> block:</li>
</ul>
<p>...</p>
<pre><code>compileOptions {

sourceCompatibility JavaVersion.VERSION_11

    targetCompatibility JavaVersion.VERSION_11
}

kotlinOptions {
    jvmTarget = JavaVersion.VERSION_11.toString()
}
</code></pre>
<p>And another solutions, but my error doesn't solve. By the way, I easily run app and build apk, locally on my mac without any errors, but when I push my code, Azure gives those build error.</p>
","72140711","<p>My error is solved by adding below lines into <code>azure-pipelines.yml</code> file:</p>
<pre><code>steps:
 - task: JavaToolInstaller@0
    inputs:
      versionSpec: '11'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'
</code></pre>
"
"73187929","1","Android Studio Chipmunk (2021.2.1) Java 8 library desugaring in D8 and R8 Build Error: ""Unsupported desugared library configuration version""","<p>After updating my apps build gradle and dependencies (I did not update Android Studio itself), Android Studio is giving me this error: <code>Error: Unsupported desugared library configuration version, please upgrade the D8/R8 compiler.</code>
Before the update everything compiled fine.</p>
<p>I am using:</p>
<ul>
<li><code>com.android.tools:desugar_jdk_libs:1.2.0</code> (This was the newest version I could find)</li>
<li>Gradle plugin version <code>7.2.0</code></li>
<li>Gradle version <code>7.5</code></li>
<li>Android Studio version <code>Chipmunk (2021.2.1)</code></li>
</ul>
<p>Did I configuration something wrong? How can I fix this? Thanks in advance!</p>
","73189430","<p>According to <a href=""https://developer.android.com/studio/write/java8-support#library-desugaring"" rel=""noreferrer"">this page</a>, the minimum version of Android Gradle plugin required is <code>7.3.0-beta03</code> to be able to upgrade the desugar library to <code>1.2.0</code>, and <code>7.3.x</code> is not yet available for Android Studio Chipmunk.</p>
"
"71080814","1","How to let JPArepository.save() do insert only and prevent update?","<p>I am using JPArepository.save() to insert the record to the database but it will automatically update the existing record in the database. What I want to do is let it throw exception if there are records with same primary key in the database.</p>
<p>I searched the solution in Google and find a solution that said use saveAndFlush instead of save can solve it. However, it still update the existing record after I used saveAndFlush.</p>
","73328759","<p>Finally, I've found the solution.
I just implement Persistable interface and ovrride the isNew() to be always true.</p>
<p>Example:</p>
<pre><code>@Entity
public class ChessGame implements Persistable&lt;Long&gt; {
 
    @Id
    private Long id;

 
    @Override
    public boolean isNew() {
        return true;
    }
}
</code></pre>
"
"72508332","1","Android Studio: ""attempting to assign weaker access privileges"" error on Room Database implementation","<p>I am trying to implement room database, I have gone through steps on <a href=""https://developer.android.com/training/data-storage/room"" rel=""noreferrer"">Official Website</a>, and 'AppDatabase.java' file is like this:</p>
<pre><code>import android.content.Context;
import androidx.room.Database;
import androidx.room.Room;
import androidx.room.RoomDatabase;

@Database(entities = {User.class}, version = 1)
public abstract class AppDatabase extends RoomDatabase {

    public static AppDatabase instance;
    public static synchronized AppDatabase getInstance(Context context){
        if (instance==null){
            instance = Room.databaseBuilder(context.getApplicationContext(),
                    AppDatabase.class, &quot;app_database&quot;).fallbackToDestructiveMigration().build();
        }
        return instance;
    }
}
</code></pre>
<p>And dependencies I have used for room:</p>
<pre><code>    // Room Database
    def room_version = &quot;2.4.2&quot;

    implementation &quot;androidx.room:room-runtime:$room_version&quot;
    annotationProcessor &quot;androidx.room:room-compiler:$room_version&quot;

    // optional - RxJava2 support for Room
    implementation &quot;androidx.room:room-rxjava2:$room_version&quot;

    // optional - RxJava3 support for Room
    implementation &quot;androidx.room:room-rxjava3:$room_version&quot;

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation &quot;androidx.room:room-guava:$room_version&quot;

    // optional - Test helpers
    testImplementation &quot;androidx.room:room-testing:$room_version&quot;

    // optional - Paging 3 Integration
    implementation &quot;androidx.room:room-paging:2.5.0-alpha02&quot;

    // Room Database
</code></pre>
<p>It returns 2 errors here:</p>
<pre><code>onCreate(SupportSQLiteDatabase) in &lt;anonymous com.example.testdb1.room.AppDatabase_Impl$1&gt; cannot override onCreate(SupportSQLiteDatabase) in Delegate
attempting to assign weaker access privileges; was public
</code></pre>
<pre><code>onValidateSchema(SupportSQLiteDatabase) in &lt;anonymous com.example.testdb1.room.AppDatabase_Impl$1&gt; cannot override onValidateSchema(SupportSQLiteDatabase) in Delegate
attempting to assign weaker access privileges; was public
</code></pre>
<p>It was working before the 'Chipmunk' version (was working in 'Bumblebee'), but it started throwing these errors.</p>
<p>What is going on here?</p>
","72518409","<p>To fix this error for Jetpack Compose and Paging 3 you only need to use only this libraries</p>
<pre><code>//ROOM
implementation &quot;androidx.room:room-runtime:2.4.2&quot;
kapt &quot;androidx.room:room-compiler:2.4.2&quot;
implementation &quot;androidx.room:room-ktx:2.4.2&quot;
implementation &quot;androidx.room:room-paging:2.4.2&quot;

// Paging 3.0
implementation 'androidx.paging:paging-compose:1.0.0-alpha15'
</code></pre>
"
"73330135","1","Regex for finding only single alphabets in a string and ignore consecutive double","<p>I have searched a lot but I am unable to find a regex that could select only single alphabets and double them while those alphabets which are already double, should remain untouched.</p>
<p>I tried</p>
<pre><code>String str = &quot;yahoo&quot;;
str = str.replaceAll(&quot;(\\w)\\1+&quot;, &quot;$0$0&quot;);
</code></pre>
<p>But since this <code>(\\w)\\1+</code> selects all double elements, my output becomes <code>yahoooo</code>. I tried to add negation to it <code>!(\\w)\\1+</code> but didn't work and output becomes same as input. I have tried</p>
<pre><code>str.replaceAll(&quot;.&quot;, &quot;$0$0&quot;);
</code></pre>
<p>But that doubles every character including which are already doubled.</p>
<p>Please help to write an <code>regex</code> that could replace all single character with double while double character should remain untouched.</p>
<h1>Example</h1>
<pre><code>abc -&gt; aabbcc
yahoo -&gt; yyaahhoo (o should remain untouched)
opinion -&gt; ooppiinniioonn
aaaaaabc -&gt; aaaaaabbcc
</code></pre>
","73330294","<p>You can match using this regex:</p>
<pre class=""lang-bash prettyprint-override""><code>((.)\2+)|(.)
</code></pre>
<p>And replace it with:</p>
<pre><code>$1$3$3
</code></pre>
<p><a href=""https://regex101.com/r/u1tgka/5"" rel=""nofollow noreferrer"">RegEx Demo</a></p>
<p><strong>RegEx Explanation:</strong></p>
<ul>
<li><code>((.)\2+)</code>: Match a character and capture in group #2 and using <code>\2+</code> next to it to make sure we match all multiple repeats of captured character. Capture all the repeated characters in group #1</li>
<li><code>|</code>: OR</li>
<li><code>(.)</code>: Match any character and capture in group #3</li>
</ul>
<p><a href=""https://ideone.com/IhRZ20"" rel=""nofollow noreferrer""><strong>Code Demo:</strong></a></p>
<pre><code>import java.util.List;
 
class Ideone {
 
    public static void main(String[] args) {
        List&lt;String&gt; input = List.of(&quot;aaa&quot;, &quot;abc&quot;, &quot;yahoo&quot;,
                &quot;opinion&quot;, &quot;aaaaaabc&quot;);
 
        for (String s: input) {
            System.out.println( s + &quot; =&gt; &quot; +
                  s.replaceAll(&quot;((.)\\2+)|(.)&quot;, &quot;$1$3$3&quot;) );
        }
    }
}
</code></pre>
<p><strong>Output:</strong></p>
<pre class=""lang-bash prettyprint-override""><code>aaa =&gt; aaa
abc =&gt; aabbcc
yahoo =&gt; yyaahhoo
opinion =&gt; ooppiinniioonn
aaaaaabc =&gt; aaaaaabbcc
</code></pre>
"
"71281032","1","Spring Security exposing AuthenticationManager without WebSecurityConfigurerAdapter","<p>I'm trying incoming Spring Boot 2.7.0-SNAPSHOT, which uses Spring Security 5.7.0, which deprecate <code>WebSecurityConfigurerAdapter</code>.</p>
<p>I read <a href=""https://spring.io/blog/2022/02/21/spring-security-without-the-websecurityconfigureradapter"" rel=""noreferrer"">this blog post</a>, but I'm not sure to understand how I can expose the default implementation of <code>AuthenticationManager</code> to my JWT authorization filter.</p>
<p>The old <code>WebSecurityConfig</code>, using <code>WebSecurityConfigurerAdapter</code> (works fine) :</p>
<pre class=""lang-java prettyprint-override""><code>@Configuration
@EnableGlobalMethodSecurity(prePostEnabled = true)
public class WebSecurityConfig extends WebSecurityConfigurerAdapter {

    @Autowired
    private JWTTokenUtils jwtTokenUtils;

    @Bean
    protected AuthenticationManager getAuthenticationManager() throws Exception {
        return authenticationManager();
    }

    @Override
    protected void configure(HttpSecurity http) throws Exception {
        http
                // disable CSRF as we do not serve browser clients
                .csrf().disable()
                // allow access restriction using request matcher
                .authorizeRequests()
                // authenticate requests to GraphQL endpoint
                .antMatchers(&quot;/graphql&quot;).authenticated()
                // allow all other requests
                .anyRequest().permitAll().and()
                // JWT authorization filter
                .addFilter(new JWTAuthorizationFilter(getAuthenticationManager(), jwtTokenUtils))
                // make sure we use stateless session, session will not be used to store user's state
                .sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS);
    }

}
</code></pre>
<p>The new <code>WebSecurityConfig</code> :</p>
<pre class=""lang-java prettyprint-override""><code>@Configuration
@EnableGlobalMethodSecurity(prePostEnabled = true)
public class WebSecurityConfig {

    @Autowired
    private JWTTokenUtils jwtTokenUtils;

    @Bean
    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
        final AuthenticationManager authenticationManager = http.getSharedObject(AuthenticationManager.class);
        http
                // disable CSRF as we do not serve browser clients
                .csrf().disable()
                // allow access restriction using request matcher
                .authorizeRequests()
                // authenticate requests to GraphQL endpoint
                .antMatchers(&quot;/graphql&quot;).authenticated()
                // allow all other requests
                .anyRequest().permitAll().and()
                // JWT authorization filter
                .addFilter(new JWTAuthorizationFilter(authenticationManager, jwtTokenUtils))
                // make sure we use stateless session, session will not be used to store user's state
                .sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS);
        return http.build();
    }

}
</code></pre>
<p>As you see I have no <code>AuthenticationManager</code> exposed bean anymore. I cannot get it from the <code>WebSecurityConfigurerAdapter</code>. So I tried to get it directly from the <code>HttpSecurity</code> in the <code>filterChain</code> method, so I can pass it to my JWT filter directly.</p>
<p>But I still need an <code>AuthenticationManager</code> bean to be exposed to my <code>JWTAuthorizationFilter</code> :</p>
<blockquote>
<p>Parameter 0 of constructor in com.example.config.security.JWTAuthorizationFilter required a bean of type 'org.springframework.security.authentication.AuthenticationManager' that could not be found.</p>
</blockquote>
<p>How can I expose it?</p>
<p>Here is the JWT authorization filter (checks the token and authenticate the user, I have a custom <code>UserDetailsService</code> which do the credentials check in the database) :</p>
<pre class=""lang-java prettyprint-override""><code>@Component
public class JWTAuthorizationFilter extends BasicAuthenticationFilter {

    private final JWTTokenUtils jwtTokenUtils;

    public JWTAuthorizationFilter(AuthenticationManager authManager, JWTTokenUtils jwtTokenUtils) {
        super(authManager);
        this.jwtTokenUtils = jwtTokenUtils;
    }

    @Override
    protected void doFilterInternal(HttpServletRequest req, HttpServletResponse res, FilterChain chain) throws IOException, ServletException {

        // retrieve request authorization header
        final String authorizationHeader = req.getHeader(&quot;Authorization&quot;);

        // authorization header must be set and start with Bearer
        if (authorizationHeader != null &amp;&amp; authorizationHeader.startsWith(&quot;Bearer &quot;)) {

            // decode JWT token
            final JWTTokenPayload jwtTokenPayload = jwtTokenUtils.decodeToken(authorizationHeader);

            // if user e-mail has been retrieved correctly from the token and if user is not already authenticated
            if (jwtTokenPayload.getEmail() != null &amp;&amp; SecurityContextHolder.getContext().getAuthentication() == null) {

                // authenticate user
                final UsernamePasswordAuthenticationToken authentication = new UsernamePasswordAuthenticationToken(jwtTokenPayload.getEmail(), null, Collections.singletonList(jwtTokenPayload.getRole()));

                // set authentication in security context holder
                SecurityContextHolder.getContext().setAuthentication(authentication);

            } else {
                log.error(&quot;Valid token contains no user info&quot;);
            }
        }
        // no token specified
        else {
            res.setStatus(HttpServletResponse.SC_BAD_REQUEST);
        }

        // pass request down the chain, except for OPTIONS requests
        if (!&quot;OPTIONS&quot;.equalsIgnoreCase(req.getMethod())) {
            chain.doFilter(req, res);
        }

    }

}
</code></pre>
<p>EDIT :</p>
<p>I realized I can manage to get the <code>authenticationManager</code> in my JWT filter using the method provided <a href=""https://github.com/spring-projects/spring-security/issues/10822#issuecomment-1036063319"" rel=""noreferrer"">in this issue</a>, but still I need an <code>AuthenticationManager</code> to be exposed globally because I also need it in my controller.</p>
<p>Here is the authentication controller which need the <code>authenticationManager</code> to be injected :</p>
<pre class=""lang-java prettyprint-override""><code>@RestController
@CrossOrigin
@Component
public class AuthController {

    @Autowired
    private JWTTokenUtils jwtTokenUtils;

    @Autowired
    private AuthenticationManager authenticationManager;

    @RequestMapping(value = &quot;/authenticate&quot;, method = RequestMethod.POST)
    public ResponseEntity&lt;?&gt; authenticate(@RequestBody JWTRequest userRequest) {

        // try to authenticate user using specified credentials
        final Authentication authentication = authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(userRequest.getEmail(), userRequest.getPassword()));

        // if authentication succeeded and is not anonymous
        if (authentication != null &amp;&amp; !(authentication instanceof AnonymousAuthenticationToken) &amp;&amp; authentication.isAuthenticated()) {

            // set authentication in security context holder
            SecurityContextHolder.getContext().setAuthentication(authentication);

            // get authorities, we should have only one role per member so simply get the first one
            final GrantedAuthority grantedAuthority = authentication.getAuthorities().iterator().next();

            // generate new JWT token
            final String jwtToken = jwtTokenUtils.generateToken(authentication.getPrincipal(), grantedAuthority);

            // return response containing the JWT token
            return ResponseEntity.ok(new JWTResponse(jwtToken));
        }

        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();

    }

}
</code></pre>
","72598317","<p>If you want the AuthenticationManager bean to be in the spring context, you can use the following solution.</p>
<pre><code>@Bean
public AuthenticationManager authenticationManager(AuthenticationConfiguration authenticationConfiguration) throws Exception {
     return authenticationConfiguration.getAuthenticationManager();
}
</code></pre>
<p>This approach has solved the problem for me and you can inject AuthenticationManager wherever you need.</p>
"
"72111416","1","Error inflating class com.google.android.material.button.MaterialButton","<p>What i'm trying to achieve is having a gridview with some materialButton inside.
I tried to create the gridview like :</p>
<pre><code>&lt;GridView
            android:id=&quot;@+id/login_gridview_code_input&quot;
            android:layout_width=&quot;match_parent&quot;
            android:layout_height=&quot;wrap_content&quot;
            android:numColumns=&quot;3&quot;
            android:horizontalSpacing=&quot;15dp&quot;
            android:verticalSpacing=&quot;15dp&quot;&gt;
        &lt;/GridView&gt;
</code></pre>
<p>And the element to be inflated like:</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;&gt;

        &lt;com.google.android.material.button.MaterialButton
            android:id=&quot;@+id/button_code_digit&quot;
            style=&quot;@style/Widget.MaterialComponents.Button.OutlinedButton.Icon&quot;
            android:layout_width=&quot;50dp&quot;
            android:layout_height=&quot;50dp&quot;
            android:insetLeft=&quot;0dp&quot;
            android:insetTop=&quot;0dp&quot;
            android:insetRight=&quot;0dp&quot;
            android:insetBottom=&quot;0dp&quot;
            android:padding=&quot;0dp&quot;
            app:iconGravity=&quot;textStart&quot;
            app:iconPadding=&quot;0dp&quot;
            app:iconSize=&quot;40dp&quot;
            app:layout_constraintBottom_toBottomOf=&quot;parent&quot;
            app:layout_constraintEnd_toEndOf=&quot;parent&quot;
            app:layout_constraintStart_toStartOf=&quot;parent&quot;
            app:layout_constraintTop_toTopOf=&quot;parent&quot;
            app:shapeAppearanceOverlay=&quot;@style/ShapeAppearanceOverlay.pswStorer.Button.Circle&quot; /&gt;

&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;
</code></pre>
<p>the adapter inflates the button :</p>
<pre><code>inflter = (LayoutInflater.from(applicationContext)); 
view = inflter.inflate(R.layout.button_code, null); // inflate the layout
</code></pre>
<p>but I always receive this stacktrace :</p>
<pre><code>Error inflating class com.google.android.material.button.MaterialButton
Caused by: java.lang.IllegalArgumentException: The style on this component requires your app theme to be Theme.MaterialComponents (or a descendant).
</code></pre>
<p>I checked the appTheme but seems correct to me:</p>
<pre><code>&lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.MaterialComponents.DayNight.NoActionBar&quot;&gt;
        &lt;!-- Customize your theme here. --&gt;
        &lt;item name=&quot;colorPrimary&quot;&gt;@color/colorPrimary&lt;/item&gt;
        &lt;item name=&quot;colorPrimaryDark&quot;&gt;@color/colorPrimaryDark&lt;/item&gt;
        &lt;item name=&quot;colorAccent&quot;&gt;@color/colorAccent&lt;/item&gt;
        &lt;item name=&quot;materialAlertDialogTheme&quot;&gt;@style/AlertDialogMaterialTheme&lt;/item&gt;
    &lt;/style&gt;
</code></pre>
<p>Any ideas?</p>
<p>EDIT: I tried to check and my app has the correct theme</p>
<pre><code>android:theme=&quot;@style/AppTheme&quot;
</code></pre>
<p>I also changed the theme to <strong>Theme.MaterialComponents.DayNight.NoActionBar.Bridge</strong> but nothing changed</p>
","72169923","<p>The issue is here.</p>
<pre><code>inflter = (LayoutInflater.from(applicationContext)); 
</code></pre>
<p>The <strong>Application context</strong> doesn't have your app theme.<br />
You have to use a themed context like an <code>Activity</code>.</p>
"
"72684930","1","Convert List<char[]> into an Array char[] without using System.arraycopy()","<p>What's a simple way to convert/flatten a <code>List&lt;char[]&gt;</code> to <code>char[]</code> in Java?</p>
<p>I know I can do it by iterating the <code>List</code> and using <code>System.arraycopy</code>,  but I'm wondering is there a simpler way to do it using Java 8 streams?</p>
<p>Maybe something like this, but without having to box the primitive <code>char</code> to <code>Character</code>:</p>
<pre><code>List&lt;char[]&gt; listOfCharArrays = ...

Character[] charArray =
    Stream.of(listOfCharArrays )
        .flatMap(List::stream)
        .toArray(Character[]::new);
</code></pre>
","72685373","<p>I can think of only one thing, and that is to use <a href=""https://docs.oracle.com/javase/8/docs/api/java/nio/CharBuffer.html"" rel=""nofollow noreferrer""><code>CharBuffer</code></a>. For efficiency reasons I would always first calculate the right size, and then perform the copy. Any solution that performs multiple copies and/or performs string handling will be inefficient.</p>
<p>Here's the code. The first line calculates the total size of the array required, and then allocates just enough memory for it. The second line performs the copying using the aforementioned <code>put</code> method. The final line returns the <code>char[]</code> that is backing the <code>CharBuffer</code>.</p>
<pre><code>CharBuffer fullBuffer = CharBuffer.allocate(
        listOfCharArrays.stream().mapToInt(array -&gt; array.length).sum());
listOfCharArrays.forEach(fullBuffer::put);
char[] asCharArray = fullBuffer.array();
</code></pre>
<p>Of course, I cannot guarantee that it won't use <code>System.arrayCopy</code> somewhere inside of the <a href=""https://docs.oracle.com/javase/8/docs/api/java/nio/CharBuffer.html#put-char:A-"" rel=""nofollow noreferrer""><code>CharBuffer#put</code></a> method. I would strongly expect that it will use <code>System.arrayCopy</code> or similar code internally. That probably goes for most solutions provided here though.</p>
<p>It is possible to avoid the first size calculation by using a large enough buffer if you can estimate a maximum size, but it would require an additional copy of the data in the buffer; <a href=""https://docs.oracle.com/javase/8/docs/api/java/nio/CharBuffer.html#array--"" rel=""nofollow noreferrer""><code>CharBuffer#array</code></a> <em>simply returns the correctly sized backing array</em>, which means that the data <strong>is copied only once</strong>.</p>
<hr />
<p>You can also use <code>CharBuffer</code> directly if you want to use object oriented code. Beware that you need to make sure that you <a href=""https://docs.oracle.com/javase/8/docs/api/java/nio/Buffer.html#flip--"" rel=""nofollow noreferrer""><code>flip</code></a> it after writing to it though, and that <code>CharBuffer</code> is mutable (you can pass copies using the <code>duplicate</code> or <code>asReadOnly</code> methods - the returned instances reference the same buffer, but have independent, mutable &quot;position&quot; and &quot;limit&quot; fields).</p>
<p>The <code>Buffer</code> and Java NIO classes are slightly tricky to understand, but once you do you get great benefits from them, e.g. when using them for <code>CharEncoder</code> or memory mapped files.</p>
"
"74011238","1","Understanding Java 17 Vector slowness and performance with pow operator","<p>I have a question relating to the pow() function in Java's 17 new Vector API feature. I'm trying to implement the black scholes formula in a vectorized manner, but I'm having difficulty in obtaining the same performance as the scalar implementation</p>
<p>The code is as follows:</p>
<ol>
<li>I create an array of doubles (currently, just 5.0)</li>
<li>I loop over elements of that array (different looping syntax for scalar and vector)</li>
<li>I create DoubleVectors from the double arrays within and do calculations (or just calculations for scalar) I am trying to do e^(value), and I believe that is the problem</li>
</ol>
<p>Here are some code snippets:</p>
<pre><code>    public static double[] createArray(int arrayLength)
    {
        double[] array0 = new double[arrayLength];
        for(int i=0;i&lt;arrayLength;i++)
        {
            array0[i] = 2.0;
        }
        return array0;
    } 
</code></pre>
<pre><code>    @Param({&quot;256000&quot;})
    int arraySize;
    public static final VectorSpecies&lt;Double&gt; SPECIES = DoubleVector.SPECIES_PREFERRED;
    DoubleVector vectorTwo =  DoubleVector.broadcast(SPECIES,2);
    DoubleVector vectorHundred =  DoubleVector.broadcast(SPECIES,100);

    double[] scalarTwo = new double[]{2,2,2,2};
    double[] scalarHundred  = new double[]{100,100,100,100};

    @Setup
    public void Setup()
    {
        javaSIMD = new JavaSIMD();
        javaScalar = new JavaScalar();
        spotPrices = createArray(arraySize);
        timeToMaturity = createArray(arraySize);
        strikePrice = createArray(arraySize);
        interestRate = createArray(arraySize);
        volatility = createArray(arraySize);
        e = new double[arraySize];
        for(int i=0;i&lt;arraySize;i++)
        {
            e[i] = Math.exp(1);
        }
        upperBound = SPECIES.loopBound(spotPrices.length);
    }
    @Benchmark
    @BenchmarkMode(Mode.Throughput)
    @OutputTimeUnit(TimeUnit.MILLISECONDS)
    public void testVectorPerformance(Blackhole bh) {
        var upperBound = SPECIES.loopBound(spotPrices.length);
        for (var i=0;i&lt;upperBound; i+= SPECIES.length())
        {
            bh.consume(javaSIMD.calculateBlackScholesSingleCalc(spotPrices,timeToMaturity,strikePrice,
                    interestRate,volatility,e, i));
        }
    }

    @Benchmark
    @BenchmarkMode(Mode.Throughput)
    @OutputTimeUnit(TimeUnit.MILLISECONDS)
    public void testScalarPerformance(Blackhole bh) {
        for(int i=0;i&lt;arraySize;i++)
        {
            bh.consume(javaScalar.calculateBlackScholesSingleCycle(spotPrices,timeToMaturity,strikePrice,
                    interestRate,volatility, i,normDist));
        }
    }
</code></pre>
<pre><code>    public DoubleVector calculateBlackScholesSingleCalc(double[] spotPrices, double[] timeToMaturity, double[] strikePrice,
                                                        double[] interestRate, double[] volatility, double[] e,int i){
...(skip lines)
        DoubleVector vSpot = DoubleVector.fromArray(SPECIES, spotPrices, i);
...(skip lines)
        DoubleVector powerOperand = vRateScaled
                .mul(vTime)
                .neg();
        DoubleVector call  = (vSpot
                .mul(CDFVectorizedExcelOptimized(d1,vE)))
                .sub(vStrike
                .mul(vE
                        .pow(powerOperand))
                .mul(CDFVectorizedExcelOptimized(d2,vE)));
        return call;
</code></pre>
<p>Here are some JMH benchmarks (2 forks,2 warmups,2 iterations) on a Ryzen 5800X using WSL: Overall, it seems ~2x slower vs the scalar version.  I ran a simple time before vs time after separately, of the method without JMH and it seems inline.</p>
<pre><code>Result &quot;blackScholes.TestJavaPerf.testScalarPerformance&quot;:
  0.116 ±(99.9%) 0.002 ops/ms [Average]
       89873915287      cycles:u                  #    4.238 GHz                      (40.43%)
      242060738532      instructions:u            #    2.69  insn per cycle   

      
Result &quot;blackScholes.TestJavaPerf.testVectorPerformance&quot;:
  0.071 ±(99.9%) 0.001 ops/ms [Average]
       90878787665      cycles:u                  #    4.072 GHz                      (39.25%)
      254117779312      instructions:u            #    2.80  insn per cycle  
</code></pre>
<p>I also enabled diagnostic options for the JVM. I see the following:</p>
<pre><code>&quot;-XX:+UnlockDiagnosticVMOptions&quot;, &quot;-XX:+PrintIntrinsics&quot;,&quot;-XX:+PrintAssembly&quot;
</code></pre>
<pre><code>  0x00007fe451959413:   call   0x00007fe451239f00           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - jdk.incubator.vector.DoubleVector::arrayAddress@-1 (line 3283)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x00007fe451959418:   jmp    0x00007fe4519593ce
  0x00007fe45195941a:   movabs $0x7fe4519593ee,%r10         ;   {internal_word}
  0x00007fe451959424:   mov    %r10,0x358(%r15)
  0x00007fe45195942b:   jmp    0x00007fe451193100           ;   {runtime_call SafepointBlob}
  0x00007fe451959430:   nop
  0x00007fe451959431:   nop
  0x00007fe451959432:   mov    0x3d0(%r15),%rax
  0x00007fe451959439:   movq   $0x0,0x3d0(%r15)
  0x00007fe451959444:   movq   $0x0,0x3d8(%r15)
  0x00007fe45195944f:   add    $0x40,%rsp
  0x00007fe451959453:   pop    %rbp
  0x00007fe451959454:   jmp    0x00007fe451231e80           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00007fe451959459:   hlt    
&lt;More halts cut off&gt;   
[Exception Handler]
  0x00007fe451959460:   call   0x00007fe451234580           ;   {no_reloc}
  0x00007fe451959465:   movabs $0x7fe46e76df9a,%rdi         ;   {external_word}
  0x00007fe45195946f:   and    $0xfffffffffffffff0,%rsp
  0x00007fe451959473:   call   0x00007fe46e283d40           ;   {runtime_call}
  0x00007fe451959478:   hlt    
[Deopt Handler Code]
  0x00007fe451959479:   movabs $0x7fe451959479,%r10         ;   {section_word}
  0x00007fe451959483:   push   %r10
  0x00007fe451959485:   jmp    0x00007fe4511923a0           ;   {runtime_call DeoptimizationBlob}
  0x00007fe45195948a:   hlt    
&lt;More halts cut off&gt;
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
  ** svml call failed for double_pow_32
                                            @ 3   jdk.internal.misc.Unsafe::loadFence (0 bytes)   (intrinsic)
                                            @ 3   jdk.internal.misc.Unsafe::loadFence (0 bytes)   (intrinsic)
                                          @ 2   java.lang.Math::pow (6 bytes)   (intrinsic)
</code></pre>
<p>Investigations/Questions:</p>
<ol>
<li>Im writing different implementations of the formula, it is not 1:1 - could this be the cause? Looking at the number of instructions according to JMH, there is roughly a 12billion difference in num of instructions. With vectorization the processor runs at a lower clock rate as well.</li>
<li>Is the choice of input numbers a problem? I've tried i+10/(array.Length) as well.</li>
<li>Is there a reason I see that the SVML call fail for double_pow_32 ? I don't see this problem for smaller input array sizes BTW</li>
<li>I changed the pow to mul (for both,obviously the eq is now very different) but it seems to be much faster as a result, results are as expected scalar vs vector</li>
</ol>
<p>Note: I believe it is using 256bit width vectors (checked during debugging)</p>
","74017185","<p>This might be related to <a href=""https://bugs.openjdk.org/browse/JDK-8262275"" rel=""noreferrer"">JDK-8262275, Math vector stubs are not called for double64 vectors</a></p>
<blockquote>
<p>For Double64Vector, the svml math vector stubs intrinsification is failing and they are not being called from jitted code.<br />
But we do have svml double64 vectors.</p>
</blockquote>
<p>You might try alternative operations, e.g. instead of <code>vE.pow(powerOperand)</code> with <code>vE</code> being a vector of <em>e</em>, you can use <code>powerOperand.lanewise(VectorOperators.EXP)</code> to perform <em>e</em><sup>x</sup> for all lanes.</p>
<p>Keep in mind that this API is work in progress in incubator state…</p>
"
"72192789","1","CteInsertStrategy can only be used with Dialects that support CTE that can take UPDATE or DELETE statements as well","<p>Hibernate 6.0.1 with PostgreSQL JDBC driver 42.3.5 causes the following exception:</p>
<pre><code>java.lang.UnsupportedOperationException:
CteInsertStrategy can only be used with Dialects that support CTE that can take UPDATE or DELETE statements as well
at org.hibernate.query.sqm.mutation.internal.cte.CteInsertStrategy.&lt;init&gt;(CteInsertStrategy.java:123)
at org.hibernate.query.sqm.mutation.internal.cte.CteInsertStrategy.&lt;init&gt;(CteInsertStrategy.java:107)
at org.hibernate.dialect.PostgreSQLDialect.getFallbackSqmInsertStrategy(PostgreSQLDialect.java:704)
...
</code></pre>
<p>What's wrong and how can I fix the issue?</p>
<p>MyEntity.java</p>
<pre class=""lang-java prettyprint-override""><code>import jakarta.persistence.*;

@Entity
@Table(name = &quot;my_entity&quot;)
public class MyEntity {

    private Long id;

    @Id
    @SequenceGenerator(name = &quot;id_sequence&quot;, sequenceName = &quot;my_id_sequence&quot;)
    @GeneratedValue(strategy = GenerationType.AUTO, generator = &quot;id_sequence&quot;)
    public Long getId() {
        return this.id;
    }
    public void setId(Long id) {
        this.id = id;
    }

}
</code></pre>
<p>MyTest.java</p>
<pre class=""lang-java prettyprint-override""><code>import static org.junit.Assert.assertNotNull;

import org.hibernate.*;
import org.hibernate.cfg.*;
import org.junit.*;

public class MyTest {

    private static Configuration configuration;
    private static SessionFactory sessionFactory;

    @BeforeClass
    public static void setUpBeforeClass() throws Exception {
        configuration = new Configuration().configure();
        sessionFactory = configuration.buildSessionFactory();
    }

    @AfterClass
    public static void tearDownAfterClass() throws Exception {
        sessionFactory.close();
    }

    private Session session;

    @Before
    public void setUp() throws Exception {
        session = sessionFactory.openSession();
    }

    @After
    public void tearDown() throws Exception {
        session.close();
    }

    @Test
    public void test() {
        Transaction transaction = session.beginTransaction();
        MyEntity entity = new MyEntity();
        session.persist(entity);
        assertNotNull(entity.getId());
        transaction.commit();
    }

}
</code></pre>
<p>hibernate.cfg.xml</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;!DOCTYPE hibernate-configuration SYSTEM &quot;classpath://org/hibernate/hibernate-configuration-3.0.dtd&quot;&gt;
&lt;hibernate-configuration&gt;
  &lt;session-factory&gt;
    &lt;property name=&quot;hibernate.connection.driver_class&quot;&gt;org.postgresql.Driver&lt;/property&gt;
    &lt;property name=&quot;hibernate.dialect&quot;&gt;org.hibernate.dialect.PostgreSQLDialect&lt;/property&gt;  
    &lt;property name=&quot;hibernate.connection.url&quot;&gt;jdbc:postgresql://localhost:5432/mydb&lt;/property&gt;
    &lt;property name=&quot;hbm2ddl.auto&quot;&gt;update&lt;/property&gt;
    &lt;property name=&quot;hibernate.connection.username&quot;&gt;postgres&lt;/property&gt;
    &lt;property name=&quot;hibernate.temp.use_jdbc_metadata_defaults&quot;&gt;false&lt;/property&gt;
    &lt;property name=&quot;hibernate.c3p0.min_size&quot;&gt;1&lt;/property&gt;
    &lt;property name=&quot;hibernate.c3p0.max_size&quot;&gt;30&lt;/property&gt;
    &lt;property name=&quot;hibernate.c3p0.timeout&quot;&gt;120&lt;/property&gt;
    &lt;property name=&quot;hibernate.c3p0.max_statements&quot;&gt;100&lt;/property&gt;
    &lt;mapping class=&quot;haba713.MyEntity&quot; /&gt;
  &lt;/session-factory&gt;
&lt;/hibernate-configuration&gt;
</code></pre>
<p>build.gradle</p>
<pre><code>plugins {
    id 'java-library'
}

repositories {
    mavenCentral()
}

ext {
    hibernateVersion = '6.0.1.Final'
}

dependencies {
    implementation 'org.postgresql:postgresql:42.3.5'
    implementation 'org.hibernate.orm:hibernate-c3p0:' + hibernateVersion
    implementation 'org.hibernate.orm:hibernate-core:' + hibernateVersion
    testImplementation 'junit:junit:4.13.2'
}
</code></pre>
<p>See the full source code <a href=""https://github.com/haba713/hibernate-cte-insert-strategy-issue"" rel=""noreferrer"">here</a>.</p>
","72207378","<p>The configuration property <code>use_jdbc_metadata_defaults</code> must be <code>true</code> for Hibernate to detect the correct version of the PostgreSQL dialect.</p>
<p>Removing this line</p>
<pre><code>&lt;property name=&quot;hibernate.temp.use_jdbc_metadata_defaults&quot;&gt;false&lt;/property&gt;
</code></pre>
<p>from <code>hibernate.cfg.xml</code> resolves the issue.</p>
<p>(Thanks to Christian at <a href=""https://hibernate.zulipchat.com"" rel=""nofollow noreferrer"">Hibernate Zulip channel</a> for sorting this out.)</p>
"
"72712390","1","Defining additional placeholder/property only in beans.xml","<p>I have a list of strings, that i would like to define in beans.xml.</p>
<pre><code>&lt;util:list id=&quot;myFractions&quot; value-type=&quot;java.lang.String&quot;&gt;
    &lt;value&gt;#{ T(com.myapp.longname.verylong.WelcomeController).RED_FRACTION }&lt;/value&gt;
    &lt;value&gt;#{ T(com.myapp.longname.verylong.WelcomeController).BLUE_FRACTION }&lt;/value&gt;
    &lt;value&gt;#{ T(${my.prefix}).GREEN_FRACTION }&lt;/value&gt;
&lt;/util:list&gt;
</code></pre>
<p>It works fine, but each time I need to write the full qualified constant's name <code>com.myapp.longname.verylong.WelcomeController</code>. I would like to write it only once. One solution I have found is to replace it with a property like <code>my.prefix</code> so I can write only my short prefix instead of the real full path. But then I will need to pollute the global &quot;namespace&quot; with property that is only needed once. I would like to define a placeholder only for this list or at least only for this beans.xml file. I have already tried to define a property directly in beans.xml with <code>PropertyPlaceholderConfigurer</code> and it works, but then all my inital properties are not available anymore.</p>
<p>So how can I avoid to  writing <code>com.myapp.longname.verylong.WelcomeController</code> each time in a list as a prefix and only define it once? Ideally something like</p>
<pre><code>&lt;util:list id=&quot;myFractions&quot; value-type=&quot;java.lang.String&quot;&gt;
    &lt;define-local-placeholder name=&quot;my.prefix&quot; value=&quot;com.myapp.longname.verylong.WelcomeController&quot; /&gt;
    &lt;value&gt;#{ T(${my.prefix}).RED_FRACTION }&lt;/value&gt;
    &lt;value&gt;#{ T(${my.prefix}).BLUE_FRACTION }&lt;/value&gt;
    &lt;value&gt;#{ T(${my.prefix}).GREEN_FRACTION }&lt;/value&gt;
&lt;/util:list&gt;
</code></pre>
","72776113","<p>Please give a try on this</p>
<pre><code>&lt;context:property-placeholder properties-ref=&quot;shorthandHelperConstants&quot;/&gt;

&lt;util:properties id=&quot;shorthandHelperConstants&quot;&gt;
    &lt;prop key=&quot;my.prefix&quot;&gt;com.myapp.longname.verylong.WelcomeController&lt;/prop&gt;
&lt;/util:properties&gt;

&lt;util:list id=&quot;myFractions&quot; value-type=&quot;java.lang.String&quot;&gt;
    &lt;value&gt;#{ T(${shorthandHelperConstants['my.prefix']}).RED_FRACTION }&lt;/value&gt;
    &lt;value&gt;#{ T(${shorthandHelperConstants['my.prefix']}).BLUE_FRACTION }&lt;/value&gt;
    &lt;value&gt;#{ T(${shorthandHelperConstants['my.prefix']}).GREEN_FRACTION }&lt;/value&gt;
&lt;/util:list&gt;
</code></pre>
"
"74356407","1","How to get the date and time in format 2022-10-03T19:45:47.844Z in Java","<p>I need the current system date and time in 2022-10-03T19:45:47.844Z format in a java class.</p>
<p>I tried using the zoneddatetime and simple date format but couldn't get the write syntax or code from online. I'm beginner in Java, any help is appreciated.
Thanks.</p>
","74356572","<p>I hope this solves your problem:</p>
<pre><code>import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;

public class Main {
    public static void main(String[] args) {
        ZonedDateTime zdt = ZonedDateTime.now(ZoneId.of(&quot;UTC&quot;));
        DateTimeFormatter formatter =
                DateTimeFormatter.ofPattern(&quot;yyyy-MM-dd'T'HH:mm:ss.SSS'Z'&quot;);
        System.out.println(zdt.format(formatter));
    }
}
</code></pre>
"
"72989618","1","Does the order of if else matter for performance? e.g. put the most likely condition in the front is better","<p>I'm trying to measure if the order of <code>if else</code> affects performance.</p>
<p>For example, if</p>
<pre class=""lang-java prettyprint-override""><code>if (condition == more likely condition) {}
else /** condition == rare condition **/ {}
</code></pre>
<p>is faster than</p>
<pre class=""lang-java prettyprint-override""><code>if (condition == rare condition) {}
else /** condition == more likely condition **/ {}
</code></pre>
<p>I think maybe JIT should be able to optimise it no matter which order I put it? Couldn't find any documentation on this though.</p>
<p>I tried to test it out myself with following benchmark. Based on it, I don't see strong evidence that the order matters. Because if it does, I think the throughput when <code>bias=0.9</code> (probability of <code>if (zeroOrOne == 1)</code> is true is 0.9) should be higher than when <code>bias=0.1</code> (<code>else</code> probability is 0.9).</p>
<pre class=""lang-java prettyprint-override""><code>public class BranchBench {
    @Param({ &quot;0.02&quot;, &quot;0.1&quot;, &quot;0.9&quot;, &quot;0.98&quot;, })
    private double bias;

    @Param(&quot;10000&quot;)
    private int count;

    private final List&lt;Byte&gt; randomZeroOnes = new ArrayList&lt;&gt;(count);

    @Setup
    public void setup() {
        Random r = new Random(12345);

        for (int c = 0; c &lt; count; c++) {
            byte zeroOrOne = (byte) (c &lt; (bias * count) ? 1 : 0);
            randomZeroOnes.add(zeroOrOne);
        }
        Collections.shuffle(randomZeroOnes, r);
    }

    @Benchmark
    public int static_ID_ifElse() {
        int i = 0;
        for (final Byte zeroOrOne : randomZeroOnes) {
            if (zeroOrOne == 1) {
                i++;
            } else {
                i--;
            }
        }
        return i;
    }
}
</code></pre>
<pre><code>Benchmark                     (bias)  (count)   Mode  Cnt    Score   Error   Units
BranchBench.static_ID_ifElse    0.02    10000  thrpt   15  137.409 ± 1.376  ops/ms
BranchBench.static_ID_ifElse     0.1    10000  thrpt   15  129.277 ± 1.552  ops/ms
BranchBench.static_ID_ifElse     0.9    10000  thrpt   15  125.640 ± 5.858  ops/ms
BranchBench.static_ID_ifElse    0.98    10000  thrpt   15  137.427 ± 2.396  ops/ms
</code></pre>
","72989924","<p>On modern processors I don't think the order of your conditionals really matter that much anymore. As part of the instruction pipeline, processors will do what is called <em>branch prediction</em>; where it guesses which condition will be true and pre-loads the instructions into the pipeline.</p>
<p>These days, processors guess correctly &gt;90% of the time, so any hand-written conditional tweaking is less important.</p>
<p>There are quite a lot of literature on branch prediction:</p>
<p><a href=""https://dzone.com/articles/branch-prediction-in-java"" rel=""nofollow noreferrer"">https://dzone.com/articles/branch-prediction-in-java</a></p>
<p><a href=""https://www.baeldung.com/java-branch-prediction"" rel=""nofollow noreferrer"">https://www.baeldung.com/java-branch-prediction</a></p>
"
"72434319","1","entityManagerFactory bean not configured issue with hibernate 6.0.2.Final and spring boot 2.7.0","<p>so recently i thought of upgrading few dependency of my spring boot project project
specifically these components</p>
<ul>
<li>jakarat ee 9</li>
<li>spring boot 2.7</li>
<li>hibernate 6.0.2.Final</li>
</ul>
<p>after doing this all updates and code refraction: updating imports javax to jakarta, and for few hibernate annotations</p>
<p>I removed the old hibernate from my local .m2 repository and run this command this <code>mvn clean install test package</code></p>
<p>and started the project in intellij and it gave be below error:</p>
<pre><code>16:15:42.410 [Thread-0] DEBUG org.springframework.boot.devtools.restart.classloader.RestartClassLoader - Created RestartClassLoader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@429054cc

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v2.7.0)

2022-05-30 16:15:42.787  INFO 99522 --- [  restartedMain] com.zee.oms.order.Order                  : Starting Order using Java 17.0.2 on ZL-BLR-MAC170.local with PID 99522 (/Users/manish.prasad/Documents/ZEE-Services/github/zee5-order/target/classes started by manish.prasad in /Users/manish.prasad/Documents/ZEE-Services/github/zee5-order)
2022-05-30 16:15:42.787 DEBUG 99522 --- [  restartedMain] com.zee.oms.order.Order                  : Running with Spring Boot v2.7.0, Spring v5.3.20
2022-05-30 16:15:42.787  INFO 99522 --- [  restartedMain] com.zee.oms.order.Order                  : No active profile set, falling back to 1 default profile: &quot;default&quot;
2022-05-30 16:15:42.818  INFO 99522 --- [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-05-30 16:15:42.818  INFO 99522 --- [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-05-30 16:15:43.347  INFO 99522 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-05-30 16:15:43.433  INFO 99522 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 81 ms. Found 4 JPA repository interfaces.
2022-05-30 16:15:43.862  INFO 99522 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-05-30 16:15:43.868  INFO 99522 --- [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-05-30 16:15:43.868  INFO 99522 --- [  restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.63]
2022-05-30 16:15:43.902  INFO 99522 --- [  restartedMain] o.a.c.c.C.[.[localhost].[/order-srv]     : Initializing Spring embedded WebApplicationContext
2022-05-30 16:15:43.902  INFO 99522 --- [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1084 ms
2022-05-30 16:15:44.059  WARN 99522 --- [  restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderController': Unsatisfied dependency expressed through field 'orderService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderServiceImpl': Unsatisfied dependency expressed through field 'orderRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'orderRepository' defined in com.zee.oms.order.repository.OrderRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot create inner bean '(inner bean)#14203bc' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#14203bc': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'entityManagerFactory' available
2022-05-30 16:15:44.061  INFO 99522 --- [  restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2022-05-30 16:15:44.072  INFO 99522 --- [  restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-05-30 16:15:44.080 ERROR 99522 --- [  restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field orderRepository in com.oms.order.service.impl.OrderServiceImpl required a bean named 'entityManagerFactory' that could not be found.

The injection point has the following annotations:
    - @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean named 'entityManagerFactory' in your configuration.


Process finished with exit code 0 
</code></pre>
<p>this is my pom:</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;
         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
    &lt;parent&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
        &lt;version&gt;2.7.0&lt;/version&gt;
        &lt;relativePath/&gt;
    &lt;/parent&gt;

    &lt;groupId&gt;com.zee&lt;/groupId&gt;
    &lt;artifactId&gt;zee5-order&lt;/artifactId&gt;
    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
    &lt;name&gt;order&lt;/name&gt;
    &lt;description&gt;Spring Boot project for order-service&lt;/description&gt;
    &lt;properties&gt;
        &lt;java.version&gt;17&lt;/java.version&gt;
        &lt;hibernate.version&gt;6.0.2.Final&lt;/hibernate.version&gt;
    &lt;/properties&gt;

    &lt;dependencies&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;
            &lt;scope&gt;runtime&lt;/scope&gt;
            &lt;optional&gt;true&lt;/optional&gt;
        &lt;/dependency&gt;
        &lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;
            &lt;artifactId&gt;lombok&lt;/artifactId&gt;
            &lt;scope&gt;provided&lt;/scope&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;
            &lt;scope&gt;test&lt;/scope&gt;
        &lt;/dependency&gt;
        &lt;!-- https://mvnrepository.com/artifact/org.mockito/mockito-all --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.mockito&lt;/groupId&gt;
            &lt;artifactId&gt;mockito-all&lt;/artifactId&gt;
            &lt;version&gt;1.10.19&lt;/version&gt;
            &lt;scope&gt;test&lt;/scope&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.postgresql&lt;/groupId&gt;
            &lt;artifactId&gt;postgresql&lt;/artifactId&gt;
            &lt;scope&gt;runtime&lt;/scope&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.hibernate&lt;/groupId&gt;
            &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;
            &lt;version&gt;7.0.4.Final&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;jakarta.validation&lt;/groupId&gt;
            &lt;artifactId&gt;jakarta.validation-api&lt;/artifactId&gt;
            &lt;version&gt;3.0.2&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springdoc&lt;/groupId&gt;
            &lt;artifactId&gt;springdoc-openapi-ui&lt;/artifactId&gt;
            &lt;version&gt;1.6.8&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springdoc&lt;/groupId&gt;
            &lt;artifactId&gt;springdoc-openapi-data-rest&lt;/artifactId&gt;
            &lt;version&gt;1.6.8&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springdoc&lt;/groupId&gt;
            &lt;artifactId&gt;springdoc-openapi-webmvc-core&lt;/artifactId&gt;
            &lt;version&gt;1.6.8&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springdoc&lt;/groupId&gt;
            &lt;artifactId&gt;springdoc-openapi-webflux-ui&lt;/artifactId&gt;
            &lt;version&gt;1.6.8&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.flywaydb&lt;/groupId&gt;
            &lt;artifactId&gt;flyway-core&lt;/artifactId&gt;
            &lt;version&gt;8.5.10&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.common-utility&lt;/groupId&gt;
            &lt;artifactId&gt;common-utility&lt;/artifactId&gt;
            &lt;version&gt;1.0&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.amazonaws&lt;/groupId&gt;
            &lt;artifactId&gt;aws-java-sdk-secretsmanager&lt;/artifactId&gt;
            &lt;version&gt;1.12.220&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.h2database&lt;/groupId&gt;
            &lt;artifactId&gt;h2&lt;/artifactId&gt;
            &lt;version&gt;2.1.212&lt;/version&gt;
            &lt;scope&gt;test&lt;/scope&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.vladmihalcea&lt;/groupId&gt;
            &lt;artifactId&gt;hibernate-types-60&lt;/artifactId&gt;
            &lt;version&gt;2.16.2&lt;/version&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;

    &lt;build&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
                &lt;configuration&gt;
                    &lt;excludes&gt;
                        &lt;exclude&gt;
                            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;
                            &lt;artifactId&gt;lombok&lt;/artifactId&gt;
                        &lt;/exclude&gt;
                    &lt;/excludes&gt;
                &lt;/configuration&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/build&gt;

&lt;/project&gt;
</code></pre>
<p>attaching few screen shots for the added dependencies:</p>
<p><a href=""https://i.stack.imgur.com/2WTVn.jpg"" rel=""noreferrer"">spring and spring boot dependencies</a></p>
<p><a href=""https://i.stack.imgur.com/okR5w.png"" rel=""noreferrer"">jakarta dependencies</a></p>
<p>any idea or solution if anybody have also upgraded to this version and able to run the project successfully.
also iam confused why javax-persistence is still there and not replaced when jakarata-persistence is already added/there.</p>
","72434705","<p>Hibernate 6 (and Hibernate Validator 7 as well) are JakartaEE implementations of respectivly the Jakarta Persistence API and Jakarta Validation API. None of which are currently supported by Spring nor Spring Boot.</p>
<p>Support for JakartaEE is coming in Spring Framework 6 and Spring Boot 3 which are scheduled for release later this year.</p>
<p>For now keep using the JavaEE versions. In your case you need to do 2 things</p>
<ol>
<li>Remove the <code>hibernate.version</code> property</li>
<li>Replace the <code>hibernate-validator</code> and <code>jakarta-validation-api</code> with the <code>spring-boot-starter-validation</code> dependency.</li>
</ol>
<p>When you apply both fixes and later this year upgrade to Spring Boot 3 you will get the proper versions which are compatible.</p>
"
"73377190","1","Bytecode transforming record class to be mutable","<p>I just saw that EBean does bytecode transformation of record class files in a way that feels odd to me and I seek an answer about whether this is legal from a JVM point of view.</p>
<p>Apparently, it is possible to have a class file, where the class extends <code>java.lang.Record</code> and defines record component attributes (so it's a &quot;record&quot; like javac would create it), but with the following additional &quot;features&quot; which javac would not allow:</p>
<ul>
<li>Make fields for record components non-final</li>
<li>Add additional fields that are not set through the canonical constructor, nor exposed through record component attributes</li>
</ul>
<p>To me, this seems illegal and I would have expected a JVM verification error. I would like to know if this is something that is &quot;supported&quot;, which I can build upon, or if the lack of verification is a JVM bug. Are records just a Java language feature without JVM support?! I read that final fields of records are &quot;truly final&quot; and can't be changed even through reflection and assumed there must be special JVM support that makes sure records match the Java language semantics...</p>
","73390758","<p>Your question posits a false dichotomy.  Records are a language feature, with some degree of JVM support (primarily for reflection), but that doesn't mean that the JVM will (or even can) enforce all the requirements on records that the language requires.  (Gaps like this are inevitable, as the JVM is a more general computing substrate, and which services other languages besides Java; for example, the JVM permits methods to be overloaded on return type, but the language does not.)</p>
<p>That said, the behavior you describe is a pretty serious party foul, and those who engage in it should be shamed out of the community.  (It is also possible they are doing so out of ignorance, in which case they might be educable.)  Most likely, these people think they are being &quot;clever&quot; in subverting rules they don't like, but in the process, poisoning the well by promoting behaviors that users may find astonishing.</p>
<p><strong>EDIT</strong></p>
<p>The author of the transformer posted some further context here about what they were trying to accomplish.  I'll give them credit for making a good faith effort to conform with the semantics of records, but it undermines the final field semantics, and only appears to work for records that do not customize the constructor, accessors, equals, or hashCode methods.  This describes a lot of records, but not all.  This is a good cautionary tale; even when trying to preserve the semantics of a class while transforming it, it is easy to make questionable assumptions about what the class does or does not do that can get in the way.</p>
<p>The author waves away the concern about the final field semantics as &quot;not likely to cause a problem.&quot;  But this is not the bar.  The language provides certain semantics for records.  This transformation undermines those semantics, and yet still tells the user they are records.  Even if they are &quot;minor&quot; and &quot;unlikely&quot;, you are breaking the semantics that the Java language promises.  &quot;99% compatible&quot; rounds to zero in this case.  So I stand by my assertion that this framework is taking inappropriate liberties with the language semantics.  They may have been well-intentioned, they may have tried hard to not break things, but break things they did.</p>
"
"73035944","1","Best way to retrieve K largest elements from large unsorted arrays?","<p>I recently had a coding test during an interview. I was told:</p>
<blockquote>
<p>There is a large unsorted array of one million <code>int</code>s. User wants to retrieve <code>K</code> largest elements. What algorithm would you implement?</p>
</blockquote>
<p>During this, I was strongly hinted that I needed to sort the array.</p>
<p>So, I suggested to use built-in <code>sort()</code> or maybe a custom implementation if performance really mattered. I was then told that using a <code>Collection</code> or <em>array</em> to store the <code>k</code> largest and for-loop it is possible to achieve approximately <code>O(N)</code>, in hindsight, I think it's <code>O(N*k)</code> because each iteration needs to compare to the <code>K</code> sized array to find the smallest element to replace, while the need to sort the array would cause the code to be at least <code>O(N log N)</code>.</p>
<p>I then reviewed this link on SO that suggests priority queue of <code>K</code> numbers, removing the smallest number every time a larger element is found, which would also give <code>O(N log N)</code>. <a href=""https://stackoverflow.com/questions/19227698/write-a-program-to-find-100-largest-numbers-out-of-an-array-of-1-billion-numbers"">Write a program to find 100 largest numbers out of an array of 1 billion numbers</a></p>
<p>Is the for-loop method bad? How should I justify pros/cons of using the for-loop or the priorityqueue/sorting methods? I'm thinking that if the array is already sorted, it could help by not needing to iterate through the whole array again, i.e. if some other method of retrieval is called on the sorted array, it should be constant time. Is there some performance factor when running the actual code that I didn't consider when theorizing pseudocode?</p>
","73036179","<p>Another way of solving this is using <a href=""https://en.wikipedia.org/wiki/Quickselect"" rel=""noreferrer"">Quickselect</a>. This should give you a total average time complexity of <em><strong>O(n)</strong></em>. Consider this:</p>
<ol>
<li>Find the <em>k</em>th largest number <em>x</em> using Quickselect (<em>O(n)</em>)</li>
<li>Iterate through the array again (or just through the right-side partition) (<em>O(n)</em>) and save all elements <em>≥ x</em></li>
<li>Return your saved elements</li>
</ol>
<p>(If there are repeated elements, you can avoid them by keeping count of how many duplicates of <em>x</em> you need to add to the result.)</p>
<p>The difference between your problem and the one in the SO question you linked to is that you have only one million elements, so they can definitely be kept in memory to allow normal use of Quickselect.</p>
"
"73299265","1","Java Stream Collect() classifier can't detect type","<p>I have the following code reading lines from a text file:</p>
<pre><code>try (BufferedReader br = new BufferedReader(new InputStreamReader(Uio.decodeFrom(url)))) {
        return br.lines()
                .parallel()
                .map(s -&gt; s.split(&quot;\\s+&quot;)) // split by whitespace
                .collect(
                        Collectors.groupingByConcurrent(
                                arr -&gt; arr[0], // String 1
                                Collectors.groupingByConcurrent(
                                        arr -&gt; arr[arr.length-1], // String 2
                                        Collectors.counting()
                                )
                        )
                );
    } catch (IOException e) {
        throw new UncheckedIOException(e);
    }
</code></pre>
<p>The text file has data like</p>
<pre><code>String1     ... cols      ... String2
string1data ... otherdata ... string2data
...
</code></pre>
<p>And I'm trying to group by <code>String1</code> and <code>String2</code> and get their counts. Then end result should be a <code>Map&lt;String, Map&lt;String, Long&gt;&gt;</code>. However, with the code above, the compiler is saying that the <code>collect()</code> returns a <code> ConcurrentMap &lt;Object, ConcurrentMap&lt;Object, Long&gt;&gt;</code>.</p>
<p>Why are the keys not Strings?</p>
","73299327","<p>I can duplicate this error message, but the replacement of <code>String</code> with <code>Object</code> in the error message appears to be a red herring.  The real problem is that Java's generics are invariant.</p>
<p>If the call to <code>collect</code> is returning a <code>ConcurrentMap&lt;String, ConcurrentMap&lt;String, Long&gt;&gt;</code>, that doesn't match <code>Map&lt;String, Map&lt;String, Long&gt;&gt;</code>, even though a <code>ConcurrentMap</code> is a <code>Map</code>.  The inner <code>Map</code> type must match exactly without a wildcard and bounds.</p>
<p>If you introduce an upper-bounded wildcard to the return type, it will compile without error.  Have it return the type <code>Map&lt;String, ? extends Map&lt;String, Long&gt;&gt;</code>, so that the inner <code>ConcurrentMap&lt;String, Long&gt;</code> will match.</p>
<p>A return type of <code>Map&lt;String, ConcurrentMap&lt;String, Long&gt;&gt;</code> will also work.</p>
<p>It's unclear why <code>String</code> wasn't captured until the generics invariant issue was worked out.  Just a guess: the compiler didn't capture <code>String</code> yet, because it found the invariant generics issue first.  Once the invariant generics issue is resolved, it compiles without error, implying <code>String</code> does get inferred.</p>
"
"73480342","1","Manifest for java:8-jre-alpine not found: manifest unknown: manifest unknown","<p>I'm facing this error while building on Ubuntu server:</p>
<blockquote>
<p>Step 1/10 : FROM java:8-jre-alpine</p>
<p>ERROR: Service 'XXXX' failed to build: manifest for java:8-jre-alpine not found: manifest unknown: manifest unknown</p>
</blockquote>
<p>It was working fine since months, suddenly now its not working. What could be the reason?</p>
","73490179","<p>I change java:8 to openjdk:8 and it works.</p>
"
"74377433","1","What is the difference between ""."" and ""/"" in java classname?","<p>I'm new to java. When I try to learn <a href=""https://maven.apache.org/guides/getting-started/maven-in-five-minutes.html"" rel=""noreferrer"">Maven in 5 minutes</a>, I found that this command</p>
<pre><code>java -cp target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App
</code></pre>
<p>worked the same way as</p>
<pre><code>java -cp target/my-app-1.0-SNAPSHOT.jar com/mycompany/app/App
</code></pre>
<p>It drives me crazy because the last argument in the second command is actually a path. What is the difference between &quot;.&quot; and &quot;/&quot; in java classname?</p>
<p>I have looked up some articles but still don't get it.</p>
","74377496","<p>This is an implementation detail leaking out.  Class names in the language are dot-separated; class names in the classfile format are slash-separated.  (<a href=""https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.2."" rel=""noreferrer"">https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.2.</a>)  For the most part, internal names are not visible to users, but they do leak in some circumstances.  Many tools that deal with classfiles will convert from the external (dotted) to internal (slashed) name using something like <code>replace('.', '/')</code>, which has the effect that internal names are also accepted by the tool.  That's what's going on here.</p>
"
"74500889","1","Serve response of an HTTP request after receiving another request","<p>My use case is to serve response of an HTTP request after receiving another request from separate server.</p>
<p><a href=""https://i.stack.imgur.com/CHQX1.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/CHQX1.png"" alt=""enter image description here"" /></a></p>
<ol>
<li>I want to do this best possible way keeping scaling in mind.</li>
<li>We are using Golang 1.19 with Gin Framework.</li>
<li>Server will have multiple pods thus channels will not work.</li>
<li>There will be timeouts for all request making initial request timed out after 60 seconds.</li>
</ol>
<p>My current solution is to use a shared cache where each pod will keep checking the cache. I believe, I can optimize this with channels where rather than checking in cache one by one, system periodically checks for any completed response.</p>
<p>I would also like to know how it could have been achieved in other programming languages.</p>
<p>PS: This is design based query, I have some reputation here to share bounty thus asking here. Please feel free to edit if question is not clear.</p>
","74503580","<h1>tl;dr</h1>
<h2>problem description</h2>
<p>So assuming your server application called <code>server_app</code> for instance, has 3 pods:</p>
<pre><code>     +---------------------+
     |  server_app_service |
     +---------------------+
     |  server_app_pod_a   |
     |  server_app_pod_b   |
     |  server_app_pod_c   |
     +---------------------+
</code></pre>
<p>your <strong>service</strong> receives a request called <code>&quot;request A&quot;</code>, and decides to pass it to <code>server_app_pod_a</code>. Now your <code>server_app_pod_a</code> forwards the request to some gateway, and waits for some sort of <strong>notification</strong>, to continue the processing of client's response. And as you already know, there's no assurance that when gateway does the <code>request B</code>, the service passes it to <code>server_app_pod_a</code> again. And even if it did so, your application's state management would become a difficult task to do.</p>
<h1>Messaging</h1>
<p>As you might've noticed, I bolded the word &quot;notification&quot; in the past paragraph, that's because if you really think about it, the <code>request &quot;B&quot;</code> looks more like a notification with some <strong>message</strong> rather than a request for some resource. So my number 1 choice would be a message queue like kafka (there are plenty of those, again, as you know). And the idea is, if you could define an algorithm to calculate unique keys for your requests, you can expect the resulting notifications in your exact same pod. This way, state management would be much simpler, and also, the chance of getting the notification in the same pod would be much higher (this depends on many factors of course, like the state of the message queue). Taking a look at your questions:</p>
<blockquote>
<ol>
<li>I want to do this best possible way keeping scaling in mind.</li>
</ol>
</blockquote>
<p>Sure thing, you can use these message queues like kafka, to achieve scaling and fewer data loss, both for the message queue and your application.</p>
<blockquote>
<ol start=""4"">
<li>There will be timeouts for all request making initial request timed out after 60 seconds.</li>
</ol>
</blockquote>
<p>This one depends on how you manage timeouts in your codebase, using contexts would be a good idea.</p>
<blockquote>
<p>I would also like to know how it could have been achieved in other programming languages.</p>
</blockquote>
<p>Using message queues is a general idea, which would be applicable to almost any programming language, but depending on the programming paradigms of a language, and language-specific libraries and tools, there might be some other approaches to this problem. For instance in <code>Scala</code>, if you use some specific tool called <code>akka</code> (which provides actor model programming paradigm), you can use something so called <code>akka-cluster-sharding</code>, to handle this problem. And the idea is pretty simple, we know that there must be some sort of superviser, which knows the exact location and state of its own subscribers. So when it receives some message, it just knows where and which actor (we're talking about actor model programming) to forward the request to. In other words, it can be used to share state between actors spawned on a cluster, either on the same machine or not. But as a personal preference, I wouldn't go for language-specific communications, and would stick to general ideas, because of the problems it might cause in the future.</p>
<h1>Wrap-up</h1>
<p>Long enough explanations :). Just to make some sense of what I'm talking about, let's follow up the exact same scenario, with a difference in communication model:</p>
<ol>
<li>Client sends request &quot;A&quot; to <code>server_app</code> service.</li>
<li>The service, choses one of the pods (<code>server_app_pod_b</code> for instance) to handle the request.</li>
<li>The pod then tries to define some key for the request, and passes it to the gateway, along with the request, and <strong>waits</strong> for a message with the key, to be published in the queue.</li>
<li>The gateway does what it's supposed to, and <strong>sends a message</strong> with the key, to the message queue.</li>
<li>The exact same pod <code>serer_app_pod_b</code> receives the message with the key, fetches the data of the message, and continues to process the client's request.</li>
</ol>
<p>There are probably other approaches available to address this issue, but this is what I would go for. Hope that it helps!</p>
"
"73707768","1","upgrade to SnakeYaml 1.31 in spring-boot-starter-parent 2.7.3","<p>Have springboot project in which wanted to either exclude snakeyaml 1.30 or upgrade it 1.31 inorder to avoid fortify issue reporting</p>
<p>with snakeyaml 1.30 version there is security vulnerability</p>
<pre><code>&lt;parent&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
        &lt;version&gt;2.7.3&lt;/version&gt;
&lt;/parent&gt;
</code></pre>
<p>Below is seen on the effective pom.xml of the project</p>
<pre><code>  &lt;dependency&gt;
          &lt;groupId&gt;org.yaml&lt;/groupId&gt;
          &lt;artifactId&gt;snakeyaml&lt;/artifactId&gt;
          &lt;version&gt;1.30&lt;/version&gt;
          &lt;scope&gt;compile&lt;/scope&gt;
        &lt;/dependency&gt;
</code></pre>
<p>Is there any possibility to upgrade as the remediation says to upgrade the version to snakeyaml 1.31 ?</p>
<p>Ref : <a href=""https://security.snyk.io/vuln/SNYK-JAVA-ORGYAML-2806360"" rel=""noreferrer"">https://security.snyk.io/vuln/SNYK-JAVA-ORGYAML-2806360</a></p>
","73708060","<p>You can always change the version number through the <code>&lt;dependencyManagement&gt;</code> block in your <code>pom.xml</code>:</p>
<pre><code>&lt;dependencyManagement&gt;
    &lt;dependencies&gt;

      &lt;dependency&gt;
        &lt;groupId&gt;org.yaml&lt;/groupId&gt;
        &lt;artifactId&gt;snakeyaml&lt;/artifactId&gt;
        &lt;version&gt;1.31&lt;/version&gt;
      &lt;/dependency&gt;

   &lt;/dependencies&gt;
&lt;/dependencyManagement&gt;
</code></pre>
<p>This will automatically change the version your project will use. You can test this by running <code>mvn dependency:tree</code> afterwards. It should only show version 1.31 of snakeyaml.</p>
<p><strong>Important remark:</strong> Make sure that you remove this block as soon as you integrate the next version of Spring Boot as it will very likely contain the increased version. Otherwise you may downgrade the version unintentionally after future updates.</p>
<p>Please also note that there may be incompatibilities between certain lib versions and Spring Boot, hence it may not always be possible to update the version this way.</p>
"
"73749383","1","Why does LambdaMetafactory fail when using a custom functional interface (but Function works fine)?","<p>Given:</p>
<pre><code>import java.lang.invoke.LambdaMetafactory;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;
import java.util.function.Function;

class Testcase
{
    @FunctionalInterface
    public interface MyBuilder1&lt;R&gt;
    {
        R apply(String message);
    }

    @FunctionalInterface
    public interface MyBuilder2&lt;R&gt;
    {
        R apply(Object message);
    }

    public static void main(String[] args) throws Throwable
    {
        Class&lt;?&gt; clazz = IllegalArgumentException.class;

        MethodHandles.Lookup lookup = MethodHandles.lookup();
        MethodHandle mh = lookup.findConstructor(clazz, MethodType.methodType(void.class, String.class));
        MethodHandle myFunctionConstructor = LambdaMetafactory.metafactory(
            lookup,
            &quot;apply&quot;,
            MethodType.methodType(Function.class),
            mh.type().erase(),
            mh,
            mh.type()
        ).getTarget();

        MethodHandle myBuilderConstructor1 = LambdaMetafactory.metafactory(
            lookup,
            &quot;apply&quot;,
            MethodType.methodType(MyBuilder1.class),
            mh.type().erase(),
            mh,
            mh.type()
        ).getTarget();

        MethodHandle myBuilderConstructor2 = LambdaMetafactory.metafactory(
            lookup,
            &quot;apply&quot;,
            MethodType.methodType(MyBuilder2.class),
            mh.type().erase(),
            mh,
            mh.type()
        ).getTarget();

        @SuppressWarnings(&quot;unchecked&quot;)
        Function&lt;String, IllegalArgumentException&gt; functionFactory =
            (Function&lt;String, IllegalArgumentException&gt;) myFunctionConstructor.invokeExact();

        @SuppressWarnings(&quot;unchecked&quot;)
        MyBuilder1&lt;IllegalArgumentException&gt; myBuilder1Factory =
            (MyBuilder1&lt;IllegalArgumentException&gt;) myBuilderConstructor1.invokeExact();

        @SuppressWarnings(&quot;unchecked&quot;)
        MyBuilder2&lt;IllegalArgumentException&gt; myBuilder2Factory =
            (MyBuilder2&lt;IllegalArgumentException&gt;) myBuilderConstructor2.invokeExact();

        IllegalArgumentException runFunction = functionFactory.apply(&quot;test&quot;);
//      IllegalArgumentException runBuilder1 = myBuilder1Factory.apply(&quot;test&quot;);
        IllegalArgumentException runBuilder2 = myBuilder2Factory.apply(&quot;test&quot;);

    }
}
</code></pre>
<p>Why do <code>runFunction</code> and <code>runBuilder2</code> work while <code>runBuilder1</code> throws the following exception?</p>
<blockquote>
<p>java.lang.AbstractMethodError: Receiver class Testcase$$Lambda$233/0x0000000800d21d88 does not define or inherit an implementation of the resolved method 'abstract java.lang.Object apply(java.lang.String)' of interface MyBuilder1.</p>
</blockquote>
<p>Given that the <code>IllegalArgumentException</code> constructor takes a <code>String</code> parameter, not an <code>Object</code>, shouldn't the JVM accept <code>runBuilder1</code> and complain about the parameter type of the other two?</p>
","73749785","<p>Your <code>MyBuilder1&lt;R&gt;</code> has a functional method</p>
<pre class=""lang-java prettyprint-override""><code>R apply(String message);
</code></pre>
<p>whose erased type is</p>
<pre class=""lang-java prettyprint-override""><code>Object apply(String message);
</code></pre>
<p>In other words, unlike <code>Function</code> or <code>MyBuilder2</code>, the erased parameter type is <code>String</code>, rather than <code>Object</code>. The <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/invoke/MethodType.html#erase()"" rel=""noreferrer""><code>erase()</code> method of <code>MethodType</code></a> just replaces all reference types with <code>Object</code>, which was handy for <code>Function</code> and <code>MyBuilder2</code> but is not suitable for <code>MyBuilder1</code> anymore. There is no similarly simple method for non-trivial types. You have to include type transformation code specifically for your case (unless you want to lookup the interface method via Reflection).</p>
<p>For example, we can just change the return type to <code>Object</code> and keep the parameter types:</p>
<pre class=""lang-java prettyprint-override""><code>class Testcase
{
    @FunctionalInterface
    public interface MyBuilder1&lt;R&gt;
    {
        R apply(String message);
    }

    public static void main(String[] args) throws Throwable
    {
        Class&lt;?&gt; clazz = IllegalArgumentException.class;

        MethodHandles.Lookup lookup = MethodHandles.lookup();
        MethodHandle mh = lookup.findConstructor(clazz,
            MethodType.methodType(void.class, String.class));

        MethodHandle myBuilderConstructor1 = LambdaMetafactory.metafactory(
            lookup,
            &quot;apply&quot;,
            MethodType.methodType(MyBuilder1.class),
            mh.type().changeReturnType(Object.class), // instead of erase()
            mh,
            mh.type()
        ).getTarget();

        @SuppressWarnings(&quot;unchecked&quot;)
        MyBuilder1&lt;IllegalArgumentException&gt; myBuilder1Factory =
            (MyBuilder1&lt;IllegalArgumentException&gt;) myBuilderConstructor1.invokeExact();

        IllegalArgumentException runBuilder1 = myBuilder1Factory.apply(&quot;test&quot;);

        runBuilder1.printStackTrace();
    }
</code></pre>
<hr />
<p>Regarding your last question, the erased type is the type to implement, whereas the last parameter to <code>metafactory</code> determines the intended type, i.e. derived from the Generic interface type. The generated code may have type casts from the erased type to this type when necessary. Since this type matches the constructor signature in all cases, all variants can invoke the constructor.</p>
"
"73492733","1","How to properly spy on an input stream","<p>My understanding is, that <code>Mockito.spy(object)</code> wraps a proxy around an existing object. This proxy delegates the method calls to the spied object and allows further verification (So it's different to a mock which provides no implementation).</p>
<p>I want to spy on an input stream to ensure the close/read methods are properly called. But the following (simple) spy code doesn't work:</p>
<pre class=""lang-java prettyprint-override""><code>// Create a spy input stream object
String testData = &quot;Hello&quot;;
InputStream inputStream = new ByteArrayInputStream(testData.getBytes(StandardCharsets.UTF_8));
InputStream spiedInputStream = spy(inputStream);
assertEquals(testData.getBytes(StandardCharsets.UTF_8).length, spiedInputStream.available()); // Fails: Expected 5, Actual 0

// Read the input stream
byte [] readData = new byte[testData.length()];
assertEquals(testData.getBytes(StandardCharsets.UTF_8).length, spiedInputStream.read(readData)); // Fails: Expected 5, Actual -1
assertEquals(testData, new String(readData, StandardCharsets.UTF_8)); // Fails, readData is fully zeroed
</code></pre>
<p>So what am I doing wrong (Ubuntu 22.04, Java 17, Mockito 4.7.0)</p>
","73496579","<p>The behaviour you described is reproducible only on the following configuration:</p>
<ul>
<li>mockito-core</li>
<li>JDK 17+</li>
</ul>
<p>The simplest way for you to proceed is to switch to mockito-inline.</p>
<p>In case of mockito-core and JDK 17, the fields in the spy are not properly initialized:</p>
<pre><code>public ByteArrayInputStream(byte buf[]) {
    this.buf = buf;
    this.pos = 0;
    this.count = buf.length;
}
</code></pre>
<p>The count variable should be equal to buf.length, but in the spy it is set to 0.</p>
<p>The problem stems from the fact that subclass mock maker is fundamentally limited on JDK17, mockito team seems to be aware of the problem and even considers switching to inline mock maker as default on JDK 17:</p>
<p><a href=""https://github.com/mockito/mockito/issues/2589"" rel=""nofollow noreferrer"">Switch the default mockmaker to the inline mockmaker on JDK 17+ #2589</a>:</p>
<blockquote>
<p>TLDR: more and more use cases are broken (by default) with Mockito and JDK 17. That's because the subclass mockmaker runs into fundamental limitations on JDK 17, but the inline mockmaker works as expected.</p>
</blockquote>
"
"72446186","1","Why doesn't instanceof pattern matching work with else if in this particular case?","<p>The following snippet does not compile on javac, version 17 (Temurin)</p>
<pre><code>class Instanceof {
    static void doesNotWork(Object o) {
        if (o == null) {
            throw new Error();
        } else if (!(o instanceof String s)) {
            throw new Error();
        }   
        System.out.println(s); // error here
    }
}
</code></pre>
<p>It generates this error: cannot find symbol</p>
<pre><code>cannot find symbol
symbol:   variable s
location: class Instanceof
</code></pre>
<p>However, the following (in my opinion) equivalent variations work:
With an explicit else block:</p>
<pre><code>static void doesWork(Object o) {
    if (o == null) {
        throw new Error();
    } else if (!(o instanceof String s)) {
        throw new Error();
    } else {
        System.out.println(s);
    }
}
</code></pre>
<p>Or without an else:</p>
<pre><code>static void doesWork(Object o) {
    if (o == null) {
        throw new Error();
    }
    if (!(o instanceof String s)) {
        throw new Error();
    }
    System.out.println(s);
}
</code></pre>
<p>Or with a single if:</p>
<pre><code>static void doesWork(Object o) {
    if (o == null || !(o instanceof String s)) {
        throw new Error();
    }
    System.out.println(s);
}
</code></pre>
<p>Is this a bug in javac?
If yes, should I report this, but where exactly?</p>
","72446910","<p>The <code>doesNotWork</code> case is equivalent to this:</p>
<pre><code>static void doesNotWork(Object o) {
    if (o == null) {
        throw new Error();
    } else {
        if (!(o instanceof String s)) {
            throw new Error();
        }
    }
    System.out.println(s); // error here
}
</code></pre>
<p>This makes it more obvious that <code>String s</code> is inside a block bounded by curly brackets and is therefore out of scope in the same way that this doesn't work either:</p>
<pre><code>static void doesNotWork(Object o) {
    {
        if (!(o instanceof String s)) {
            throw new Error();
        }
    }
    System.out.println(s); // error here
}
</code></pre>
<p>In the case where it does work, with the println inside the else, it's equivalent to this:</p>
<pre><code>if (o == null) {
    throw new Error();
} else {
    if (!(o instanceof String s)) {
        throw new Error();
    } else {
        System.out.println(s);
    }
}
</code></pre>
<p>Which shows the println being in scope.</p>
"
"72453890","1","Why am I seeing a one-off error with Math.pow(11, 16)?","<p>I have to compute 11^16 for a project at my Uni. Somehow <code>Math.pow(11,16)</code> computes a solution exactly 1 less than WolframAlpha or my other computation method.</p>
<p><a href=""https://i.stack.imgur.com/cf5sh.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/cf5sh.png"" alt=""Result from WolframAlpha"" /></a></p>
<p>My code is:</p>
<pre><code>public class Test {
    public static void main(String args[]) {
        long a = 11;
        long b = 16;
        System.out.println(&quot;&quot; + (long)Math.pow(a, b));
        System.out.println(&quot;&quot; + squareAndMultiply(a, b));
    }

    public static long squareAndMultiply(long b, long e){
        long result = 1;
        long sq = b;
        while(e&gt;0){
            if(e%2==1){
                result *= sq;
            }
            sq = sq * sq;
            e /= 2;
        }
        return result;
    }
}
</code></pre>
<p>The result from the code is:</p>
<p>math.pow(11,16):</p>
<blockquote>
<p>45949729863572160</p>
</blockquote>
<p>squareAndMultiply(11,16):</p>
<blockquote>
<p>45949729863572161</p>
</blockquote>
","72454107","<p>With floating-point arithmetic, you're in that gray zone where the precision of a <code>double</code> is less than that of a <code>long</code> (even if the <em>range</em> of a <code>double</code> is much bigger).</p>
<p>A <code>double</code> has 53 bits of precision, whereas a <code>long</code> can devote all 64 bits to precision.  When you're dealing with values as high as 11<sup>16</sup>, the difference between one <code>double</code> value and the next one up becomes noticeable.</p>
<p>Java has a <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Math.html#ulp(double)"" rel=""noreferrer"">built-in method <code>Math.ulp</code></a> (&quot;unit in last place&quot;) that effectively gives the difference in values between consecutive representable values.  (There's a <code>double</code> version and a <code>float</code> version.)</p>
<pre><code>System.out.println(Math.ulp(Math.pow(11, 16)));
</code></pre>
<blockquote>
<p>8.0</p>
</blockquote>
<p>That means the least possible <code>double</code> value greater than <code>45949729863572160</code> is <code>45949729863572168</code>.</p>
<p>The long value <code>45949729863572161</code> is correct, but the value you're getting with <code>Math.pow</code>, <code>45949729863572160</code>, is as close as a <code>double</code> can get to the true answer, given its limited (but still large) precision.</p>
<p>Casting to a <code>long</code> makes no difference, because <code>Math.pow</code> already computes the result as a <code>double</code>, so the answer is off by one already.  Your <code>long</code> method of computing the value is correct.</p>
<p>If you're computing values that would overflow <code>long</code>, then instead of using <code>double</code>, you can use <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html#pow(int)"" rel=""noreferrer""><code>BigDecimal</code>, which has its own <code>pow</code> method</a> to retain a precision of 1.0.</p>
"
"74264850","1","LocalBroadcastManager is now deprecated, how to send data from service to activity?","<p>I have a service that needs to notify the main activity. I use <code>LocalBroadcastManager</code>, and it works fine, but <code>LocalBroadcastManager</code> has been deprecated.</p>
<p>This is my actual code in the service:</p>
<pre><code>public void onTokenRefresh() {
      
    /* build the intent */
    Intent intent = new Intent(ACTION_TOKENREFRESHED);
    intent.putExtra(&quot;token&quot;, &quot;xxx&quot;);
    
    /* send the data to registered receivers */
    try{
      LocalBroadcastManager.getInstance(this).sendBroadcast(intent);
    } catch (Throwable e){
      //no exception handling
    }  
  
  }
</code></pre>
<p>In the main activity, I get informed of the notification like this :</p>
<pre><code>context.registerReceiver(broadcastReceiver, intentFilter);
</code></pre>
<p>What can I use now to remove the deprecated warning? All examples I found regarding sending data from service to activity use LocalBroadcastManager. Can someone give me a workable model for migrating my existing code?</p>
<p><strong>NOTE</strong></p>
<p>In my example, The <code>onTokenRefresh</code> is called from inside a <code>background thread</code>. That is very important because it means I can simultaneously receive several onTokenRefresh, and I must forward all these tokens to the activity. Most of the offered solutions use live data but make a declaration like :</p>
<pre><code>public static final MutableLiveData&lt;String&gt; tokenLiveData = new MutableLiveData&lt;&gt;();

Background Thread1:
tokenLiveData.postValue(Token1);

Background Thread2 (at same time):
tokenLiveData.postValue(Token2);
</code></pre>
<p>Will forward ALL tokens received simultaneously to the main activity that observes the tokenLiveData? Will the main activity always receive for sure token1 and token2?</p>
","74545041","<p>Make a <code>service</code> class and define a <code>LiveData</code> to replace the <code>LocalBroadcastManager</code> responsibility like so:</p>
<pre><code>//This service sends an example token ten times to its observers
public class MyService extends Service {
    //Define a LiveData to observe in activity
    public static final MutableLiveData&lt;String&gt; tokenLiveData = new MutableLiveData&lt;&gt;();

    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }

    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        //You need a separate thread if you don not use IntentService

        Thread thread1 = new Thread() {
            public void run() {
                for (int i = 0; i &lt; 10; i++) {
                    //send random strings az an example token ten times.
                    //You can remove this loop and replace it with your logic
                    String token1 = UUID.randomUUID().toString();
                    new Handler(Looper.getMainLooper()).post(() -&gt; sendTokenToObserver(&quot;Thread1: &quot; + token1));

                }
            }
        };
        thread1.start();

        Thread thread2 = new Thread() {
            public void run() {
                for (int i = 0; i &lt; 10; i++) {
                    String token2 = UUID.randomUUID().toString();
                    new Handler(Looper.getMainLooper()).post(() -&gt; sendTokenToObserver(&quot;Thread2: &quot; + token2));
                }
            }
        };
        thread2.start();
        return START_STICKY;
    }

    //Post token to observers
    public void sendTokenToObserver(String token) {
        tokenLiveData.setValue(token);

    }
}
</code></pre>
<p>Then start the <code>service</code> in the <code>activity</code> and observe the <code>LiveData</code> like below:</p>
<pre><code>public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        //You can observe the emitted token here and do what you want(Show in view or notification). 
        //I've just logged it to the console.
        startService(new Intent(this,MyService.class));
        MyService.tokenLiveData.observe(this, token -&gt; Log.d(&quot;token&quot;, token));
    }
}
</code></pre>
<p>You can also <code>start</code> the <code>service</code> from <code>another activity</code> and observe it in the <code>MainActivity</code>;</p>
"
"72040055","1","Wildfly org.jboss.nio -> FileNotFoundException: Invalid file path with Windows Java JDK 11.0.15+10","<p>Since the update to <em>Eclipse Tamurin</em> <em>JDK 11.0.15+10</em> we notice a problem as soon a HTTP request reaches Wildfly 20.0.1.Final. The same behaviour exsists in Wildfly 26.1.0.Final This only happens with the <em>JDK</em> Windows version, the Linux <em>JDK</em> works fine.
As it is an &quot;Invalid file path&quot; error, an OS dependent BUG seems possible.</p>
<p>Until now SAP Machine is the only JDK that does not encounter this failure.</p>
<p>I'm still not sure if this is a <em>JDK</em> or a <em>Wildfly</em> problem...</p>
<p>You can check that when opening the <em>Wildfly Management Interface</em>.</p>
<pre><code>ERROR [io.undertow.request] (External Management Request Threads -- 1) UT005071: Undertow request failed HttpServerExchange{ GET /management}: java.io.IOError: java.io.FileNotFoundException: Invalid file path
    at org.jboss.xnio@3.8.1.Final//org.xnio.channels.Channels$4.run(Channels.java:1103)
    at org.jboss.xnio@3.8.1.Final//org.xnio.channels.Channels$4.run(Channels.java:1093)
    at java.base/java.security.AccessController.doPrivileged(Native Method)
    at org.jboss.xnio@3.8.1.Final//org.xnio.channels.Channels.&lt;clinit&gt;(Channels.java:1093)
    at io.undertow.core@2.1.3.Final//io.undertow.io.UndertowOutputStream.write(UndertowOutputStream.java:231)
    at io.undertow.core@2.1.3.Final//io.undertow.io.BlockingSenderImpl.writeBuffer(BlockingSenderImpl.java:245)
    at io.undertow.core@2.1.3.Final//io.undertow.io.BlockingSenderImpl.writeBuffer(BlockingSenderImpl.java:238)
    at io.undertow.core@2.1.3.Final//io.undertow.io.BlockingSenderImpl.send(BlockingSenderImpl.java:75)
    at io.undertow.core@2.1.3.Final//io.undertow.io.BlockingSenderImpl.send(BlockingSenderImpl.java:107)
    at org.jboss.as.domain-http-interface@12.0.3.Final//org.jboss.as.domain.http.server.DomainUtil.writeResponse(DomainUtil.java:89)
    at org.jboss.as.domain-http-interface@12.0.3.Final//org.jboss.as.domain.http.server.DomainApiHandler$1.doSendResponse(DomainApiHandler.java:177)
    at org.jboss.as.domain-http-interface@12.0.3.Final//org.jboss.as.domain.http.server.ResponseCallback.sendResponse(ResponseCallback.java:32)
    at org.jboss.as.domain-http-interface@12.0.3.Final//org.jboss.as.domain.http.server.DomainApiHandler.handleRequest(DomainApiHandler.java:232)
    at io.undertow.core@2.1.3.Final//io.undertow.server.handlers.encoding.EncodingHandler.handleRequest(EncodingHandler.java:72)
    at org.jboss.as.domain-http-interface@12.0.3.Final//org.jboss.as.domain.http.server.DomainApiCheckHandler.handleRequest(DomainApiCheckHandler.java:91)
    at org.jboss.as.domain-http-interface@12.0.3.Final//org.jboss.as.domain.http.server.security.ElytronIdentityHandler.lambda$handleRequest$0(ElytronIdentityHandler.java:62)
    at org.wildfly.security.elytron-private@1.12.1.Final//org.wildfly.security.auth.server.SecurityIdentity.runAs(SecurityIdentity.java:328)
    at org.wildfly.security.elytron-private@1.12.1.Final//org.wildfly.security.auth.server.SecurityIdentity.runAs(SecurityIdentity.java:285)
    at org.jboss.as.controller@12.0.3.Final//org.jboss.as.controller.AccessAuditContext.doAs(AccessAuditContext.java:254)
    at org.jboss.as.controller@12.0.3.Final//org.jboss.as.controller.AccessAuditContext.doAs(AccessAuditContext.java:225)
    at org.jboss.as.domain-http-interface@12.0.3.Final//org.jboss.as.domain.http.server.security.ElytronIdentityHandler.handleRequest(ElytronIdentityHandler.java:61)
    at io.undertow.core@2.1.3.Final//io.undertow.server.handlers.BlockingHandler.handleRequest(BlockingHandler.java:56)
    at io.undertow.core@2.1.3.Final//io.undertow.server.Connectors.executeRootHandler(Connectors.java:370)
    at io.undertow.core@2.1.3.Final//io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:830)
    at org.jboss.threads@2.3.3.Final//org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
    at org.jboss.threads@2.3.3.Final//org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:1982)
    at org.jboss.threads@2.3.3.Final//org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1486)
    at org.jboss.threads@2.3.3.Final//org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1348)
    at java.base/java.lang.Thread.run(Thread.java:829)
    at org.jboss.threads@2.3.3.Final//org.jboss.threads.JBossThread.run(JBossThread.java:485)
Caused by: java.io.FileNotFoundException: Invalid file path
    at java.base/java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:231)
    at java.base/java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:126)
    at org.jboss.xnio@3.8.1.Final//org.xnio.channels.Channels$4.run(Channels.java:1098)
    ... 29 more
</code></pre>
<div class=""s-table-container"">
<table class=""s-table"">
<thead>
<tr>
<th>JDK</th>
<th>Works with Wildfly</th>
</tr>
</thead>
<tbody>
<tr>
<td>Eclipse Tamurin</td>
<td>no</td>
</tr>
<tr>
<td>Amazon Coretto</td>
<td>no</td>
</tr>
<tr>
<td>Azul Zulu</td>
<td>no</td>
</tr>
<tr>
<td>Bellsoft</td>
<td>no</td>
</tr>
<tr>
<td>Oracle OpenJDK</td>
<td>no</td>
</tr>
<tr>
<td>Oracle JDK</td>
<td>no</td>
</tr>
<tr>
<td>SAP Machine</td>
<td>yes</td>
</tr>
</tbody>
</table>
</div>","72465068","<p>This is an issue in the JDK. You can wait for JDK 11.0.16 or downgrade to a lower version like JDK 11.0.14.</p>
"
"73878386","1","Lock-free array expansion in Java","<p>I have an array to which many threads are writing. However each thread has a pre-assigned range of indices which it may write to. Further, nothing will be reading from the array until all threads are done.</p>
<p>So far, so thread-safe. The problem arises when I need to expand the array, by which of course I mean swap it out for a larger array which copies the first. This is only done occasionally (similar to an ArrayList).</p>
<p>Currently I'm acquiring a lock for every single write to the array. Even though there is no need to lock in order to keep the array consistent, I'm having to lock in case the array is currently being copied/swapped.</p>
<p>As there are very many writes I don't want to require a lock for them. I'm okay with a solution which requires locking for writer threads only while the array is being copied and swapped, as this is infrequent.</p>
<p>But I can't just impose write locks only when the copy/swap is in progress, as threads may already be committing writes to the old array.</p>
<p>I think I need some variety of barrier which waits for all writes to complete, then pauses the threads while I copy/swap the array. But CyclicBarrier would require me to know exactly how many threads are currently active, which is non-trivial and possibly susceptible to edge-cases in which   the barrier ends up waiting forever, or lowers itself too early. In particular I'm not sure how I'd deal with a new thread coming in while the barrier is already up, or how to deal with threads which are currently polling a job queue, so will never decrement the barrier count while there are no new jobs.</p>
<p>I may have to implement something which (atomically) counts active threads and tries to pre-empt all the edge cases.</p>
<p>But this may well be a &quot;solved&quot; problem that I don't know about, so I'm hoping there may be a simpler (therefore better) solution than the Cyclic barrier/thread counting. Ideally one which uses an existing utility class.</p>
<p>By the way, I've considered CopyOnWriteArray. This is no use to me, as it copies for every write (a lot of them), not just array expansions.</p>
<p>Also note the structure written to pretty much has to be an array, or array-based.</p>
<p>Thanks</p>
","73878933","<p>Although it's technically not correct, you can probably use a <a href=""https://docs.oracle.com/en/java/javase/19/docs/api/java.base/java/util/concurrent/locks/ReadWriteLock.html"" rel=""nofollow noreferrer"">ReadWriteLock</a>. The threads that are writing to a single portion all use a read lock (this is the technically incorrect part, they're not reading...), and the resize uses a write lock. That way, all writing threads can work together. A resize has to wait until all portioned writes are done, which then blocks the entire array. Once that is done, all portioned writes can continue.</p>
"
"74910066","1","@EnableGlobalMethodSecurity is deprecated in the new spring boot 3.0","<p>I use Spring Boot 3.0, and when I work on security configuration, I get a warning that the <code>@EnableGlobalMethodSecurity</code> is deprecated.</p>
<pre><code>@Configuration
@EnableWebSecurity
@AllArgsConstructor
@EnableGlobalMethodSecurity(prePostEnabled = true)
public class SecurityConfig {
</code></pre>
<p>With what do I replace can replace <code>@EnableGlobalMethodSecurity</code> in Spring boot 3.0?</p>
","74910079","<p>You can use now:</p>
<pre><code>@EnableMethodSecurity
</code></pre>
<p>Check the <a href=""https://docs.spring.io/spring-security/reference/servlet/authorization/method-security.html"" rel=""noreferrer"">documentation</a></p>
<p>Note that you can avoid using <code>prePostEnabled = true</code>, because by default is <code>true</code>.</p>
<pre><code>boolean prePostEnabled() default true;
boolean jsr250Enabled() default false;
boolean proxyTargetClass() default false;
</code></pre>
"
"73864285","1","What's the point of a write-only collection?","<p><code>&lt;? extends T&gt;</code> makes for a read-only collection</p>
<p><code>&lt;? super T&gt;</code> makes for a write-only collection</p>
<p>I somehow get why use a read-only collection,for instance to use it in a multithreaded environment (any other cases?)</p>
<p>But why use a write-only collection? What's the point if you cannot read from it and use its values at some point? I know that you can get an Object out of it but that defies type safety.</p>
<p>Edit:
@Thomas the linked question (<a href=""https://stackoverflow.com/questions/4343202/difference-between-super-t-and-extends-t-in-java"">Difference between &lt;? super T&gt; and &lt;? extends T&gt; in Java</a>) does show how to make a write only collection but does not answer 'why' would you need one in the first place.So it's not a duplicate</p>
","73864712","<p>Note that &quot;write only collection&quot; depends on the point of view.</p>
<p>Lets write a method that adds a bunch of numbers to a collection:</p>
<pre><code>public static void addNumbers(List&lt;? super Integer&gt; target, int count) {
    for (int i = 0; i &lt; count; i++) {
        target.add(i);
    }
}
</code></pre>
<p>For this method the list <code>target</code> is a write only list: the method can only add numbers to it, it can not use the values that it added to the list.</p>
<p>On the other side there is the caller:</p>
<pre><code>public static void caller() {
    List&lt;Number&gt; myList = new ArrayList&lt;&gt;();
    addNumbers(myList, 10);
    double sum = 0;
    for (Number n: myList) {
        sum += n.doubleValue();
    }
    System.out.println(sum);
}
</code></pre>
<p>This method works with a specific list (<code>myList</code>) and therefore can read the values that <code>addNumbers</code> stuffed into it.</p>
<p>For this method the list <strong>is not</strong> a write only list, for this method it is an ordinary list.</p>
"
"72506950","1","Flutter Error : Could not resolve all artifacts for configuration ':image_picker_android:debugUnitTestRuntimeClasspath'","<p>The application which I am working on is debugging fine in emulator or in mobiles but when I try to build the apk it gives the following Error:</p>
<pre><code>Building without sound null safety
For more information see https://dart.dev/null-safety/unsound-null-safety

Running Gradle task 'assembleRelease'...                        


FAILURE: Build failed with an exception.

* What went wrong:
Execution failed for task ':app:lintVitalRelease'.
&gt; Could not resolve all artifacts for configuration ':image_picker_android:debugUnitTestRuntimeClasspath'.
   &gt; Failed to transform bcprov-jdk15on-1.68.jar (org.bouncycastle:bcprov-jdk15on:1.68) to match attributes {artifactType=processed-jar, org.gradle.category=library, org.gradle.libraryelements=jar, org.gradle.status=release, org.gradle.usage=java-runtime}.
      &gt; Execution failed for JetifyTransform: /home/cicada/.gradle/caches/modules-2/files-2.1/org.bouncycastle/bcprov-jdk15on/1.68/46a080368d38b428d237a59458f9bc915222894d/bcprov-jdk15on-1.68.jar.
         &gt; Failed to transform '/home/cicada/.gradle/caches/modules-2/files-2.1/org.bouncycastle/bcprov-jdk15on/1.68/46a080368d38b428d237a59458f9bc915222894d/bcprov-jdk15on-1.68.jar' using Jetifier. Reason: IllegalArgumentException, message: Unsupported class file major version 59. (Run with --stacktrace for more details.)
           Suggestions:
            - Check out existing issues at https://issuetracker.google.com/issues?q=componentid:460323&amp;s=modified_time:desc, it's possible that this issue has already been filed there.
            - If this issue has not been filed, please report it at https://issuetracker.google.com/issues/new?component=460323 (run with --stacktrace and provide a stack trace if possible).

* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.

* Get more help at https://help.gradle.org

BUILD FAILED in 19s
Running Gradle task 'assembleRelease'...                           20.7s
Gradle task assembleRelease failed with exit code 1
Process finished with exit code 1
</code></pre>
","72518904","<p><strong>This was my solution which I recommend to be the 2nd option:</strong></p>
<p><strong>Solution 1:</strong>
I added following lines in the <strong>android directory of app level build.gradle <em>i.e android/app/build.gradle</em></strong> of my  project.</p>
<pre><code>   lintOptions {
        disable 'InvalidPackage'
        disable &quot;Instantiatable&quot;
        checkReleaseBuilds false
        abortOnError false
    }
</code></pre>
<p>And every thing started to work fine.
<a href=""https://firebasestorage.googleapis.com/v0/b/learning-firebase-2d636.appspot.com/o/build.gradle?alt=media&amp;token=801bbb4a-6560-45f7-88de-7d9b594f3dfe"" rel=""noreferrer"">Check out my Gradle File</a></p>
<p><strong>Solution 2:</strong></p>
<p>However I suggest you people by the solution of @Vinadon and agree with the comment of @raiderOne:
1st recommended solution should be:</p>
<p>The issues lies in image_picker_android being updated to gradle 7.1.2. See their changelog. Following an issue on GitHub you have to update your gradle version like so:</p>
<p>In android/gradle/wrapper/gradle-wrapper.properties update your distributionUrl to</p>
<pre><code>distributionUrl=https\://services.gradle.org/distributions/gradle-7.2-all.zip
</code></pre>
<p>and in android/build.gradle change the gradle version to at least 7.1.2</p>
<pre><code>classpath 'com.android.tools.build:gradle:7.1.2
</code></pre>
<p>In @Vinadon case, He had to update his Android Studio for a newer Java version too.
<em><strong>Upvote Vindadon answer below for this solution.</strong></em> Thanks!</p>
"
"74916107","1","ConcurrentHashMap computeIfAbsent tell if first time or not","<p>It's complicated for me to articulate a proper title for this. But an example should make it far simpler. Suppose I have this:</p>
<pre><code>final class Cache {
   private static final ConcurrentHashMap&lt;String, List&lt;String&gt;&gt; CACHE = ...

   static List&lt;String&gt; byName(String name) {
      return CACHE.computeIfAbsent(name, x -&gt; // some expensive operation)
   }

}
</code></pre>
<p>The idea is probably trivial, this acts as a LoadingCache, much like guava or caffeine (in reality it is more complicated, but that is irrelevant to the question).</p>
<p>I would like to be able to tell if this was the first load into the CACHE, or it was a read of an existing mapping. Currently, I do this:</p>
<pre><code>final class Cache {
   private static final ConcurrentHashMap&lt;String, List&lt;String&gt;&gt; CACHE = ...

   static List&lt;String&gt; byName(String name) {
      boolean b[] = new boolean[1];
      List&lt;String&gt; result = CACHE.computeIfAbsent(name, x -&gt; {
            b[0] = true;
            // some expensive operation)
      });

      if(b[0]) {
         // first load into the cache, do X
      } else {
         // do Y
      }

      return result;
   }

}
</code></pre>
<p>This works, but I am afraid I am missing something that <code>ConcurrentHashMap</code> can offer for me that would allow me to do the same. Thank you.</p>
","74919640","<p>If you want to avoid your single-element array to pass data out of the lambda (which I would rather do with an <code>AtomicReference</code> or <code>AtomicBoolean</code>), you could use a stateful callback object. It doesn't change the behavior or design of your code, but could be considered a little bit cleaner and more OOP-y.</p>
<pre><code>class LoadingAction&lt;K, V&gt; {
  private boolean called = false;

  public V load(final K key) {
    called = true;
    // load data
    return ...;
  }

  public void executePostLoad() {
    if (called) {
      // loaded into cache, do X
    } else {
      // do Y
    }
  }
}

final class Cache {
   private static final ConcurrentHashMap&lt;String, List&lt;String&gt;&gt; CACHE = new ConcurrentHashMap&lt;&gt;();

   static List&lt;String&gt; byName(String name) {
      final LoadingAction&lt;String, List&lt;String&gt;&gt; loader = new LoadingAction&lt;&gt;();
      final List&lt;String&gt; result = CACHE.computeIfAbsent(name, loader::load);

      loader.executePostLoad();

      return result;
   }

}
</code></pre>
<p>Or turn it inside-out:</p>
<pre><code>class Loader&lt;K, V&gt; {
  private boolean called = false;

  public V load(final Map&lt;K, V&gt; map, final K key) {
    final V result = map.computeIfAbsent(key, this::load);
    this.executePostLoad();
    return result;
  }

  private V load(final K key) {
    called = true;
    // load data
    return ...;
  }

  private void executePostLoad() {
    if (called) {
      // loaded into cache, do X
    } else {
      // do Y
    }
  }
}

final class Cache {
   private static final ConcurrentHashMap&lt;String, List&lt;String&gt;&gt; CACHE = new ConcurrentHashMap&lt;&gt;();

   static List&lt;String&gt; byName(String name) {
      final Loader&lt;String, List&lt;String&gt;&gt; loader = new Loader&lt;&gt;();
      return loader.load(CACHE, name);
   }

}
</code></pre>
<p>Construction and loading could be encapsulated in a static method:</p>
<pre><code>class Loader&lt;K, V&gt; {
  private boolean called = false;

  public static &lt;K, V&gt; V load(final Map&lt;K, V&gt; map, final K key) {
      final Loader&lt;K, V&gt; loader = new Loader&lt;&gt;();
      return loader.doLoad(map, key);
  }

  private V doLoad(final Map&lt;K, V&gt; map, final K key) {
    final V result = map.computeIfAbsent(key, this::load);
    this.executePostLoad();
    return result;
  }

  private V load(final K key) {
    called = true;
    // load data
    return ...;
  }

  private void executePostLoad() {
    if (called) {
      // loaded into cache, do X
    } else {
      // do Y
    }
  }
}

final class Cache {
   private static final ConcurrentHashMap&lt;String, List&lt;String&gt;&gt; CACHE = new ConcurrentHashMap&lt;&gt;();

   static List&lt;String&gt; byName(String name) {
      return Loader.load(CACHE, name);
   }

}
</code></pre>
"
"72615382","1","Cannot resolve method 'of' in 'ImmutableList","<p><strong>Debugging Details:</strong> Following tutorial to migrate from Android Billing 4.0 to 5.0 <a href=""https://developer.android.com/google/play/billing/migrate-gpblv5"" rel=""nofollow noreferrer"">https://developer.android.com/google/play/billing/migrate-gpblv5</a>, specifically in the section &quot;Showing products available to buy&quot;
The 'of' in ImmutableList is flagged red and the error in Android Studio is</p>
<blockquote>
<p>Cannot resolve method 'of' in 'ImmutableList'&quot;</p>
</blockquote>
<p>How can I resolve?</p>
<p><strong>Minimal reproducible code to get the Compilation Error:</strong></p>
<pre class=""lang-java prettyprint-override""><code>QueryProductDetailsParams queryProductDetailsParams =
        QueryProductDetailsParams.newBuilder()
                .setProductList(
                        ImmutableList.of(
                                QueryProductDetailsParams.Product.newBuilder()
                                        .setProductId(PREMIUM_MONTHLY_VERSION_ID)
                                        .setProductType(BillingClient.ProductType.SUBS)
                                        .build()))
                .build();
</code></pre>
<p>Here are the specific details:</p>
<p><strong>Desired Behaviour</strong>: Code compiles fine.</p>
<p><strong>Specific Problem or Error</strong>: Compilation error.</p>
","72616597","<p><code>ImmutableList</code>, in context of 'a tutorial for Android Billing 5.0', is clearly referring to guava's ImmutableList - the full name of this type is <code>com.google.common.collect.ImmutableList</code>.</p>
<p>This class is baked into android as far as I remember (but not in plain java). It has always had an <code>of</code> method. Thus:</p>
<ul>
<li>Most likely you have some type in your package or source file called <code>ImmutableList</code>. Don't do that. Rename yours to something else.</li>
<li>Alternatively, check your imports - you imported something else also named <code>ImmutableList</code>. You should have an <code>import com.google.common.collect.ImmutableList;</code> at the top, or possibly <code>import com.google.common.collect.*;</code> - if that is missing, consider adding it.</li>
</ul>
<p>Android doesn't &quot;have&quot; java 9 or java 11 - you just need java1 for this, the point is: <strong>It is not a java core class at all</strong> - only stuff that starts with <code>java.*</code> is. However, <em>android is not (quite) java</em>.</p>
<p>I'm just not sure: I thought guava (the library that contains ImmutableList) is available by default on android, which means your IDE&quot;s setup is broken. Or perhaps it is not, in which case you need to add the 'guava' dependency. How? Well, that depends - I think android builds are based on gradle, which would mean: Look it up on search.maven.org and follow the gradle instructions.</p>
"
"73817318","1","SSE core task scheduler startup problem in eclipse","<p>Whenever I'm launching my eclipse IDE with my project workspace, there is one popup window showing some internal error with the task scheduler. I'm attaching the picture of that popup window here.</p>
<p><a href=""https://i.stack.imgur.com/KycYG.jpg"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/KycYG.jpg"" alt=""enter image description here"" /></a></p>
<p>My project is all in java language and also uses spring boot in it.</p>
<p>The error says something like</p>
<p><em>An internal error occurred during: &quot;SSE core task scheduler startup&quot;</em></p>
<p>Sorry I'm not able to add a direct image for this as Stack overflow is not allowing me to do that.</p>
","73970552","<p>I had the same problem today.</p>
<p>Updating Eclipse solved it for me:</p>
<p>Help -&gt; About Eclipse -&gt; Installation Details -&gt; Update</p>
"
"72703351","1","Java 19 Pattern Matching Compilation Error: ""the switch statement does not cover all possible input values""","<p>Using the Brian Goetz article: <a href=""https://www.infoq.com/articles/data-oriented-programming-java/"" rel=""nofollow noreferrer"">https://www.infoq.com/articles/data-oriented-programming-java/</a></p>
<pre class=""lang-java prettyprint-override""><code>sealed interface Opt&lt;T&gt; { 
    record Some&lt;T&gt;(T value) implements Opt&lt;T&gt; { }
    record None&lt;T&gt;() implements Opt&lt;T&gt; { }
}
</code></pre>
<p>This compiles and runs as expected. The exhaustive pattern matching works:</p>
<pre class=""lang-java prettyprint-override""><code>Opt&lt;String&gt; optValue = doCalc(value);
switch (optValue) {
  case Opt.Some&lt;String&gt; some -&gt; System.out.printf(&quot;got string: %s%n&quot;, some.value());
  case Opt.None&lt;String&gt; none -&gt; System.out.printf(&quot;got none%n&quot;);
};
</code></pre>
<p>This variation where I use the new Record patterns preview feature, breaks the exhaustive pattern matching, where this won't compile without adding a default case statement:</p>
<pre class=""lang-java prettyprint-override""><code>Opt&lt;String&gt; optValue = doCalc(value);
switch (optValue) {
    case Opt.Some&lt;String&gt;(String v) -&gt; System.out.printf(&quot;got string: %s%n&quot;, v);
    case Opt.None&lt;String&gt; none -&gt; System.out.printf(&quot;got none%n&quot;);
};
</code></pre>
<p>With <code>OpenJDK Runtime Environment (build 19-ea+32-2220)</code>, I get the compilation error: <code>the switch statement does not cover all possible input values</code>.</p>
<p>When I add a default case statement, and the program works, but I don't get exhaustive pattern matching.</p>
<p>If I remove the record pattern matching, the program works.</p>
<p>If I create a variation of this without generics, that uses sealed classes, exhaustive pattern matching, and record patterns, it works.</p>
<p>However, it seems the combination of record patterns, generics and exhaustive pattern matching does not work.</p>
","73977879","<p>This is a known bug in Java 19. This was confirmed by Brian Goetz himself on the amber-dev mailing list.</p>
<p><strong>UPDATE</strong>: This issue is completely fixed in Java 20.</p>
"
"73999566","1","How to construct PickVisualMediaRequest for ActivityResultLauncher","<p>I am trying to use the <a href=""https://developer.android.com/training/basics/intents/result"" rel=""noreferrer"">Activity Result APIs</a> to handle the picking of a single photo for an app I am developing. I am trying to use one of the predefined contracts to keep things simple. So, I am attempting to use the <a href=""https://developer.android.com/reference/androidx/activity/result/contract/ActivityResultContracts.PickVisualMedia"" rel=""noreferrer"">ActivityResultContracts.PickVisualMedia()</a> contract.</p>
<p>I am setting the Activity Result Launcher up as follows:</p>
<pre><code>private ActivityResultLauncher&lt;PickVisualMediaRequest&gt; pickVisualMediaActivityResultLauncher;

@Override
protected void onCreate(@Nullable Bundle savedInstanceState) {
    pickVisualMediaActivityResultLauncher = registerForActivityResult(
            new ActivityResultContracts.PickVisualMedia(),
            this::onPickVisualMediaActivityResult
    );
}
</code></pre>
<p>And I am attempting to construct a <a href=""https://developer.android.com/reference/androidx/activity/result/PickVisualMediaRequest"" rel=""noreferrer"">PickVisualMediaRequest</a> and launch the Activity Result Launcher here:</p>
<pre><code>private void onSelectNewPhotoButtonClick() {
    PickVisualMediaRequest request = new PickVisualMediaRequest.Builder()
            .setMediaType(new ActivityResultContracts.PickVisualMedia.ImageOnly())
            .build();
    pickVisualMediaActivityResultLauncher.launch(request);
}
</code></pre>
<p>Issue is that Android Studio is complaining about ActivityResultContracts.PickVisualMedia.ImageOnly() not having proper visibility to be used, even though it is a valid VisualMediaType and the docs imply that it should be used this way:
<a href=""https://i.stack.imgur.com/Y1Zjh.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/Y1Zjh.png"" alt=""enter image description here"" /></a></p>
<p>I can't really find any code samples on this particular scenario. Am I missing something? Does the API have a visibility defect or am I just dumb today?</p>
","74000104","<p>After some help from CommonsWare, I determined that <code>setMediaType()</code> accepts a Kotlin object instance. So, the above bad function I had should be:</p>
<pre><code>private void onSelectNewPhotoButtonClick() {
    ActivityResultContracts.PickVisualMedia.VisualMediaType mediaType = (ActivityResultContracts.PickVisualMedia.VisualMediaType) ActivityResultContracts.PickVisualMedia.ImageOnly.INSTANCE;
    PickVisualMediaRequest request = new PickVisualMediaRequest.Builder()
            .setMediaType(mediaType)
            .build();
    pickVisualMediaActivityResultLauncher.launch(request);
}
</code></pre>
<p>Android Studio complains about the type casting, but the code does compile and work as expected. Very bizarre.</p>
<p><a href=""https://i.stack.imgur.com/gXs9p.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/gXs9p.png"" alt=""enter image description here"" /></a></p>
<p><a href=""https://i.stack.imgur.com/3ZUVv.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/3ZUVv.png"" alt=""enter image description here"" /></a></p>
"
"72520506","1","How does spring create proxy for a final class?","<p>Maybe I have some outdated knowledge but it is the same as described here
<a href=""https://stackoverflow.com/a/2657465/2674303"">https://stackoverflow.com/a/2657465/2674303</a></p>
<p>But now I noticed that this example works without any exceptions:</p>
<pre><code>@Service
@EnableScheduling
public final class MyService {
    @PostConstruct
    public void init(){
        System.out.println(&quot;MyService started&quot;);
    }
    @Scheduled(fixedDelay= 1000)
    public void scheduleCall() {
        System.out.println(&quot;scheduleCall&quot;);    
 
  }
}
</code></pre>
<p>Could you pease provide how does it work ?</p>
","72624573","<p><a href=""https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/scheduling/annotation/Scheduled.html"" rel=""noreferrer"">@Scheduled</a> annotation does not require proxy creation. The mechanism is different. After bean initialization Spring called post-processor <a href=""https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.html"" rel=""noreferrer"">ScheduledAnnotationBeanPostProcessor</a>. Post processor searches for all methods annotated with <code>@Scheduled</code> and registers them to <a href=""https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/scheduling/TaskScheduler.html"" rel=""noreferrer"">TaskScheduller</a> for execution. Method execution will be performed via reflection.
<br>See <a href=""https://github.com/spring-projects/spring-framework/blob/ba0473e88536a2f0e5570ccc34f8ba254523f92b/spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java#L354"" rel=""noreferrer"">ScheduledAnnotationBeanPostProcessor source code</a>.</p>
<p><a href=""https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/scheduling/annotation/Scheduled.html"" rel=""noreferrer"">@Scheduled</a></p>
<blockquote>
<p>Processing of @Scheduled annotations is performed by registering a
ScheduledAnnotationBeanPostProcessor. This can be done manually or,
more conveniently, through the task:annotation-driven/ XML element
or @EnableScheduling annotation.</p>
</blockquote>
<p><a href=""https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.html"" rel=""noreferrer"">ScheduledAnnotationBeanPostProcessor</a></p>
<blockquote>
<p>Bean post-processor that registers methods annotated with @Scheduled
to be invoked by a TaskScheduler according to the &quot;fixedRate&quot;,
&quot;fixedDelay&quot;, or &quot;cron&quot; expression provided via the annotation. This
post-processor is automatically registered by Spring's
task:annotation-driven XML element, and also by the
@EnableScheduling annotation.</p>
<p>Autodetects any SchedulingConfigurer instances in the container,
allowing for customization of the scheduler to be used or for
fine-grained control over task registration (e.g. registration of
Trigger tasks). See the @EnableScheduling javadocs for complete usage
details.</p>
</blockquote>
<p><a href=""https://docs.oracle.com/javase/8/docs/api/javax/annotation/PostConstruct.html?is-external=true"" rel=""noreferrer"">@PostConstruct</a> also implemented via post-processor <a href=""https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.html"" rel=""noreferrer"">InitDestroyAnnotationBeanPostProcessor</a> when dependency injection performed for bean, method which marked <code>@PostConstruct</code> will be executed thru reflection without proxy.
<br>See <a href=""https://github.com/spring-projects/spring-framework/blob/ba0473e88536a2f0e5570ccc34f8ba254523f92b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.java#L358"" rel=""noreferrer"">InitDestroyAnnotationBeanPostProcessor source code</a></p>
<p><strong>Summary:</strong>
<br>In your example, Spring will create bean without proxy.</p>
<p>In case you will add a proxy-specific annotation, for example, <code>@Transactional</code> you will get an exception that proxy can not be created due to final class <code>java.lang.IllegalArgumentException: Cannot subclass final class com.test.services.MyService</code></p>
<pre class=""lang-java prettyprint-override""><code>@Service
@EnableScheduling
public final class MyService {
    @PostConstruct
    public void init(){
        System.out.println(&quot;MyService started&quot;);
    }
    @Scheduled(fixedDelay= 1000)
    @Transactional
    public void scheduleCall() {
        System.out.println(&quot;scheduleCall&quot;);

    }
}
</code></pre>
<p>But the current problem you also can solve to force use <code>JDK dynamic proxy</code>. We need to create an interface for class and set property <code>spring.aop.proxy-target-class = false</code> according to <a href=""https://docs.spring.io/spring-framework/docs/3.0.0.M3/reference/html/ch08s06.html"" rel=""noreferrer"">Proxying mechanisms</a></p>
"
"74240190","1","Numeric comparing option for Java Collator","<p><strong>Problem:</strong></p>
<p>Let's say we have the following list of strings <code>{&quot;Test1.txt&quot;, &quot;Test2.txt&quot;, &quot;Test11.txt&quot;, &quot;Test22.txt&quot;}</code>, sorting them using <code>String::compareTo</code> or <code>Collator::compare</code> would result in following order:</p>
<pre><code>Test1.txt
Test2.txt
Test22.txt
Test3.txt
</code></pre>
<p>Which is inconvenient(arguably), while a more human-friendly outcome is:</p>
<pre><code>Test1.txt
Test2.txt
Test3.txt
Test22.txt
</code></pre>
<p>To resolve this issues we can write our own compare method which is numeric sensitive.
But what if we want numeric sensitive sort as well as the benefit of using existing implementation of <code>Collator</code> (or to avoid implementing one) for internationalization?</p>
<p>Is there a right way to handle this? or maybe a reliable library that addresses this problem?</p>
<p><strong>Other Languages:</strong></p>
<p>In Javascript world the <code>Intl.Collator</code>'s constructors accepts a <code>CollatorOption</code> which allows you to set configs to achieve such functionality and more:</p>
<pre><code>const usCollator = Intl.Collator(&quot;us&quot;, { numeric: true });
const list = [&quot;Test1.txt&quot;, &quot;Test2.txt&quot;, &quot;Test3.txt&quot;, &quot;Test22.txt&quot;];
list.sort(usCollator.compare);
console.log(list);
</code></pre>
","74302933","<p>You can use <a href=""https://github.com/sawano/alphanumeric-comparator"" rel=""nofollow noreferrer"">alphanumeric-comparator</a>, which is available in <a href=""https://search.maven.org/search?q=a:alphanumeric-comparator"" rel=""nofollow noreferrer"">Maven</a>.</p>
"
"74337681","1","Is the permits relationship of Java Sealed classes/interfaces transitive","<p>If I read the JLS <a href=""https://docs.oracle.com/javase/specs/jls/se19/html/jls-8.html#jls-8.1.6"" rel=""nofollow noreferrer"">§8.1.6</a> and <a href=""https://docs.oracle.com/javase/specs/jls/se19/html/jls-9.html#jls-9.1.4"" rel=""nofollow noreferrer"">§9.1.4</a> correctly, the classes that a sealed class/interface permits, are just the <em>direct</em> subclasses/interfaces.</p>
<p>To illustrate this, consider the following example:</p>
<pre class=""lang-java prettyprint-override""><code>public sealed interface I1 permits I2, C, D { /*...*/ }
public final class C implements I1 { /*...*/ }
public final class D implements I1 { /*...*/ }

public sealed interface I2 extends I1 permits E, F { /*...*/ }
public final class E implements I2 { /*...*/ }
public final class F implements I2 { /*...*/ }
</code></pre>
<p>If I understand the specification correctly, <code>I1</code> obviously permits <code>C</code> and <code>D</code> but not <code>E</code> and <code>F</code> (via the <code>extends</code> hierarchy of <code>I2</code> from <code>I1</code>). Is this correct?</p>
<p>The reason I'm asking is what patterns are allowed for switch expressions of the following kind:</p>
<pre class=""lang-java prettyprint-override""><code>I1 i1 = // ...
return switch (i1) {
    case C c -&gt; &quot;1&quot;;
    case D d -&gt; &quot;2&quot;;
    case E e -&gt; &quot;3&quot;; // Can we match over E?
    case F f -&gt; &quot;4&quot;; // Can we match over F?
    default  -&gt; &quot;5&quot;;
};
</code></pre>
","74339207","<blockquote>
<p><code>I1</code> obviously permits <code>C</code> and <code>D</code> but not <code>E</code> and <code>F</code>. Is this correct?</p>
</blockquote>
<p>More accurately, you can say that <code>C</code> and <code>D</code> are in the set of <em>permitted direct subclasses</em> of <code>I1</code>, which is a term defined in section 9.1.4. The JLS doesn't really define what &quot;<code>I1</code> <em>permits</em> <code>C</code> and <code>D</code>&quot; means though.</p>
<p>As for your switch expression, the reason why it works is two-fold. First, you are able to write a type pattern in a switch label if the type of the switch selector expression is downcast-convertible to that type.</p>
<p><a href=""https://docs.oracle.com/javase/specs/jls/se19/preview/specs/patterns-switch-record-patterns-jls.html#jls-14.11.1"" rel=""nofollow noreferrer"">14.11.1</a></p>
<blockquote>
<p>A pattern case element p is switch compatible with T if p is applicable at type T (<a href=""https://docs.oracle.com/javase/specs/jls/se19/preview/specs/patterns-switch-record-patterns-jls.html#jls-14.30.3"" rel=""nofollow noreferrer"">14.30.3</a>).</p>
</blockquote>
<p>14.30.3:</p>
<blockquote>
<p>A pattern p is said to be applicable at a type T if one of the following rules apply:</p>
<ul>
<li>A type pattern that declares a pattern variable of a reference type U is applicable at another reference type T if T is downcast convertible to U (<a href=""https://docs.oracle.com/javase/specs/jls/se19/preview/specs/patterns-switch-record-patterns-jls.html#jls-5.5"" rel=""nofollow noreferrer"">5.5</a>).</li>
</ul>
</blockquote>
<p>Obviously, <code>E</code> is downcast-convertible to <code>I1</code> through a widening reference conversion, because <code>E</code> implements <code>I1</code>. Note that this fact has nothing to do with <code>permits</code>. It is simply a result of <code>E implements I2</code> and <code>I2 extends I1</code>. Surely you would agree that <code>implements</code> and <code>extends</code> are transitive!</p>
<p>Second, switch expressions need to be exhaustive. Your switch expression is always exhaustive because it has a <code>default</code> case. However, it is still exhaustive even without the <code>default</code> case.</p>
<p>From now on, we will consider your switch expression but without the <code>default</code> case, because that is where <code>permits</code> plays a role. The rules to determine whether the set of case labels you wrote are exhaustive are specified in <a href=""https://docs.oracle.com/javase/specs/jls/se19/preview/specs/patterns-switch-record-patterns-jls.html#jls-14.11.1.1"" rel=""nofollow noreferrer"">14.11.1.1</a>. The important bit of your case is (this is kind of an inductive definition):</p>
<blockquote>
<ul>
<li>A set of case elements is exhaustive for a type T if it contains a pattern that is unconditional at type T (14.30.3).</li>
<li>A set of case elements is exhaustive for a type T that includes an abstract and sealed class or interface named C, if it is exhaustive
for every applicable permitted direct subtype of T.</li>
</ul>
</blockquote>
<p>&quot;applicable permitted direct subtype of T&quot; in your case is really just the same as &quot;permitted direct subtype of T&quot;. You can also treat &quot;a type T that includes an abstract and sealed class or interface named C&quot; as the same as <code>T</code> - the &quot;includes&quot; relationship isn't relevant to your case. With <code>T=I1</code> in mind, we can start &quot;running&quot; this algorithm.</p>
<p>We use the second rule first - the permitted direct subtypes of <code>I1</code> are <code>I2</code>, <code>C</code> and <code>D</code>. Since we have a <code>C c</code> and <code>D d</code> in the case elements, we know that our set of case elements is exhaustive for <code>C</code> and <code>D</code> (first rule). Is it also exhaustive for <code>I2</code>? To determine that, we use the second rule again. The permitted direct subtypes of <code>I2</code> are <code>E</code> and <code>F</code>. Using the first rule, we know that the case elements <code>E e</code> and <code>F f</code> are exhaustive for <code>E</code> and <code>F</code> respectively. We have now proven that that the set of case elements are exhaustive for <code>I2</code>, <code>C</code> and <code>D</code>, so it is exhaustive for <code>I1</code>, according to the second rule.</p>
<p>So if you are talking about how switch patterns work, I think &quot;inductive&quot; is a better word to describe how the exhaustiveness of switch case labels are verified.</p>
"
"72628636","1","How to create a new pom file with additional dependencies and add it during build time?","<p>I am currently using formsflow.ai opensource version 4.0.5.
I want to include a new Listener to the bpm module which has a new library dependency which is not currently in the solution. Although, I managed to add the new library in main pom.xml, since the requirement is for one of my client I just cannot modify the root pom.xml file. Is their an option available in formsflow / maven to include profiles and choose pom?
If it already available in formsflow, then how can I configure the same?
Please give me a solution.</p>
","72629089","<p>You can checkout how to add profile on a pom.xml file from maven documentation <a href=""https://maven.apache.org/guides/introduction/introduction-to-profiles.html"" rel=""nofollow noreferrer"">how to add profile in maven</a>.
In formsflow.ai we let our users manage the additional library dependency using an extra pom.xml (pom-.xml).
You can always refer to our internal documentation and also provided with a pom-default.xml to start with.
The facts about these profiling are.</p>
<ol>
<li>you can add as many as number of unique profiling in pom.xml by mapping the default configuration.</li>
<li>You can add only 1 module per profile, since the docker build look up for the pom in the base directory and adding more than one module will override target.</li>
<li>You need to change profile param in Dockerfile before building it if you want to go with a profile other than default.</li>
</ol>
<p>Hope this helps</p>
"
"72683786","1","Error while importing Springboot 2.7 projects in intellij Idea with maven 3.8.5","<p>when Using start.spring.io
projects generated with springboot 2.7 comes with MavenProject 3.8.5 which when imported in intellij causes an error that is quite difficult to debug or not self speaking by itself.</p>
<p>The error</p>
<pre><code>java.lang.RuntimeException: org.codehaus.plexus.component.repository.exception.ComponentLookupException: com.google.inject.ProvisionException: Unable to provision, see the following errors:

1) Error injecting constructor, java.lang.NoSuchMethodError: org.apache.maven.model.validation.DefaultModelValidator: method 'void &lt;init&gt;()' not found
  at org.jetbrains.idea.maven.server.embedder.CustomModelValidator.&lt;init&gt;(Unknown Source)
  while locating org.jetbrains.idea.maven.server.embedder.CustomModelValidator
  at ClassRealm[maven.ext, parent: ClassRealm[plexus.core, parent: null]] (via modules: org.eclipse.sisu.wire.WireModule -&gt; org.eclipse.sisu.plexus.PlexusBindingModule)
  while locating org.apache.maven.model.validation.ModelValidator annotated with @com.google.inject.name.Named(value=&quot;ide&quot;)

1 error
      role: org.apache.maven.model.validation.ModelValidator
  roleHint: ide
</code></pre>
","72686220","<p>That should have been fixed in 2022.1 in the scope of <a href=""https://youtrack.jetbrains.com/issue/IDEA-290419/Maven-385-NoSuchMethodError-orgapachemavenmodelvalidationDefaultModelValidator-method-void-init-not-found"" rel=""noreferrer"">this bug</a></p>
<p>Please update your IDE</p>
"
"74330854","1","OpenJDK 19 and compressed pointers","<p>I have a hard time understanding how compressed pointers works in Java 19, help is appreciated.</p>
<p>In Java 11 the reference size is 4 for heaps below 32GiB (compressed pointers) and 8 for a larger heap. In Java 19 they seem to take 4 bytes even for larger heaps (how?).</p>
<p>Details:</p>
<p>Java versions: OpenJDK Java 11.0.12 and OpenJDK Java 19.0.1</p>
<p>Command lines:</p>
<blockquote>
<p>-XX:+UnlockExperimentalVMOptions -XX:+UseEpsilonGC  -Xlog:gc -Xlog:gc+heap+coops -Xms41g -Xmx41g -XX:+AlwaysPreTouch</p>
</blockquote>
<blockquote>
<p>-XX:+UnlockExperimentalVMOptions -XX:+UseEpsilonGC  -Xlog:gc -Xlog:gc+heap+coops -Xms31g -Xmx31g -XX:+AlwaysPreTouch</p>
</blockquote>
<p>Code: <a href=""https://github.com/cornelcreanga/fun/blob/master/src/main/java/com/ccreanga/various/RandomAllocate.java"" rel=""nofollow noreferrer"">https://github.com/cornelcreanga/fun/blob/master/src/main/java/com/ccreanga/various/RandomAllocate.java</a> - the code is taken from <a href=""https://shipilev.net/jvm/anatomy-quarks/23-compressed-references/"" rel=""nofollow noreferrer"">https://shipilev.net/jvm/anatomy-quarks/23-compressed-references/</a></p>
<p>Run this code with both Java 11 and 19 and you can see that the memory size is lower in Java 19 than in Java 11 for a heap &gt; 32 GiB. For a smaller heap the size is almost identical.</p>
","74349384","<p>You are looking at the layout of a <code>byte[]</code> array and an instance of <code>java.lang.Object</code>. Neither of them contains a reference to an object inside the heap.</p>
<p>The difference you are seeing, is in the size of the <em>class pointer</em> which is not pointing to a location inside the heap memory. But for historical reasons, the option <code>-XX:+UseCompressedClassPointers</code> was bound to the presence of the <code>-XX:+UseCompressedOops</code> option. So when the heap size disallowed compressed object pointers, the compressed class pointers were disabled as a side effect.</p>
<p><a href=""https://bugs.openjdk.org/browse/JDK-8241825"" rel=""noreferrer"">JDK-8241825, Make compressed oops and compressed class pointers independent</a> addresses this and has been solved with JDK 15.</p>
<p>So when I change your program to</p>
<pre class=""lang-java prettyprint-override""><code>System.out.println(ClassLayout.parseInstance(new Object[3]).toPrintable());
</code></pre>
<p>and run it with a 41GB heap, I get</p>
<pre class=""lang-none prettyprint-override""><code>[Ljava.lang.Object; object internals:
OFF  SZ               TYPE DESCRIPTION               VALUE
  0   8                    (object header: mark)     0x0000000000000001 (non-biasable; age: 0)
  8   8                    (object header: class)    0x000001f54bec41e0
 16   4                    (array length)            3
 20   4                    (alignment/padding gap)
 24  24   java.lang.Object Object;.&lt;elements&gt;        N/A
Instance size: 48 bytes
Space losses: 4 bytes internal + 0 bytes external = 4 bytes total
</code></pre>
<p>prior to JDK 15 and</p>
<pre class=""lang-none prettyprint-override""><code>[Ljava.lang.Object; object internals:
OFF  SZ               TYPE DESCRIPTION               VALUE
  0   8                    (object header: mark)     0x0000000000000001 (non-biasable; age: 0)
  8   4                    (object header: class)    0x000020fc
 12   4                    (array length)            3
 16  24   java.lang.Object Object;.&lt;elements&gt;        N/A
Instance size: 40 bytes
Space losses: 0 bytes internal + 0 bytes external = 0 bytes total
</code></pre>
<p>with JDK 15 or newer.</p>
<p>The difference is clearly caused by the class pointer and the padding, but the three object references require 24 bytes in each JVM version.</p>
"
"74753700","1","Cannot resolve method 'antMatchers()' in AuthorizationManagerRequestMatcherRegistry","<p>I am currently following the <a href=""https://spring.io/blog/2022/02/21/spring-security-without-the-websecurityconfigureradapter"" rel=""noreferrer"">Spring Documentation</a> and some tutorials on Web Security. But now I have a problem, that I can't call the method <code>antMatchers</code>. This is the error I'm getting when building the project:</p>
<pre><code>java: cannot find symbol
  symbol:   method antMatchers(java.lang.String)
  location: variable requests of type org.springframework.security.config.annotation.web.configurers.AuthorizeHttpRequestsConfigurer&lt;org.springframework.security.config.annotation.web.builders.HttpSecurity&gt;.AuthorizationManagerRequestMatcherRegistry
</code></pre>
<p>In terms of my understanding, I should be able to use this method, so I can permit or not permit HTTP Requests to a certain URL. So my question is, why can't I use the <code>antMatchers()</code> method?</p>
<p><code>SecurityConfiguration</code> class:</p>
<pre class=""lang-java prettyprint-override""><code>package de.gabriel.vertretungsplan.security;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
public class SecurityConfiguration {

    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        http
                .authorizeHttpRequests((requests) -&gt; requests
                        .antMatchers(&quot;/vertretungsplan&quot;).hasAnyRole(&quot;SCHUELER&quot;, &quot;LEHRER&quot;, &quot;VERWALTUNG&quot;)
                        .anyRequest().authenticated()
                )
                .formLogin((form) -&gt; form
                        .loginPage(&quot;/login&quot;)
                        .permitAll()
                )
                .logout((logout) -&gt; logout.permitAll());

        return http.build();
    }

}
</code></pre>
<p><code>pom.xml</code>:</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
    xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
    &lt;parent&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
        &lt;version&gt;3.0.0&lt;/version&gt;
        &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;
    &lt;/parent&gt;
    &lt;groupId&gt;de.gabriel&lt;/groupId&gt;
    &lt;artifactId&gt;vertretungsplan&lt;/artifactId&gt;
    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
    &lt;name&gt;vertretungsplan&lt;/name&gt;
    &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;
    &lt;properties&gt;
        &lt;java.version&gt;17&lt;/java.version&gt;
    &lt;/properties&gt;
    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.mysql&lt;/groupId&gt;
            &lt;artifactId&gt;mysql-connector-j&lt;/artifactId&gt;
            &lt;scope&gt;runtime&lt;/scope&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;
            &lt;scope&gt;test&lt;/scope&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;
            &lt;artifactId&gt;spring-security-test&lt;/artifactId&gt;
            &lt;scope&gt;test&lt;/scope&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;

    &lt;build&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/build&gt;

&lt;/project&gt;
</code></pre>
","74753955","<p>In <del><code>antMatchers()</code></del> (<em>as well as</em> <del><code>mvcMathcers()</code></del> <em>and</em> <del><code>regexMatchers()</code></del>) have been deprecated and removed with Spring Security 6.0. Thus, you can't use them in a Spring Boot 3 project.</p>
<p>Have a look at this link if you wonder what was the rationale behind this change: <a href=""https://github.com/spring-projects/spring-framework/issues/28552"" rel=""nofollow noreferrer""><em>Deprecate trailing slash match</em></a>.</p>
<p>Overloaded method <a href=""https://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/config/annotation/web/AbstractRequestMatcherRegistry.html#requestMatchers(java.lang.String...)"" rel=""nofollow noreferrer""><code>requestMatchers()</code></a> was provided as a uniform mean for securing requests. It facilitates all the functionality of the configuration methods that have been removed from the API.</p>
<pre><code>@Bean
public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
    http
        .authorizeHttpRequests(requests -&gt; requests
            .requestMatchers(&quot;/vertretungsplan&quot;).hasAnyRole(&quot;SCHUELER&quot;, &quot;LEHRER&quot;, &quot;VERWALTUNG&quot;)
            .anyRequest().authenticated()
        )
        .formLogin(form -&gt; form
            .loginPage(&quot;/login&quot;)
            .permitAll()
        )
        .logout(logout -&gt; logout
            .permitAll());
    
    return http.build();
}
</code></pre>
"
"72724816","1","Running unit tests with Spark 3.3.0 on Java 17 fails with IllegalAccessError: class StorageUtils cannot access class sun.nio.ch.DirectBuffer","<p>According to the <a href=""https://spark.apache.org/releases/spark-release-3-3-0.html"" rel=""noreferrer"">release notes</a>, and specifically the ticket <em>Build and Run Spark on Java 17 (<a href=""https://issues.apache.org/jira/browse/SPARK-33772"" rel=""noreferrer"">SPARK-33772</a>)</em>, Spark now supports running on Java 17.</p>
<p>However, using Java 17 (Temurin-17.0.3+7) with Maven (3.8.6) and maven-surefire-plugin (3.0.0-M7), when running a unit test that uses Spark (3.3.0) it fails with:</p>
<blockquote>
<p><code>java.lang.IllegalAccessError: class org.apache.spark.storage.StorageUtils$ (in unnamed module @0x1e7ba8d9) cannot access class sun.nio.ch.DirectBuffer (in module java.base) because module java.base does not export sun.nio.ch to unnamed module @0x1e7ba8d9</code></p>
</blockquote>
<p>The stack is:</p>
<pre><code>java.lang.IllegalAccessError: class org.apache.spark.storage.StorageUtils$ (in unnamed module @0x1e7ba8d9) cannot access class sun.nio.ch.DirectBuffer (in module java.base) because module java.base does not export sun.nio.ch to unnamed module @0x1e7ba8d9
  at org.apache.spark.storage.StorageUtils$.&lt;init&gt;(StorageUtils.scala:213)
  at org.apache.spark.storage.StorageUtils$.&lt;clinit&gt;(StorageUtils.scala)
  at org.apache.spark.storage.BlockManagerMasterEndpoint.&lt;init&gt;(BlockManagerMasterEndpoint.scala:114)
  at org.apache.spark.SparkEnv$.$anonfun$create$9(SparkEnv.scala:353)
  at org.apache.spark.SparkEnv$.registerOrLookupEndpoint$1(SparkEnv.scala:290)
  at org.apache.spark.SparkEnv$.create(SparkEnv.scala:339)
  at org.apache.spark.SparkEnv$.createDriverEnv(SparkEnv.scala:194)
  at org.apache.spark.SparkContext.createSparkEnv(SparkContext.scala:279)
  at org.apache.spark.SparkContext.&lt;init&gt;(SparkContext.scala:464)
  at org.apache.spark.SparkContext$.getOrCreate(SparkContext.scala:2704)
  at org.apache.spark.sql.SparkSession$Builder.$anonfun$getOrCreate$2(SparkSession.scala:953)
  at scala.Option.getOrElse(Option.scala:189)
  at org.apache.spark.sql.SparkSession$Builder.getOrCreate(SparkSession.scala:947)
  [...]
</code></pre>
<p>The question <a href=""https://stackoverflow.com/questions/72230174""><em>Java 17 solution for Spark - java.lang.NoClassDefFoundError: Could not initialize class org.apache.spark.storage.StorageUtils</em></a> was asked only 2 months ago, but this pre-dated the Spark 3.3.0 release, and thus predated official support for Java 17.</p>
<p>Why can't I run my Spark 3.3.0 test with Java 17, and how can we fix it?</p>
","72724817","<p>Even though Spark now supports Java 17, it still references the JDK internal class <code>sun.nio.ch.DirectBuffer</code>:</p>
<pre><code>  // In Java 8, the type of DirectBuffer.cleaner() was sun.misc.Cleaner, and it was possible
  // to access the method sun.misc.Cleaner.clean() to invoke it. The type changed to
  // jdk.internal.ref.Cleaner in later JDKs, and the .clean() method is not accessible even with
  // reflection. However sun.misc.Unsafe added a invokeCleaner() method in JDK 9+ and this is
  // still accessible with reflection.
  private val bufferCleaner: DirectBuffer =&gt; Unit = [...]
</code></pre>
<p>Under the Java module system, access to this class is restricted.  The <a href=""https://docs.oracle.com/javase/9/migrate/toc.htm"" rel=""noreferrer"">Java 9 migration guide</a> says:</p>
<blockquote>
<p>If you must use an internal API that has been made inaccessible by default, then you can break encapsulation using the --add-exports command-line option.</p>
</blockquote>
<p>We need to open access to our module.  To do this for Surefire, we add this configuration to the plugin:</p>
<pre><code>&lt;plugin&gt;
  &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
  &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;
  &lt;version&gt;3.0.0-M7&lt;/version&gt;
  &lt;configuration&gt;
    &lt;argLine&gt;--add-exports java.base/sun.nio.ch=ALL-UNNAMED&lt;/argLine&gt;
  &lt;/configuration&gt;
&lt;/plugin&gt;
</code></pre>
<p>Based on a <a href=""https://lists.apache.org/thread/814cpb1rpp73zkhtv9t4mkzzrznl82yn"" rel=""noreferrer"">discussion with one of the Spark developers</a>, Spark adds the following in order to execute all of its internal unit tests.</p>
<blockquote>
<p>These options are used to pass all Spark UTs, but maybe you don't need all.</p>
</blockquote>
<pre><code>--add-opens=java.base/java.lang=ALL-UNNAMED
--add-opens=java.base/java.lang.invoke=ALL-UNNAMED
--add-opens=java.base/java.lang.reflect=ALL-UNNAMED
--add-opens=java.base/java.io=ALL-UNNAMED
--add-opens=java.base/java.net=ALL-UNNAMED
--add-opens=java.base/java.nio=ALL-UNNAMED
--add-opens=java.base/java.util=ALL-UNNAMED
--add-opens=java.base/java.util.concurrent=ALL-UNNAMED
--add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED
--add-opens=java.base/sun.nio.ch=ALL-UNNAMED
--add-opens=java.base/sun.nio.cs=ALL-UNNAMED
--add-opens=java.base/sun.security.action=ALL-UNNAMED
--add-opens=java.base/sun.util.calendar=ALL-UNNAMED
</code></pre>
<p>It was also commented:</p>
<blockquote>
<p>However, these Options needn't explicit add when using spark-shell, spark-sql and spark-submit</p>
</blockquote>
"
"74683791","1","Java CompletableFuture for sequential code","<p>My new team is writing a Java gRPC service and to ensure that we never block the request thread we ended-up wrapping more or less ALL methods inside a <a href=""https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletableFuture.html"" rel=""nofollow noreferrer"">CompletableFuture</a> even if those endpoints are conceptually a sequential list of operation (no parallelism).</p>
<p>So the code look something like (a Java example is available at the end if needed) :</p>
<pre><code>  methodA()
    methodB()
      methodD() (let say this one is a 15ms RPC call)
      methodE()
    methodC()
      methodF() (let say this one is a 5ms CPU intensive work)
      methodG()
 
</code></pre>
<p>Context:</p>
<ul>
<li>In practice the application is much bigger and there're many more layers of functions</li>
<li>Each application host need to handle 1000 QPS, so you can imagine that methodA is called at that rate</li>
<li>Some function (few) make a RPC call that can take 5-30ms (IO)</li>
<li>Some function (very few) run CPU intensive work (&lt; 5ms)</li>
</ul>
<p><strong>Edit 1:</strong> After more reading online yesterday, I understand that <strong>if, and only if, we are using true non-blocking HTTP and DB Client (and it doesn't seem like JDBC is non-blocking)</strong>, this pattern can reduce the total number of threads required. My understanding is that if we have enough memory to keep one thread per request, using a synchronous code would still probably be the most efficient implementation (reduce the overhead of switching threads and loading data), but if we didn't have enough memory to keep that many threads alive, then this notion of making the whole code non-blocking can reduce the number of thread and thus allow the application to scale to more request.</p>
<p><strong>Question 1:</strong>
I understand this unblocks the &quot;request thread&quot;, but in practice what's the advantage? Are we truly saving CPU time? In the example below, it feels like &quot;some&quot; thread will be alive the whole time anyways (in the example below, mostly the thread from CompletableFuture.supplyAsync in methodD), it just happens that it’s not the same thread as the one who received the initial request.</p>
<p><strong>Question 2:</strong>
Is that pattern truly a &quot;best practice&quot; and all services should follow a similar pattern? Outside of making the code a bit harder to read I feel, per request 50+ methods gets invoked and 50+ times we call a mix of CompletableFuture <code>.thenCompose()</code> or <code>.supplyAsync</code>. It seems like it's would be adding some overhead. Was <code>CompletableFuture</code> designed to be used that way across the whole code base in every method?</p>
<p><strong>Annex (java example):</strong></p>
<pre><code>  public void myEndpoint(MyRequest request, StreamObserver&lt;MyResponse&gt; responseObserver) {
    methodA(10)
        .thenApply((response) -&gt; responseObserver.next(response));
    
  }

  public CompletableFuture&lt;Integer&gt; methodA(Integer input) {
    return CompletableFuture.completedFuture(input)
        .thenCompose(this::methodB)
        .thenCompose(this::methodC)
        .thenApply((i) -&gt; {
          System.out.println(&quot;MethodA executed by &quot;.concat(Thread.currentThread().getName() + &quot;: &quot; + i));
          return i;
        });
  }

  public CompletableFuture&lt;Integer&gt; methodB(Integer input) {
    return CompletableFuture.completedFuture(input)
        .thenCompose(this::methodD)
        .thenCompose(this::methodE)
        .thenApply((i) -&gt; {
          System.out.println(&quot;MethodB executed by &quot;.concat(Thread.currentThread().getName() + &quot;: &quot; + i));
          return i;
        });
  }

  public CompletableFuture&lt;Integer&gt; methodC(Integer input) {
    return CompletableFuture.completedFuture(input)
        .thenCompose(this::methodF)
        .thenCompose(this::methodG)
        .thenApply((i) -&gt; {
          System.out.println(&quot;MethodC executed by &quot;.concat(Thread.currentThread().getName() + &quot;: &quot; + i));
          return i;
        });
  }

  public CompletableFuture&lt;Integer&gt; methodD(Integer input) {
    return CompletableFuture.supplyAsync(() -&gt; {
      try {
        // Assume it's a RPC call that takes 5-30ms
        Thread.sleep(20);
        System.out.println(&quot;MethodD executed by &quot;.concat(Thread.currentThread().getName() + &quot;: &quot; + input));
      } catch (InterruptedException e) {
        throw new RuntimeException(e);
      }
      return input + 1;
    });
  }

  public CompletableFuture&lt;Integer&gt; methodE(Integer input) {
    return CompletableFuture.supplyAsync(() -&gt; {
      System.out.println(&quot;MethodE executed by &quot;.concat(Thread.currentThread().getName() + &quot;: &quot; + input));
      return input + 1;
    });
  }

  public CompletableFuture&lt;Integer&gt; methodF(Integer input) {
    return CompletableFuture.supplyAsync(() -&gt; {
      try {
        // Let's assume it's a CPU intensive work that takes 2-5ms
        Thread.sleep(5);
        System.out.println(&quot;MethodF executed by &quot;.concat(Thread.currentThread().getName() + &quot;: &quot; + input));
      } catch (InterruptedException e) {
        throw new RuntimeException(e);
      }
      return input + 1;
    });
  }

  public CompletableFuture&lt;Integer&gt; methodG(Integer input) {
    return CompletableFuture.supplyAsync(() -&gt; {
      System.out.println(&quot;MethodG executed by &quot;.concat(Thread.currentThread().getName() + &quot;: &quot; + input));
      return input + 1;
    });
  }
</code></pre>
","74796834","<p>The premise is that threads are a scarce resource, which is not intrinsic to threads but a consequence of using a pool of threads with a configured maximum. The reason today’s frameworks use a pool is that threads, as implemented today, are expensive and creating too many of them can cause significant performance problems.</p>
<p>You wrote</p>
<blockquote>
<p>My understanding is that if we have enough memory to keep one thread per request, using a synchronous code would still probably be the most efficient implementation…</p>
</blockquote>
<p>which is going into the right direction, but it’s important to keep in mind that there might be more constraints than memory. Some operating system’s schedulers become significantly less efficient with a large number of threads, some may even have a fixed limit on how many threads a process is allowed to create.</p>
<p>So, when you block a thread by waiting for another, you are limiting the parallel processing capabilities of the thread pool. This applies if you are using, as you put it, a “true non-blocking” API, or just any already existing API that returns futures. Submitting your own operations via <code>supplyAsync</code> has no point as the supplier’s code still is executed by a thread, as you correctly pointed out.</p>
<p>But when you have an existing future returned by an operation, you should rather chain dependent processing steps instead of waiting for its result via <code>join</code> and friends. Note that calling <code>join()</code> on existing futures can make things even worse than just blocking threads:</p>
<p>When you call <code>join()</code> on a <code>CompletableFuture</code>, it tries to compensate the problem. When the caller is a worker thread of a Fork/Join pool, one of two things can happen:</p>
<ul>
<li>Instead of doing nothing, it may try to fetch pending jobs and execute them in-place, similar to <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/concurrent/ForkJoinPool.html#awaitQuiescence(long,java.util.concurrent.TimeUnit)"" rel=""nofollow noreferrer""><code>awaitQuiescence</code></a>.
<ul>
<li>In the best case, it will directly pick up the job you just scheduled with <code>supplyAsync</code> (if using the same pool) and execute it, almost as if you executed it without <code>CompletableFuture</code> (just consuming far more stack space).</li>
<li>In the worst case, the thread will be busy executing a long running, entirely unrelated job while the job it’s actually waiting for has been completed long ago. Imagine what happens if that unrelated job also calls <code>join</code>.</li>
</ul>
</li>
<li>It may end up actually blocking the thread but using <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/concurrent/ForkJoinPool.html#managedBlock(java.util.concurrent.ForkJoinPool.ManagedBlocker)"" rel=""nofollow noreferrer""><code>ForkJoinPool.managedBlock(…)</code></a>, which may start a new worker thread to ensure that the pool’s configured parallelism is kept. Great to solve the problem of reduced parallelism, but on the other hand, reintroducing the very problem of resource consumption you actually wanted to solve with thread pools.</li>
</ul>
<p>The worst of all is that you can’t even predict which of the two things will happen.</p>
<hr />
<p>There are, however, cases where not blocking a request thread by utilizing other threads has a point. Most notably when the response time for the request itself matters and the results of the background computation are delivered independent of the initial response. The most prominent example of this pattern is the event dispatch thread of GUI frameworks which must be kept free of long running operations, to be able to process subsequent user input.</p>
<hr />
<p>Note that there is a general solution on the way, to make 99% of all future chains obsolete. <a href=""https://bugs.openjdk.org/browse/JDK-8277131"" rel=""nofollow noreferrer"">Virtual Threads</a>, which are in preview state in JDK 19, are cheap to create and allow to create one thread per request, just like you envisioned in the cite above. When a virtual thread gets blocked, it will release the underlying platform thread for the next virtual thread, so there is no reason to hesitate to call <code>join()</code> on any future, even those belonging to “true non-blocking” APIs.</p>
<p>The best way to interoperate with this concept and the status quo is to design methods to <em>not</em> return futures, but perform the operation in-place. It’s still possible to design a future chain when necessary, i.e. by using <code>.thenApplyAsync(this::inPlaceEvalMethod)</code> instead of <code>.thenCompose(this::futureReturningMethod)</code>. But at the same time, you can write a plain sequential version just calling these methods, which can be executed by a virtual thread. In fact, you could even add the plain sequential version today and benchmark both approaches. The results might convince your team members that “not blocking the request thread” is not necessarily an improvement.</p>
"
"74816992","1","Why does Spring Security 6 not create sessions when authenticating with curl and basic auth?","<p>I recently upgraded to Spring Security 6, and have found that authenticating using basic auth from JS or from curl no longer works but authenticating with basic auth using Java's HttpClient does work. My goal is to be able to authenticate with all approaches.</p>
<p>The app uses Java 17, Spring Security 6, and Spring Session 3. It has a &quot;login&quot; endpoint which is just a convenience endpoint that is expected to be hit with basic auth and create a session, and it returns a User object. The session id should be used for subsequent requests to other endpoints.</p>
<p>The curl command is like so:</p>
<pre><code> curl -kv --user admin:admin &quot;https://localhost:9000/login&quot;
</code></pre>
<p>VS the HttpClient is configured like so and calling HttpClient.get(loginUrl)</p>
<pre><code>HttpClient.newBuilder()
       .connectTimeout(Duration.ofSeconds(300))
       .cookieHandler(new CookieManager())
       .authenticator(new BasicAuthenticator(username, password))
       .sslContext(createSsl())
       .build();

public class BasicAuthenticator extends Authenticator {

   private PasswordAuthentication authentication;

   public BasicAuthenticator(String username, String password) {
       authentication = new PasswordAuthentication(username, password.toCharArray());
   }

   @Override
   public PasswordAuthentication getPasswordAuthentication() {
       return authentication;
   }
}
</code></pre>
<p>The security configuration is the block below... In upgrading to SpringSecurity 6 I added the requireExplicitSave() method, I have suspicions around this because my trouble is around saving sessions, but the added code is supposed to have spring security using the old functionality.</p>
<pre><code>http
   .securityContext( securityContext -&gt; securityContext.requireExplicitSave(false))
   .authorizeHttpRequests((authz) -&gt; authz
           .requestMatchers(openEndpoints).permitAll()
           .anyRequest().authenticated()
   )
   .httpBasic()
       .and()
   .csrf()
       .disable()
   .exceptionHandling()
       .accessDeniedHandler((req, resp, e) -&gt; e.printStackTrace() )
       .and()
   .logout()
       .invalidateHttpSession(true)
       .clearAuthentication(true);
</code></pre>
<p>I turned on request logging, security logging, and SQL logging. The SQL is all the same, and the basic auth request is always authenticated for all scenarios. The headers are different, but I can't see the headers for the HttpClient preflight call, and of the headers I do see, I don't know why authentication or session creation would work for one set of headers but not the other.</p>
<p>The core of the problem seems to be that the login request from the HttpClient ends with a session being created and the request from curl does not. Note that the big difference in the server logs when using curl is &quot;Failed to create a session, as response has been committed. Unable to store SecurityContext.&quot; However even stepping through the spring security code I can't tell what is causing the difference. </p>
<p>See logs here:</p>
<p>CURL</p>
<pre><code>2022-12-14T16:38:07.594-05:00 DEBUG 92726 --- [nio-9000-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /login
2022-12-14T16:38:07.597-05:00 DEBUG 92726 --- [nio-9000-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2022-12-14T16:38:07.704-05:00 DEBUG 92726 --- [nio-9000-exec-1] org.hibernate.SQL                        : select u1_0.id,u1_0.display_name,u1_0.email,u1_0.enabled,u1_0.password,u1_0.registration_time,r1_0.user_id,r1_0.role_id,u1_0.username from app_user u1_0 join user_role r1_0 on u1_0.id=r1_0.user_id where u1_0.username=?
2022-12-14T16:38:07.797-05:00 DEBUG 92726 --- [nio-9000-exec-1] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2022-12-14T16:38:07.799-05:00 DEBUG 92726 --- [nio-9000-exec-1] o.s.s.w.a.www.BasicAuthenticationFilter  : Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN, ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_ADMIN, ROLE_USER]]
2022-12-14T16:38:07.801-05:00 DEBUG 92726 --- [nio-9000-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /login
2022-12-14T16:38:07.805-05:00 DEBUG 92726 --- [nio-9000-exec-1] o.s.w.f.CommonsRequestLoggingFilter      : Before request [GET /login, headers=[host:&quot;localhost:9000&quot;, authorization:&quot;Basic YWRtaW46YWRtaW4=&quot;, user-agent:&quot;curl/7.84.0&quot;, accept:&quot;*/*&quot;]]
2022-12-14T16:38:07.816-05:00 DEBUG 92726 --- [nio-9000-exec-1] horizationManagerBeforeMethodInterceptor : Authorizing method invocation ReflectiveMethodInvocation: public com.seebie.dto.User com.seebie.server.controller.UserController.login(java.security.Principal); target is of class [com.seebie.server.controller.UserController]
2022-12-14T16:38:07.822-05:00 DEBUG 92726 --- [nio-9000-exec-1] horizationManagerBeforeMethodInterceptor : Authorized method invocation ReflectiveMethodInvocation: public com.seebie.dto.User com.seebie.server.controller.UserController.login(java.security.Principal); target is of class [com.seebie.server.controller.UserController]
2022-12-14T16:38:07.826-05:00 DEBUG 92726 --- [nio-9000-exec-1] org.hibernate.SQL                        : select u1_0.id,u1_0.display_name,u1_0.email,u1_0.enabled,u1_0.password,u1_0.registration_time,u1_0.username from app_user u1_0 where u1_0.username=?
2022-12-14T16:38:07.832-05:00 DEBUG 92726 --- [nio-9000-exec-1] org.hibernate.SQL                        : select r1_0.user_id,r1_0.role_id from user_role r1_0 where r1_0.user_id=?
2022-12-14T16:38:07.836-05:00 DEBUG 92726 --- [nio-9000-exec-1] org.hibernate.SQL                        : select a1_0.user_id,a1_0.id,a1_0.city,a1_0.line1,a1_0.state,a1_0.zip from address a1_0 where a1_0.user_id=?
2022-12-14T16:38:07.840-05:00 DEBUG 92726 --- [nio-9000-exec-1] org.hibernate.SQL                        : select s1_0.principal_name,s1_0.primary_id,s1_0.session_id from spring_session s1_0 where s1_0.principal_name=?
2022-12-14T16:38:07.871-05:00 DEBUG 92726 --- [nio-9000-exec-1] o.s.w.f.CommonsRequestLoggingFilter      : REQUEST DATA : GET /login, headers=[host:&quot;localhost:9000&quot;, authorization:&quot;Basic YWRtaW46YWRtaW4=&quot;, user-agent:&quot;curl/7.84.0&quot;, accept:&quot;*/*&quot;]]
2022-12-14T16:38:07.873-05:00  WARN 92726 --- [nio-9000-exec-1] w.c.HttpSessionSecurityContextRepository : Failed to create a session, as response has been committed. Unable to store SecurityContext.
2022-12-14T16:38:07.873-05:00 DEBUG 92726 --- [nio-9000-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
</code></pre>
<p>HttpClient</p>
<pre><code>2022-12-14T06:31:28.390-05:00 DEBUG 85610 --- [o-auto-1-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /login
2022-12-14T06:31:28.420-05:00 DEBUG 85610 --- [o-auto-1-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Set SecurityContextHolder to empty SecurityContext
2022-12-14T06:31:28.913-05:00 DEBUG 85610 --- [o-auto-1-exec-1] org.hibernate.SQL                        : select u1_0.id,u1_0.display_name,u1_0.email,u1_0.enabled,u1_0.password,u1_0.registration_time,r1_0.user_id,r1_0.role_id,u1_0.username from app_user u1_0 join user_role r1_0 on u1_0.id=r1_0.user_id where u1_0.username=?
2022-12-14T06:31:29.102-05:00 DEBUG 85610 --- [o-auto-1-exec-1] o.s.s.a.dao.DaoAuthenticationProvider    : Authenticated user
2022-12-14T06:31:29.103-05:00 DEBUG 85610 --- [o-auto-1-exec-1] o.s.s.w.a.www.BasicAuthenticationFilter  : Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN, ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=19ab0971-5fb3-47fd-a4f9-cdde1ad24883], Granted Authorities=[ROLE_ADMIN, ROLE_USER]]
2022-12-14T06:31:29.108-05:00 DEBUG 85610 --- [o-auto-1-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /login
2022-12-14T06:31:29.136-05:00 DEBUG 85610 --- [o-auto-1-exec-1] o.s.w.f.CommonsRequestLoggingFilter      : Before request [GET /login, headers=[authorization:&quot;Basic YWRtaW46YWRtaW4=&quot;, content-length:&quot;0&quot;, host:&quot;localhost:64723&quot;, user-agent:&quot;Java-http-client/17.0.2&quot;, cookie:&quot;SESSION=MTlhYjA5NzEtNWZiMy00N2ZkLWE0ZjktY2RkZTFhZDI0ODgz&quot;, Content-Type:&quot;application/json;charset=UTF-8&quot;]]
2022-12-14T06:31:29.274-05:00 DEBUG 85610 --- [o-auto-1-exec-1] horizationManagerBeforeMethodInterceptor : Authorizing method invocation ReflectiveMethodInvocation: public com.seebie.dto.User com.seebie.server.controller.UserController.login(java.security.Principal); target is of class [com.seebie.server.controller.UserController]
2022-12-14T06:31:29.332-05:00 DEBUG 85610 --- [o-auto-1-exec-1] horizationManagerBeforeMethodInterceptor : Authorized method invocation ReflectiveMethodInvocation: public com.seebie.dto.User com.seebie.server.controller.UserController.login(java.security.Principal); target is of class [com.seebie.server.controller.UserController]
2022-12-14T06:31:29.373-05:00 DEBUG 85610 --- [o-auto-1-exec-1] org.hibernate.SQL                        : select u1_0.id,u1_0.display_name,u1_0.email,u1_0.enabled,u1_0.password,u1_0.registration_time,u1_0.username from app_user u1_0 where u1_0.username=?
2022-12-14T06:31:29.392-05:00 DEBUG 85610 --- [o-auto-1-exec-1] org.hibernate.SQL                        : select r1_0.user_id,r1_0.role_id from user_role r1_0 where r1_0.user_id=?
2022-12-14T06:31:29.409-05:00 DEBUG 85610 --- [o-auto-1-exec-1] org.hibernate.SQL                        : select a1_0.user_id,a1_0.id,a1_0.city,a1_0.line1,a1_0.state,a1_0.zip from address a1_0 where a1_0.user_id=?
2022-12-14T06:31:29.413-05:00 DEBUG 85610 --- [o-auto-1-exec-1] org.hibernate.SQL                        : select s1_0.principal_name,s1_0.primary_id,s1_0.session_id from spring_session s1_0 where s1_0.principal_name=?
2022-12-14T06:31:29.678-05:00 DEBUG 85610 --- [o-auto-1-exec-1] o.s.w.f.CommonsRequestLoggingFilter      : REQUEST DATA : GET /login, headers=[authorization:&quot;Basic YWRtaW46YWRtaW4=&quot;, content-length:&quot;0&quot;, host:&quot;localhost:64723&quot;, user-agent:&quot;Java-http-client/17.0.2&quot;, cookie:&quot;SESSION=MTlhYjA5NzEtNWZiMy00N2ZkLWE0ZjktY2RkZTFhZDI0ODgz&quot;, Content-Type:&quot;application/json;charset=UTF-8&quot;]]
2022-12-14T06:31:29.680-05:00 DEBUG 85610 --- [o-auto-1-exec-1] w.c.HttpSessionSecurityContextRepository : Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN, ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=19ab0971-5fb3-47fd-a4f9-cdde1ad24883], Granted Authorities=[ROLE_ADMIN, ROLE_USER]]] to HttpSession [org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper@7ba784f2]
2022-12-14T06:31:29.680-05:00 DEBUG 85610 --- [o-auto-1-exec-1] s.s.w.c.SecurityContextPersistenceFilter : Cleared SecurityContextHolder to complete request
</code></pre>
<p>Note the session in headers for the HttpClient call... I think HttpClient makes a preflight auth call that gets a 401 and then makes the &quot;real&quot; call with the credentials, at least that's how it was in Java 11.</p>
<p>I think if I understood the difference in how these calls are being made/handled that causes one technique to work but not the other, I would be able to solve the problem. So that really is the question: What is the difference in spring security 6 (along with spring session) handling session creation when using Java 17's HttpClient vs curl?</p>
<p>[UPDATE] to anyone who read this far: the behavior is actually expected behavior for Spring Security. A full discussion and explanation are in the spring security issue that I had opened <a href=""https://github.com/spring-projects/spring-security/issues/12431"" rel=""nofollow noreferrer"">here</a></p>
","74838578","<p>Well, if we are not going to investigate why preflight requests make sense (IMO, that seems to be a bug), the explanation of what has been changed in spring 6 is following:</p>
<p>as was mentioned in <a href=""https://docs.spring.io/spring-security/reference/migration/servlet/session-management.html"" rel=""nofollow noreferrer"">Session Management Migrations</a> now Spring does not enable <a href=""https://docs.spring.io/spring-security/reference/servlet/authentication/persistence.html#securitycontextpersistencefilter"" rel=""nofollow noreferrer"">SecurityContextPersistenceFilter</a> by default, however in Spring 5 <a href=""https://docs.spring.io/spring-security/reference/servlet/authentication/persistence.html#securitycontextpersistencefilter"" rel=""nofollow noreferrer"">SecurityContextPersistenceFilter</a> was responsible for saving <code>SecurityContext</code> in <code>http session</code> (and hence creating it) unless that was explicitly disabled. Now in order to return previous behaviour you desire you need to setup <code>SecurityContextRepository</code> via:</p>
<pre class=""lang-java prettyprint-override""><code>http.securityContext(securityContext -&gt; securityContext.
      securityContextRepository(new HttpSessionSecurityContextRepository())
)
</code></pre>
"
"74639116","1","What is the difference between green threads and virtual threads?","<p><em>Green Threads</em> have been implemented with Java 1.1 and dropped in subsequent Java versions, according to <a href=""https://en.wikipedia.org/wiki/Green_thread"" rel=""noreferrer"">https://en.wikipedia.org/wiki/Green_thread</a>.</p>
<p>Java 19 introduced <em>Virtual Threads</em> as a preview feature.
<a href=""https://openjdk.org/jeps/425"" rel=""noreferrer"">https://openjdk.org/jeps/425</a></p>
<p>Both threads seem to work in User Space and not in Kernel Space as Javas Native Threads do.</p>
<p><strong>What's the difference between them, and are the previous limitations of Green Threads omitted with the new Virtual Threads?</strong></p>
","74639215","<h2><strong>Short Answer:</strong></h2>
<p>Green Threads had an N:1 mapping with OS Threads. All the Green Threads ran on a single OS Thread. With Virtual Threads, multiple virtual threads can run on multiple native threads (n:m mapping)</p>
<h2>A bit more details from the <a href=""https://openjdk.org/jeps/425"" rel=""noreferrer"">JEP 425</a></h2>
<ul>
<li><p>Java's green threads all shared one OS thread (M:1 scheduling) and were eventually outperformed by platform threads (Java's Native Threads) implemented as wrappers for OS threads (1:1 scheduling)</p>
</li>
<li><p>Virtual threads employ M:N scheduling, where a large number (M) of virtual threads is scheduled to run on a smaller number (N) of OS threads.</p>
</li>
</ul>
<h2>Just a small overview</h2>
<div class=""s-table-container"">
<table class=""s-table"">
<thead>
<tr>
<th>Thread Type</th>
<th>Description</th>
<th>Java Thread Type (M) : Native Threads(N)</th>
</tr>
</thead>
<tbody>
<tr>
<td>Platform Threads</td>
<td>A wrapper for OS Threads.</td>
<td>1:1</td>
</tr>
<tr>
<td>Green Threads</td>
<td>Runs multiple &quot;Green Threads&quot; on a single OS Thread.</td>
<td>M:1</td>
</tr>
<tr>
<td>Virtual Threads</td>
<td>Runs multiple Virtual Threads on Multiple OS threads</td>
<td>M:N (M &gt; N)</td>
</tr>
</tbody>
</table>
</div><h2><strong>Full Quote from JEP</strong></h2>
<blockquote>
<p>Virtual threads are a lightweight implementation of threads that is
provided by the JDK rather than the OS. They are a form of user-mode
threads, which have been successful in other multithreaded languages
(e.g., goroutines in Go and processes in Erlang). User-mode threads
even featured as so-called &quot;green threads&quot; in early versions of Java,
when OS threads were not yet mature and widespread. However, Java's
green threads all shared one OS thread (M:1 scheduling) and were
eventually outperformed by platform threads, implemented as wrappers
for OS threads (1:1 scheduling). Virtual threads employ M:N
scheduling, where a large number (M) of virtual threads is scheduled
to run on a smaller number (N) of OS threads.</p>
</blockquote>
"
"74695402","1","BUG! exception in phase 'semantic analysis' in source unit '_BuildScript_' Unsupported class file major version 63","<p>Bug when first trying to run a brand new React Native application.</p>
<p>BUG! exception in phase 'semantic analysis' in source unit '<em>BuildScript</em>' Unsupported class file major version 63</p>
<p>I encountered this error when I first installed the latest version of Java</p>
<blockquote>
<p>java 19.0.1</p>
</blockquote>
<p>and creating a React Native application that auto generated with</p>
<blockquote>
<p>react-native dependency v0.70.6</p>
</blockquote>
","74695403","<p>SOLUTION:</p>
<p>This is a dependency issue and we need the latest version of Gradle to support Java 19.</p>
<p>In your React Native application folder, nav to <code>android/gradle/wrapper/gradle-wrapper.properties</code></p>
<p>Find the <code>distributionUrl</code> variable and change the end path to <code>gradle-7.6-all.zip</code></p>
"
"72761919","1","Class SpringHibernateJpaPersistenceProvider does not implement the requested interface PersistenceProvider","<p>I'm stumped - I haven't used Hibernate in several years and then, never with Spring Boot.  Spring Boot but never with Hibernate or JPA.  So i'm trying to figure out how to get this to work for my job - I'm supposed to demo something Monday and if I can get 'this' to work, I'll copy it over to my work laptop and change the details of course.  Btw - here's the message I get - I had to shorten it in the title:</p>
<p>&quot;Class org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider does not implement the requested interface javax.persistence.spi.PersistenceProvider&quot;</p>
<p>I have the &quot;main&quot; class - TestWebApplication:</p>
<pre><code>package net.draconia.testWeb;

import java.util.Properties;

import javax.sql.DataSource;

import org.apache.commons.dbcp2.BasicDataSource;

import org.springframework.boot.SpringApplication;

import org.springframework.boot.autoconfigure.SpringBootApplication;

import org.springframework.context.annotation.Bean;
import org.springframework.orm.hibernate5.HibernateTransactionManager;
import org.springframework.orm.hibernate5.LocalSessionFactoryBean;
import org.springframework.orm.jpa.JpaTransactionManager;
import org.springframework.orm.jpa.JpaVendorAdapter;
import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;
import org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter;
import org.springframework.transaction.PlatformTransactionManager;

@SpringBootApplication(scanBasePackages = {&quot;com.draconia.testWeb.controller&quot;})
public class TestWebApplication
{
    
    @Bean
    public DataSource getDatasource()
    {
        BasicDataSource objDatasource = new BasicDataSource();
        
        objDatasource.setDriverClassName(&quot;com.mysql.jdbc.Driver&quot;);
        objDatasource.setUrl(&quot;jdbc:mysql://localhost:3306/Test&quot;);
        objDatasource.setUsername(&quot;root&quot;);
        objDatasource.setPassword(&quot;R3g1n@ M1lL$ 1$ My Qu3eN!&quot;);
        
        return(objDatasource);
    }
    
    @Bean
    public LocalContainerEntityManagerFactoryBean getEntityManagerFactory()
    {
          LocalContainerEntityManagerFactoryBean objEntityManager = new LocalContainerEntityManagerFactoryBean();
          
          objEntityManager.setDataSource(getDatasource());
          objEntityManager.setPackagesToScan(new String[] { &quot;net.draconia.testWeb.beans&quot; });

          JpaVendorAdapter objVendorAdapter = new HibernateJpaVendorAdapter();
          objEntityManager.setJpaVendorAdapter(objVendorAdapter);
          objEntityManager.setJpaProperties(getHibernateProperties());

          return(objEntityManager);
   }
    
    protected Properties getHibernateProperties()
    {
        Properties objHibernateProperties = new Properties();
        
        objHibernateProperties.setProperty(&quot;hibernate.hbm2ddl.auto&quot;, &quot;create-drop&quot;);
        objHibernateProperties.setProperty(&quot;hibernate.dialect&quot;, &quot;org.hibernate.dialect.MySQLDialect&quot;);
        
        return(objHibernateProperties);
    }
    
    @Bean
    public JpaTransactionManager getHibernateTransactionManager()
    {
        JpaTransactionManager objTransactionManager = new JpaTransactionManager();
        
        objTransactionManager.setEntityManagerFactory(getEntityManagerFactory().getObject());
        
        return(objTransactionManager);
    }
    
    public static void main(String[] args)
    {
        SpringApplication.run(TestWebApplication.class, args);
    }
}
</code></pre>
<p>, the entity bean:</p>
<pre><code>package net.draconia.testWeb.beans;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;

@Entity(name = &quot;Books&quot;)
public class Book
{
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer miId;
    
    @Column(columnDefinition = &quot;varchar(200) not null&quot;, insertable = true, length = 200, name = &quot;BookName&quot;, nullable = false, table = &quot;Books&quot;, unique = false, updatable = true)
    private String msBookName;
    
    @Column(columnDefinition = &quot;varchar(100) not null&quot;, insertable = true, length = 100, name=&quot;Author&quot;, nullable = false, table = &quot;Books&quot;, unique = false, updatable = true)
    private String msAuthor;
    
    public String getAuthor()
    {
        if(msAuthor == null)
            msAuthor = &quot;&quot;;
        
        return(msAuthor);
    }
    
    public String getBookName()
    {
        if(msBookName == null)
            msBookName = &quot;&quot;;
        
        return(msBookName);
    }
    
    public int getId()
    {
        if(miId == null)
            miId = 0;
        
        return(miId);
    }
    
    public void setAuthor(final String sAuthor)
    {
        if(sAuthor == null)
            msAuthor = &quot;&quot;;
        else
            msAuthor = sAuthor;
    }
    
    public void setBookName(final String sBookName)
    {
        if(sBookName == null)
            msBookName = &quot;&quot;;
        else
            msBookName = sBookName;
    }
    
    public void setId(final Integer iId)
    {
        if(iId == null)
            miId = 0;
        else
            miId = iId;
    }
}
</code></pre>
<p>, the DAOConcrete class (the interface is just one method which is logical but if you want I'll post that too):</p>
<pre><code>package net.draconia.testWeb.dao;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;

import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.stereotype.Repository;

import net.draconia.testWeb.beans.Book;

@Repository(&quot;bookDAO&quot;)
public class BookDAOImpl implements BookDAO
{
    @Autowired
    private EntityManagerFactory mObjEntityManagerFactory;
    
    public List&lt;Book&gt; getAllBooks()
    {
        EntityManager objEntityManager = getEntityManagerFactory().createEntityManager();
        List&lt;Book&gt; lstBooks = objEntityManager.createQuery(&quot;from Books&quot;, Book.class).getResultList();
        
        return(lstBooks);
    }
    
    protected EntityManagerFactory getEntityManagerFactory()
    {
        return(mObjEntityManagerFactory);
    }
}
</code></pre>
<p>, and the Controller class for the REST endpoints/MVC Controller:</p>
<pre><code>package net.draconia.testWeb.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;

import net.draconia.testWeb.beans.Book;
import net.draconia.testWeb.dao.BookDAO;

@Controller
public class TestController
{
    @Autowired
    private BookDAO mObjDAO;
    
    @GetMapping(&quot;/Books&quot;)
    public List&lt;Book&gt; getBooks()
    {
        return(getDAO().getAllBooks());
    }
    
    protected BookDAO getDAO()
    {
        return(mObjDAO);
    }
}
</code></pre>
<p>The POM file is here just for completeness but I don't think it's necessarily a problem unless I'm missing a dependency:</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
    &lt;parent&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
        &lt;version&gt;2.7.1&lt;/version&gt;
        &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;
    &lt;/parent&gt;
    
    &lt;groupId&gt;net.draconia&lt;/groupId&gt;
    &lt;artifactId&gt;testWeb&lt;/artifactId&gt;
    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
    &lt;name&gt;testWeb&lt;/name&gt;
    &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;
    
    &lt;properties&gt;
        &lt;hibernate.version&gt;6.1.0.Final&lt;/hibernate.version&gt;
        &lt;java.version&gt;11&lt;/java.version&gt;
        &lt;mysql.version&gt;8.0.29&lt;/mysql.version&gt;
        &lt;spring.version&gt;5.3.2&lt;/spring.version&gt;
    &lt;/properties&gt;
    
    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;
            &lt;artifactId&gt;jackson-core&lt;/artifactId&gt;
            &lt;version&gt;2.13.3&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;jakarta.persistence&lt;/groupId&gt;
            &lt;artifactId&gt;jakarta.persistence-api&lt;/artifactId&gt;
            &lt;version&gt;3.0.0&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;javax.persistence&lt;/groupId&gt;
            &lt;artifactId&gt;javax.persistence-api&lt;/artifactId&gt;
            &lt;version&gt;2.2&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;mysql&lt;/groupId&gt;
            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;
            &lt;version&gt;${mysql.version}&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;
            &lt;artifactId&gt;commons-dbcp2&lt;/artifactId&gt;
            &lt;version&gt;2.9.0&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.hibernate.orm&lt;/groupId&gt;
            &lt;artifactId&gt;hibernate-core&lt;/artifactId&gt;
            &lt;version&gt;${hibernate.version}&lt;/version&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;
            &lt;scope&gt;test&lt;/scope&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.springframework&lt;/groupId&gt;
            &lt;artifactId&gt;spring-orm&lt;/artifactId&gt;
            &lt;version&gt;${spring.version}&lt;/version&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;

    &lt;build&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/build&gt;
&lt;/project&gt;
</code></pre>
<p>If you'll note, i'm including a dependency for the Jackson library because the list of books should return as a JSON object.  I don't think that's a poblem but just saying - and I could probably have remoed that for this but then when it runs, the list of books would be unintelligible to me getting a response when/if it worked.  What am I doing wrong???</p>
","72763415","<p>Change hibernate to version 5.6.9.Final (or any higher 5.6.x):</p>
<pre><code>&lt;hibernate.version&gt;5.6.9.Final&lt;/hibernate.version&gt;
</code></pre>
"
"74701738","1","Spring Boot 3 springdoc-openapi-ui doesn't work","<p>I'm trying to add swagger-ui (OpenAPI 3.0) to a Spring Boot v3 application.</p>
<p>I've added the openapi-ui maven dependency, and it should work as per the documentation.</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;dependency&gt;
    &lt;groupId&gt;org.springdoc&lt;/groupId&gt;
    &lt;artifactId&gt;springdoc-openapi-ui&lt;/artifactId&gt;
    &lt;version&gt;1.6.11&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>
<p>But apparently, it still doesn't work and localhost:8080/swagger-ui.html returns an 404 error.</p>
<p>What am I missing?</p>
<p><a href=""https://i.stack.imgur.com/hAeIX.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/hAeIX.png"" alt=""enter image description here"" /></a></p>
","74701779","<p>According to the documentation:</p>
<blockquote>
<p>For <strong>spring-boot 3</strong> support, make sure you use <strong>springdoc-openapi v2</strong></p>
</blockquote>
<p><a href=""https://springdoc.org/v2/"" rel=""noreferrer"">https://springdoc.org/v2/</a></p>
<blockquote>
<p>For the integration between spring-boot and swagger-ui, add the
library to the list of your project dependencies (No additional
configuration is needed)</p>
</blockquote>
<pre class=""lang-xml prettyprint-override""><code>&lt;dependency&gt;
    &lt;groupId&gt;org.springdoc&lt;/groupId&gt;
    &lt;artifactId&gt;springdoc-openapi-starter-webmvc-ui&lt;/artifactId&gt;
    &lt;version&gt;2.0.0&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>
<blockquote>
<p>This will automatically deploy swagger-ui to a spring-boot
application:</p>
<p>Documentation will be available in HTML format, using the official
swagger-ui jars</p>
<p>The Swagger UI page will then be available at
<code>http://server:port/context-path/swagger-ui.html</code> and the OpenAPI
description will be available at the following url for json format:
<code>http://server:port/context-path/v3/api-docs</code></p>
</blockquote>
<pre><code>server: The server name or IP

port: The server port

context-path: The context path of the application

Documentation can be available in yaml format as well, on the following path : /v3/api-docs.yaml
</code></pre>
<hr />
<p><strong>Please note that modules have been renamed:</strong></p>
<p><a href=""https://springdoc.org/v2/#migrating-from-springdoc-v1"" rel=""noreferrer"">https://springdoc.org/v2/#migrating-from-springdoc-v1</a></p>
<p><a href=""https://i.stack.imgur.com/EevN8.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/EevN8.png"" alt=""enter image description here"" /></a></p>
"
"72738837","1","In Java, what does the / (i.e., forward slash) mean in object references like $Lambda$15/0x00000008000a9440@32e6e9c3)?","<p>In JShell, if I do this:</p>
<pre class=""lang-java prettyprint-override""><code>interface Foo { String foo(); }
(Foo) () -&gt; &quot;hi&quot;
</code></pre>
<p>I get</p>
<pre class=""lang-java prettyprint-override""><code>|  created interface Foo
$2 ==&gt; $Lambda$15/0x00000008000a9440@32e6e9c3
</code></pre>
<p>From the research below, I know the following:</p>
<p>$Lambda = <a href=""https://blogs.oracle.com/javamagazine/post/behind-the-scenes-how-do-lambda-expressions-really-work-in-java"" rel=""noreferrer"">an in-memory reference, as opposed to one persisted to disk by an anonymous inner class (AIC), to the generated bytecode</a></p>
<p>$15 = <a href=""https://stackoverflow.com/questions/11388840/java-compiled-classes-contain-dollar-signs/11388863#11388863"">an object reference to the AIC</a></p>
<p>@32e6e9c3 = <a href=""https://stackoverflow.com/questions/50624284/while-debugging-java-codes-what-does-mean-in-statements-like-instance789-or/50625530#50625530"">the sequential number of the object created--at least, in IntelliJ</a></p>
<p>But what does the <code>/</code> (slash) indicate, as in <code>/0x00000008000a9440</code>?</p>
","72887915","<h1>Summary</h1>
<p><code>$Lambda$15/0x00000008000a9440</code> is the name of the created hidden class.</p>
<p>As it will be shown below, <code>0x00000008000a9440</code> is called a suffix.</p>
<p>The name of the class can be retrieved by calling the <code>java.lang.Class.getName()</code> method.
Therefore:</p>
<ul>
<li>For example, the same class names can be retrieved by a Java program (not through JShell).</li>
<li>The question does not seem to be about JShell, but about the Java language and the Java Virtual Machine.</li>
</ul>
<h2>Example program to show name of hidden class</h2>
<h3><code>Program</code> class</h3>
<pre class=""lang-java prettyprint-override""><code>package info.brunov.stackoverflow.question72804142;

import java.util.function.Supplier;

public final class Program {
    public static void main(final String args[]) {
        printRuntimeInformation();

        final Supplier&lt;String&gt; supplier1 = () -&gt; &quot;&quot;;
        final Supplier&lt;String&gt; supplier2 = () -&gt; &quot;&quot;;
        final Supplier&lt;String&gt; supplier3 = () -&gt; &quot;&quot;;
        System.out.println(
            String.format(&quot;Supplier 1: %s&quot;, supplier1.getClass().getName())
        );
        System.out.println(
            String.format(&quot;Supplier 2: %s&quot;, supplier2.getClass().getName())
        );
        System.out.println(
            String.format(&quot;Supplier 3: %s&quot;, supplier3.getClass().getName())
        );
    }

    private static void printRuntimeInformation() {
        System.out.println(
            String.format(
                &quot;Java Virtual Machine specification name: %s&quot;,
                System.getProperty(&quot;java.vm.specification.name&quot;)
            )
        );
        System.out.println(
            String.format(
                &quot;Java Virtual Machine specification version: %s&quot;,
                System.getProperty(&quot;java.vm.specification.version&quot;)
            )
        );
        System.out.println(
            String.format(
                &quot;Java Virtual Machine specification vendor: %s&quot;,
                System.getProperty(&quot;java.vm.specification.vendor&quot;)
            )
        );
        System.out.println(
            String.format(
                &quot;Java Virtual Machine implementation name: %s&quot;,
                System.getProperty(&quot;java.vm.name&quot;)
            )
        );
        System.out.println(
            String.format(
                &quot;Java Virtual Machine implementation version: %s&quot;,
                System.getProperty(&quot;java.vm.version&quot;)
            )
        );
        System.out.println(
            String.format(
                &quot;Java Virtual Machine implementation vendor: %s&quot;,
                System.getProperty(&quot;java.vm.vendor&quot;)
            )
        );
    }
}
</code></pre>
<h3>Program output</h3>
<pre><code>Java Virtual Machine specification name: Java Virtual Machine Specification
Java Virtual Machine specification version: 18
Java Virtual Machine specification vendor: Oracle Corporation
Java Virtual Machine implementation name: OpenJDK 64-Bit Server VM
Java Virtual Machine implementation version: 18.0.1-ea+10-Debian-1
Java Virtual Machine implementation vendor: Debian
Supplier 1: info.brunov.stackoverflow.question72804142.Program$$Lambda$18/0x0000000800c031f0
Supplier 2: info.brunov.stackoverflow.question72804142.Program$$Lambda$19/0x0000000800c033f8
Supplier 3: info.brunov.stackoverflow.question72804142.Program$$Lambda$20/0x0000000800c03600
</code></pre>
<h1>Documentation references</h1>
<h2>JEP 371: Hidden Classes</h2>
<p>The hidden classes have been introduced since JDK 15.
For additional details, please, refer to the JEP: <a href=""https://openjdk.org/jeps/371"" rel=""noreferrer"">JEP 371: Hidden Classes</a>.</p>
<p>Here is an excerpt from the JEP on the hidden class names:</p>
<blockquote>
<p>The major difference in how a hidden class is created lies in the name it is given. <strong>A hidden class is not anonymous.</strong> It has a name that is available via <code>Class::getName</code> and may be shown in diagnostics (such as the output of <code>java -verbose:class</code>), in JVM TI class loading events, in JFR events, and in stack traces. However, the name has a sufficiently unusual form that it effectively makes the class invisible to all other classes. The name is the concatenation of:</p>
<ol>
<li>The binary name in internal form (JVMS 4.2.1) specified by <code>this_class</code> in the <code>ClassFile</code> structure, say <code>A/B/C</code>;</li>
<li>The <code>'.'</code> character; and</li>
<li>An unqualified name (JVMS 4.2.2) that is chosen by the JVM implementation.</li>
</ol>
<p>For example, if <code>this_class</code> specifies <code>com/example/Foo</code> (the internal form of the binary name <code>com.example.Foo</code>), then a hidden class derived from the <code>ClassFile</code> structure may be named <code>com/example/Foo.1234</code>. This string is neither a binary name nor the internal form of a binary name.</p>
<p>Given a hidden class whose name is <code>A/B/C.x</code>, the result of <code>Class::getName</code> is the concatenation of:</p>
<ol>
<li>The binary name <code>A.B.C</code> (obtained by taking <code>A/B/C</code> and replacing each <code>'/'</code> with <code>'.'</code>);</li>
<li>The '/' character; and</li>
<li>The unqualified name <code>x</code>.</li>
</ol>
<p>For example, if a hidden class is named <code>com/example/Foo.1234</code>, then the result of <code>Class::getName</code> is <code>com.example.Foo/1234</code>. Again, this string is neither a binary name nor the internal form of a binary name.</p>
<p>The namespace of hidden classes is disjoint from the namespace of normal classes. Given a <code>ClassFile</code> structure where <code>this_class</code> specifies <code>com/example/Foo/1234</code>, invoking <code>cl.defineClass(&quot;com.example.Foo.1234&quot;, bytes, ...)</code> merely results in a normal class named <code>com.example.Foo.1234</code>, distinct from the hidden class named <code>com.example.Foo/1234</code>. It is impossible to create a normal class named <code>com.example.Foo/1234</code> because <code>cl.defineClass(&quot;com.example.Foo/1234&quot;, bytes, ...)</code> will reject the string argument as being not a binary name.</p>
</blockquote>
<h2>Javadoc: <code>java.lang.Class#getName()</code> method</h2>
<p>Let's refer to the method documentation: <a href=""https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/Class.html#getName()"" rel=""noreferrer"">Class (Java SE 15 &amp; JDK 15)</a>.</p>
<p>An excerpt from the documentation:</p>
<blockquote>
<p>public <a href=""https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/String.html"" rel=""noreferrer"" title=""class in java.lang"">String</a> getName()</p>
<p>Returns the name of the entity (class, interface, array class, primitive type, or void) represented by this <code>Class</code> object.</p>
<p>If this <code>Class</code> object represents a class or interface, not an array class, then:</p>
<ul>
<li>If the class or interface is not <a href=""https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/Class.html#isHidden()"" rel=""noreferrer"">hidden</a>, then the <a href=""https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/ClassLoader.html#binary-name"" rel=""noreferrer"">binary name</a> of the class or interface is returned.</li>
<li>If the class or interface is hidden, then the result is a string of the form: <code>N + '/' + &lt;suffix&gt;</code> where <code>N</code> is the <a href=""https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/ClassLoader.html#binary-name"" rel=""noreferrer"">binary name</a> indicated by the <code>class</code> file passed to <a href=""https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/invoke/MethodHandles.Lookup.html#defineHiddenClass(byte%5B%5D,boolean,java.lang.invoke.MethodHandles.Lookup.ClassOption...)"" rel=""noreferrer""><code>Lookup::defineHiddenClass</code></a>, and <code>&lt;suffix&gt;</code> is an unqualified name.</li>
</ul>
</blockquote>
<h1>Implementation details: OpenJDK Java Virtual Machine: Hidden class name</h1>
<h2>Introduction</h2>
<p>Let's consider the source code of OpenJDK 18.</p>
<p>Let's refer to the tag: <a href=""https://github.com/openjdk/jdk18/tree/jdk-18%2B37"" rel=""noreferrer"">openjdk/jdk18 at jdk-18+37</a>.</p>
<p>Please, note that:</p>
<ul>
<li>The below execution paths are theoretical: I am using the mentioned source code tag.</li>
<li>The below call stacks are real: I am using OpenJDK <code>18.0.1-ea+10-Debian-1</code>.</li>
</ul>
<h2>Hidden class name mangling</h2>
<p>Hidden class creation (the <code>java.lang.invoke.MethodHandles.Lookup.defineHiddenClass()</code> method) includes the mangling of its name.</p>
<p>Let's consider the following call stack:</p>
<pre><code>&quot;main@1&quot; prio=5 tid=0x1 nid=NA runnable
  java.lang.Thread.State: RUNNABLE
      at java.lang.System$2.defineClass(System.java:2346)
      at java.lang.invoke.MethodHandles$Lookup$ClassDefiner.defineClass(MethodHandles.java:2432)
      at java.lang.invoke.MethodHandles$Lookup$ClassDefiner.defineClassAsLookup(MethodHandles.java:2413)
      at java.lang.invoke.MethodHandles$Lookup.defineHiddenClass(MethodHandles.java:2119)
      at java.lang.invoke.InnerClassLambdaMetafactory.generateInnerClass(InnerClassLambdaMetafactory.java:385)
      at java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass(InnerClassLambdaMetafactory.java:293)
      at java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite(InnerClassLambdaMetafactory.java:228)
      at java.lang.invoke.LambdaMetafactory.metafactory(LambdaMetafactory.java:341)
      at java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(DirectMethodHandle$Holder:-1)
      at java.lang.invoke.Invokers$Holder.invokeExact_MT(Invokers$Holder:-1)
      at java.lang.invoke.BootstrapMethodInvoker.invoke(BootstrapMethodInvoker.java:134)
      at java.lang.invoke.CallSite.makeSite(CallSite.java:315)
      at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:279)
      at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:269)
      at info.brunov.stackoverflow.question72804142.Program.main(Program.java:9)
</code></pre>
<p>Then let's consider the following execution path as <strong>the continuation of the call stack</strong>:</p>
<pre><code>Class&lt;?&gt; java.lang.ClassLoader#defineClass0(ClassLoader loader, Class&lt;?&gt; lookup, String name, byte[] b, int off, int len, ProtectionDomain pd, boolean initialize, int flags, Object classData)

// Native calls below.
jclass Unsafe_DefineClass0(JNIEnv *env, jobject unsafe, jstring name, jbyteArray data, int offset, int length, jobject loader, jobject pd)
jclass Unsafe_DefineClass_impl(JNIEnv *env, jstring name, jbyteArray data, int offset, int length, jobject loader, jobject pd)
JNIEXPORT jclass JNICALL
jclass JVM_DefineClass(JNIEnv *env, const char *name, jobject loader, const jbyte *buf, jsize len, jobject pd)
jclass jvm_define_class_common(const char *name, jobject loader, const jbyte *buf, jsize len, jobject pd, const char *source, TRAPS)
InstanceKlass* SystemDictionary::resolve_from_stream(ClassFileStream* st, Symbol* class_name, Handle class_loader, const ClassLoadInfo&amp; cl_info, TRAPS)
InstanceKlass* SystemDictionary::resolve_hidden_class_from_stream(ClassFileStream* st, Symbol* class_name, Handle class_loader, const ClassLoadInfo&amp; cl_info, TRAPS)
InstanceKlass* KlassFactory::create_from_stream(ClassFileStream* stream, Symbol* name, ClassLoaderData* loader_data, const ClassLoadInfo&amp; cl_info, TRAPS)
InstanceKlass* ClassFileParser::create_instance_klass(bool changed_by_loadhook, const ClassInstanceInfo&amp; cl_inst_info, TRAPS)
void ClassFileParser::mangle_hidden_class_name(InstanceKlass* const ik)
</code></pre>
<p>Let's refer to the piece of source code: <a href=""https://github.com/openjdk/jdk18/blob/jdk-18+37/src/hotspot/share/classfile/classFileParser.cpp#L5920-L5938"" rel=""noreferrer"">jdk18/classFileParser.cpp at jdk-18+37 · openjdk/jdk18</a>:</p>
<pre><code>void ClassFileParser::mangle_hidden_class_name(InstanceKlass* const ik) {
  ResourceMark rm;
  // Construct hidden name from _class_name, &quot;+&quot;, and &amp;ik. Note that we can't
  // use a '/' because that confuses finding the class's package.  Also, can't
  // use an illegal char such as ';' because that causes serialization issues
  // and issues with hidden classes that create their own hidden classes.
  char addr_buf[20];
  if (DumpSharedSpaces) {
    // We want stable names for the archived hidden classes (only for static
    // archive for now). Spaces under default_SharedBaseAddress() will be
    // occupied by the archive at run time, so we know that no dynamically
    // loaded InstanceKlass will be placed under there.
    static volatile size_t counter = 0;
    Atomic::cmpxchg(&amp;counter, (size_t)0, Arguments::default_SharedBaseAddress()); // initialize it
    size_t new_id = Atomic::add(&amp;counter, (size_t)1);
    jio_snprintf(addr_buf, 20, SIZE_FORMAT_HEX, new_id);
  } else {
    jio_snprintf(addr_buf, 20, INTPTR_FORMAT, p2i(ik));
  }
</code></pre>
<p>Please, note that the <code>+</code> character is used as the separator.</p>
<h2>Get hidden class name</h2>
<p>The <code>java.lang.Class#getName()</code> method includes the character replacement: <code>+</code> is replaced with <code>/</code>.</p>
<p>Let's consider the following execution path:</p>
<pre><code>String java.lang.Class.getName()
String java.lang.Class.initClassName()

// Native calls below.
JNIEXPORT jstring JNICALL JVM_InitClassName(JNIEnv *env, jclass cls)
oop java_lang_Class::name(Handle java_class, TRAPS)
const char* java_lang_Class::as_external_name(oop java_class)
const char* Klass::external_name() const
static char* convert_hidden_name_to_java(Symbol* name)
</code></pre>
<p>Let's refer to the piece of source code: <a href=""https://github.com/openjdk/jdk18/blob/jdk-18%2B37/src/hotspot/share/oops/klass.cpp#L665-L666"" rel=""noreferrer"">jdk18/klass.cpp at jdk-18+37 · openjdk/jdk18</a>:</p>
<pre><code>// Replace the last '+' char with '/'.
static char* convert_hidden_name_to_java(Symbol* name) {
</code></pre>
"
"72897155","1","Alternate for EC2MetadataUtils","<p>In our code, to get the ec2 instance's region we are using <code>EC2MetadataUtils.getEC2InstanceRegion()</code>, and we just realized we must not use <a href=""https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/regions/internal/util/EC2MetadataUtils.html"" rel=""nofollow noreferrer""><code>EC2MetadataUtils</code></a> because it is an internal API that is subject to change.</p>
<blockquote>
<p>Note: this is an internal API subject to change. Users of the SDK should not depend on this.</p>
</blockquote>
<p>Did some google searches but was unable to find an alternate solution, Is there any alternative solution available to get the ec2 instance's region?</p>
<p>Thanks for any help!</p>
","72928313","<p>This is the implementation of the <code>class</code>: <a href=""https://github.com/aws/aws-sdk-java/blob/master/aws-java-sdk-core/src/main/java/com/amazonaws/util/EC2MetadataUtils.java"" rel=""noreferrer"">https://github.com/aws/aws-sdk-java/blob/master/aws-java-sdk-core/src/main/java/com/amazonaws/util/EC2MetadataUtils.java</a></p>
<p>I have found no Java alternative for this, despite searching on google, so, I have realized that a deeper research is needed. I describe the possibilities that you have as follows:</p>
<h1>1. You can leave this as it is</h1>
<p>The warning clearly suggests that it's a good idea to use an alternative, but the nonexistence of a ready-made alternative and possible goodies of future versions of the <code>class</code> are good counter-arguments, so you can ignore this note for now.</p>
<h1>2. You can download the open-source library and search for calls of this method</h1>
<p>If you find the calls for this method somewhere else in the library and you are able to somehow use it instead, then that may be an alternative. For instance, after cloning with</p>
<pre><code>git clone git@github.com:aws/aws-sdk-java.git
</code></pre>
<p>and searching for occurrences of this method with:</p>
<pre><code>grep -rn 'yourpath' -e &quot;getEC2InstanceRegion&quot;
</code></pre>
<p>I have got these results:</p>
<pre><code>&lt;path&gt;/aws-sdk-java/aws-java-sdk-core/src/main/java/com/amazonaws/util/EC2MetadataUtils.java:286:    public static String getEC2InstanceRegion() {
&lt;path&gt;/aws-sdk-java/aws-java-sdk-core/src/main/java/com/amazonaws/regions/InstanceMetadataRegionProvider.java:59:            return EC2MetadataUtils.getEC2InstanceRegion();
&lt;path&gt;/aws-sdk-java/aws-java-sdk-core/src/main/java/com/amazonaws/regions/Regions.java:110:            final String region = EC2MetadataUtils.getEC2InstanceRegion();
</code></pre>
<p>The first match is the definition of the method.</p>
<p>The second match looks like this:</p>
<pre><code>/*
 * Copyright 2011-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;).
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *  http://aws.amazon.com/apache2.0
 *
 * or in the &quot;license&quot; file accompanying this file. This file is distributed
 * on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
package com.amazonaws.regions;

import com.amazonaws.AmazonClientException;
import com.amazonaws.SDKGlobalConfiguration;
import com.amazonaws.util.EC2MetadataUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/**
 * Attempts to load region information from the EC2 Metadata service. If the application is not
 * running on EC2 or {@link SDKGlobalConfiguration#isEc2MetadataDisabled()} returns true,
 * this provider will return null.
 */
public class InstanceMetadataRegionProvider extends AwsRegionProvider {

    private static final Log LOG = LogFactory.getLog(InstanceMetadataRegionProvider.class);

    /**
     * Cache region as it will not change during the lifetime of the JVM.
     */
    private volatile String region;

    /**
     * @throws AmazonClientException if {@link SDKGlobalConfiguration#isEc2MetadataDisabled()} is true
     */
    @Override
    public String getRegion() {
        if (SDKGlobalConfiguration.isEc2MetadataDisabled()) {
            throw new AmazonClientException(&quot;AWS_EC2_METADATA_DISABLED is set to true, not loading region from EC2 Instance &quot;
                                         + &quot;Metadata service&quot;);
        }

        if (region == null) {
            synchronized (this) {
                if (region == null) {
                    this.region = tryDetectRegion();
                }
            }
        }
        return region;
    }

    private String tryDetectRegion() {
        try {
            return EC2MetadataUtils.getEC2InstanceRegion();
        } catch (AmazonClientException sce) {
            LOG.debug(&quot;Ignoring failure to retrieve the region: &quot; + sce.getMessage());
            return null;
        }
    }
}
</code></pre>
<p>So, it seems that the <code>getRegion</code> method of <code>InstanceMetadataRegionProvider</code> looks like the alternative that you were looking for.</p>
<p>The third match looks like this:</p>
<pre><code>/*
 * Copyright 2013-2022 Amazon Technologies, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 *
 *    http://aws.amazon.com/apache2.0
 *
 * This file is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES
 * OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and
 * limitations under the License.
 */
package com.amazonaws.regions;

import com.amazonaws.AmazonClientException;
import org.apache.commons.logging.LogFactory;

import com.amazonaws.util.EC2MetadataUtils;

/**
 * Enumeration of region names
 */
public enum Regions {

    GovCloud(&quot;us-gov-west-1&quot;, &quot;AWS GovCloud (US)&quot;),
    US_GOV_EAST_1(&quot;us-gov-east-1&quot;, &quot;AWS GovCloud (US-East)&quot;),
    US_EAST_1(&quot;us-east-1&quot;, &quot;US East (N. Virginia)&quot;),
    US_EAST_2(&quot;us-east-2&quot;, &quot;US East (Ohio)&quot;),
    US_WEST_1(&quot;us-west-1&quot;, &quot;US West (N. California)&quot;),
    US_WEST_2(&quot;us-west-2&quot;, &quot;US West (Oregon)&quot;),
    EU_WEST_1(&quot;eu-west-1&quot;, &quot;EU (Ireland)&quot;),
    EU_WEST_2(&quot;eu-west-2&quot;, &quot;EU (London)&quot;),
    EU_WEST_3(&quot;eu-west-3&quot;, &quot;EU (Paris)&quot;),
    EU_CENTRAL_1(&quot;eu-central-1&quot;, &quot;EU (Frankfurt)&quot;),
    EU_NORTH_1(&quot;eu-north-1&quot;, &quot;EU (Stockholm)&quot;),
    EU_SOUTH_1(&quot;eu-south-1&quot;, &quot;EU (Milan)&quot;),
    AP_EAST_1(&quot;ap-east-1&quot;, &quot;Asia Pacific (Hong Kong)&quot;),
    AP_SOUTH_1(&quot;ap-south-1&quot;, &quot;Asia Pacific (Mumbai)&quot;),
    AP_SOUTHEAST_1(&quot;ap-southeast-1&quot;, &quot;Asia Pacific (Singapore)&quot;),
    AP_SOUTHEAST_2(&quot;ap-southeast-2&quot;, &quot;Asia Pacific (Sydney)&quot;),
    AP_SOUTHEAST_3(&quot;ap-southeast-3&quot;, &quot;Asia Pacific (Jakarta)&quot;),
    AP_NORTHEAST_1(&quot;ap-northeast-1&quot;, &quot;Asia Pacific (Tokyo)&quot;),
    AP_NORTHEAST_2(&quot;ap-northeast-2&quot;, &quot;Asia Pacific (Seoul)&quot;),
    AP_NORTHEAST_3(&quot;ap-northeast-3&quot;, &quot;Asia Pacific (Osaka)&quot;),

    SA_EAST_1(&quot;sa-east-1&quot;, &quot;South America (Sao Paulo)&quot;),
    CN_NORTH_1(&quot;cn-north-1&quot;, &quot;China (Beijing)&quot;),
    CN_NORTHWEST_1(&quot;cn-northwest-1&quot;, &quot;China (Ningxia)&quot;),
    CA_CENTRAL_1(&quot;ca-central-1&quot;, &quot;Canada (Central)&quot;),
    ME_SOUTH_1(&quot;me-south-1&quot;, &quot;Middle East (Bahrain)&quot;),
    AF_SOUTH_1(&quot;af-south-1&quot;, &quot;Africa (Cape Town)&quot;),
    US_ISO_EAST_1(&quot;us-iso-east-1&quot;, &quot;US ISO East&quot;),
    US_ISOB_EAST_1(&quot;us-isob-east-1&quot;, &quot;US ISOB East (Ohio)&quot;),
    US_ISO_WEST_1(&quot;us-iso-west-1&quot;, &quot;US ISO West&quot;)
    ;

    /**
     * The default region that new customers in the US are encouraged to use
     * when using AWS services for the first time.
     */
    public static final Regions DEFAULT_REGION = US_WEST_2;

    private final String name;
    private final String description;

    private Regions(String name, String description) {
        this.name = name;
        this.description = description;
    }

    /**
     * The name of this region, used in the regions.xml file to identify it.
     */
    public String getName() {
        return name;
    }

    /**
     * Descriptive readable name for this region.
     */
    public String getDescription() {
        return description;
    }

    /**
     * Returns a region enum corresponding to the given region name.
     *
     * @param regionName
     *            The name of the region. Ex.: eu-west-1
     * @return Region enum representing the given region name.
     */
    public static Regions fromName(String regionName) {
        for (Regions region : Regions.values()) {
            if (region.getName().equals(regionName)) {
                return region;
            }
        }
        throw new IllegalArgumentException(&quot;Cannot create enum from &quot; + regionName + &quot; value!&quot;);
    }

    /**
     * Returns a Region object representing the region the application is
     * running in, when running in EC2. If this method is called from a non-EC2
     * environment, it will return null.
     */
    public static Region getCurrentRegion() {
        try {
            final String region = EC2MetadataUtils.getEC2InstanceRegion();
            if (region != null)
                return RegionUtils.getRegion(region);
        } catch (AmazonClientException e) {
            LogFactory.getLog(Regions.class).debug(
                &quot;Ignoring failure to retrieve the region: &quot; + e.getMessage());
        }
        return null;
    }
}
</code></pre>
<p>So, <code>getCurrentRegion</code> at <code>Regions</code> looks like another alternative. If you manage to use one of these for your purpose successfully, then it will be easy to refactor and it also makes sense to refactor accordingly.</p>
<h1>3. Copy and rename the class</h1>
<p>If the first two options are unfeasible for you, then you can copy and rename the <code>class</code>, so you will be able to make sure that this method will remain unchanged even if the internal API is changed. This is not a very elegant approach and it is not easy to implement either, as the <code>class</code> has dependencies, so, as a result, you will have some difficulties to resolve, but we know in advance that this is a possible solution.</p>
<h1>4. Finally the do-it-yourself approach</h1>
<p>This is an article about retrieving instance metadata: <a href=""https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html"" rel=""noreferrer"">https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html</a></p>
<p>As we can see, among the metadata information of the instance, you can find the region: <a href=""https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-categories.html"" rel=""noreferrer"">https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-categories.html</a></p>
<p><a href=""https://i.stack.imgur.com/jW60b.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/jW60b.png"" alt=""enter image description here"" /></a></p>
<p>A command example that uses <strong>curl</strong> and <strong>jq</strong> that looks like</p>
<pre><code>curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r .region
</code></pre>
<p>can be found here: <a href=""https://www.howtouselinux.com/post/find-ec2-instance-region-info-in-aws"" rel=""noreferrer"">https://www.howtouselinux.com/post/find-ec2-instance-region-info-in-aws</a></p>
"
"74781733","1","vulnerable dependency maven:org.yaml:snakeyaml","<p>I am periodically checking vulnerabilities on my <code>pom.xml</code> and generally fix these problems by updating the dependency versions. However, I get the following error:</p>
<blockquote>
<p>Provides transitive vulnerable dependency maven:org.yaml:snakeyaml:1.30 CVE-2022-25857 7.5 Uncontrolled Resource Consumption vulnerability pending CVSS allocation CVE-2022-38752 6.5
Out-of-bounds Write vulnerability with medium severity found CVE-2022-38749 6.5 Out-of-bounds Write vulnerability pending CVSS allocation CVE-2022-38750 5.5
Out-of-bounds Write vulnerability pending CVSS allocation CVE-2022-38751 6.5 Out-of-bounds Write vulnerability pending CVSS allocation CVE-2022-41854 6.5
Stack-based Buffer Overflow vulnerability with medium severity found CVE-2022-1471 9.8
Deserialization of Untrusted Data vulnerability with high severity found<br />
Results powered by Checkmarx(c)</p>
</blockquote>
<p>I I try to add <code>&lt;version&gt;</code> to the <code>&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</code> in my <code>pom.xml</code>, but it does not make any sense.</p>
<p>So, how can I fix this problem properly? I use IntelliJ default features to fix this kind of problems, but should I do any an extra useful plugins etc.?</p>
","74781869","<p>Unfortunately, Spring Boot 2.7.x still uses an older, vulnerable version of SnakeYAML (1.30). They still have not upgraded it to the last version (1.33). Spring Boot 3.0.0 does depend on version 1.33.</p>
<p>Assuming you cannot upgrade to Spring Boot 3.0.0 yet, the only thing that should work is to add a dependency to <a href=""https://mvnrepository.com/artifact/org.yaml/snakeyaml/1.33"" rel=""nofollow noreferrer"">SnakeYAML 1.33</a> in your project. That version should then take precedence over Spring Boot's transitive dependency.</p>
<p>However, SnakeYAML 1.33 still has a vulnerability. Since that is the last version (SnakeYAML 2.x is not compatible with 1.x), that's something you can't get rid off until the SnakeYAML team fixes that.</p>
<p>Edit: with SnakeYAML 2.x, I meant <a href=""https://mvnrepository.com/artifact/org.snakeyaml/snakeyaml-engine"" rel=""nofollow noreferrer"">this one</a>. SnakeYAML 1.33 recently had a follow-up 2.0 version which is a different one. Compatibility between 1.33 and 2.0 is still not 100%, but Spring Boot 2.7.10+ and Spring Boot 3.x should support both.</p>
"
"72692978","1","Eclipse: Project 'PROJECT_NAME' has no explicit encoding set","<p>I downgraded from Windows 11 to Windows 10 today and had to reinstall the Eclipse-IDE.<br/>
After successfully importing my workspaces and fixing the projects, a warning appeared for every project saying &quot;Project XXX has no explicit encoding set&quot;. I've already searched for a solution and only got some fixes for VSCode.</p>
<p>I had <strong>Eclipse 2021-6</strong> and installed <strong>Eclipse 2022-6</strong></p>
","72947638","<p>Yes, the <a href=""https://www.eclipse.org/eclipse/news/4.24/platform.php#no-explicit-encoding-project-warning"" rel=""noreferrer""><strong>warning for projects with no explicit default encoding</strong> is a <strong>new</strong> thing in <strong>Eclipse 2022-06</strong> (4.24)</a>.</p>
<p>To set an explicit default encoding do one of the following:</p>
<ul>
<li>In the <strong><em>Problems</em> view, select the warning</strong>, hit <strong><kbd>Ctrl</kbd>+<kbd>1</kbd></strong> and apply the provided Quick Fix (sets the project encoding explicitly to the workspace encoding)</li>
<li>Change the project manually in <em><strong>Project &gt; Properties: Resource</strong></em></li>
</ul>
<p>See also <a href=""https://youtu.be/zDJtVYAJwyY?t=663"" rel=""noreferrer"">my video showing and explaining this</a>.</p>
"
"73077902","1","Accessing protected method of anonymous object vs by a named reference","<p>Say I have this <strong>abstract</strong> class:</p>
<pre class=""lang-java prettyprint-override""><code>package test.one;

public abstract class One {
  
  protected abstract void whatever();

  public void run() {
    whatever();
  }
  
}
</code></pre>
<p>And use it like this:</p>
<pre class=""lang-java prettyprint-override""><code>package test.two;

import test.one.One;

public class Three {

  public static void main(String[] args) {
    One one = new One() {
      @Override
      protected void whatever() {
        System.out.println(&quot;Do whatever..&quot;);
      }
    };
    one.whatever();
  }
}
</code></pre>
<p>This code <strong>fails on compilation</strong> which is pretty much expected.</p>
<pre><code>test/two/Three.java:14: error: whatever() has protected access in One
    one.whatever();
       ^
1 error
</code></pre>
<p>But <strong>the below code compiles successfully</strong> which seems surprisingly:</p>
<pre class=""lang-java prettyprint-override""><code>package test.two;

import test.one.One;

public class Two {

  public static void main(String[] args) {
    new One() {
      @Override
      protected void whatever() {
        System.out.println(&quot;Do whatever..&quot;);
      }
    }.whatever();
  }
}
</code></pre>
<p>The difference is that in the latter case I'm accessing the method without a named reference. Why does the compiler allow such access?</p>
","73078028","<blockquote>
<p>The difference is that in the latter case I'm accessing the method without a named reference. Why does the compiler allow such access?</p>
</blockquote>
<p>No, the difference is that in the latter case you're accessing the method <em>on the anonymous class</em> rather than on a reference of type <code>One</code>.</p>
<p>Leaving aside the oddities around protected access, you can see the difference very easily by just creating an anonymous class with a public method:</p>
<pre class=""lang-java prettyprint-override""><code>class Test {
    public static void main(String[] args) {
        // This is fine...
        new Object() {
            public void method() {
                System.out.println(&quot;Called&quot;);
            }
        }.method();
        
        // This is not, because Object doesn't contain a method called &quot;method&quot;.
        Object o = new Object() {
            public void method() {
                System.out.println(&quot;Called&quot;);
            }
        };
        o.method();        
    }
}
</code></pre>
<p>As noted in comments, another way to see the same effect is to use <code>var</code>, so that the compile-time type of the variable is the anonymous class.</p>
<p>Even private members within anonymous classes can be accessed within the containing scope, just as if they were normal nested classes.</p>
"
"72635074","1","Java Record with @Builder.Default","<p>I'm wondering is there any way to combine java record with lombok's <code>@Builder.Default</code>?
Let's consider an example with properties object for new file creation.</p>
<p>Before java 14</p>
<pre><code>@Value
@Builder
public class FileProperties {
    @Builder.Default
    String directory = System.getProperty(&quot;user.home&quot;);
    @Builder.Default
    String name = &quot;New file&quot;;
    @Builder.Default
    String extension = &quot;.txt&quot;;
}
</code></pre>
<p>Java 14</p>
<pre><code>@Builder
public record FileProperties (
        String directory,
        String name,
        String extension
) {}
</code></pre>
<p>But in case if I try to use something like</p>
<pre><code>@Builder
public record FileProperties (
        @Builder.Default
        String directory = System.getProperty(&quot;user.home&quot;)
) {}
</code></pre>
<p>Compiler will fail with an error, revealing that such syntax is not allowed. Do we have any solution to this problem?</p>
","75812314","<p>This functionality is not available at the moment. Please check the first comment under the question</p>
<blockquote>
<p>Not right now, I hadn't considered that when extending support of @Builder to records.</p>
</blockquote>
"
"73162834","1","Why writing map entries to a HashSet is slower than to a CopyOnWriteArraySet in Java","<p>I think writing to a <code>HashSet</code> will be faster than to a <code>CopyOnWriteArraySet</code>; I'm not doing multi threading here. However I surpisingly got benchmark results indicate writing map entries to a CopyOnWriteArraySet is faster.</p>
<p>I did benchmarking on writing 1000 of Map.Entry&lt;Integer, Integer&gt; into a HashSet vs CopyOnWriteArraySet.</p>
<pre><code>Benchmark          (n)   Mode  Cnt     Score    Error  Units
A.writeToCOWAS    1000  thrpt    4  1269.214 ± 40.635  ops/s
A.writeToHashSet  1000  thrpt    4   223.118 ± 34.955  ops/s
</code></pre>
<p>In addition to that, I got benchmark results of equals() and hashCode() of <code>Map.Entry</code> reveal that the former is more expensive.</p>
<pre><code>Benchmark           Mode  Cnt          Score          Error  Units
MapEntry.equals    thrpt    4  177773394.054 ± 75436098.388  ops/s
MapEntry.hashCode  thrpt    4  272240403.923 ± 38794396.671  ops/s
</code></pre>
<p>I believe writing to a HashSet calls to hashCode() while CopyOnWriteArraySet calls to equals().</p>
<p>In the case of writing Integer or String,HashSet is way faster. Then I'm wondering what happens with <code>Map.Entry</code> type and why CopyOnWriteArraySet is faster according to my analysis?</p>
<p>My perf test:</p>
<pre class=""lang-java prettyprint-override""><code>@State(Scope.Benchmark)
@Fork(value = 2)
@Warmup(iterations = 2, time = 3)
@Measurement(iterations = 2, time = 3)
public class A {
    public Set&lt;Map.Entry&lt;Integer,Integer&gt;&gt; set;

    @Param({&quot;1000&quot;})
    public int n;

    @Setup
    public void setup() {
        set = new HashSet&lt;&gt;((int) (n / 0.75f + 1f), 0.75f);
        for (int i = 0; i &lt; n; i++)
            set.add(Map.entry(i, i));
    }

    private void eliminateDeadCode(Set&lt;Map.Entry&lt;Integer,Integer&gt;&gt; out, Blackhole hole) {
        int hash = 0;
        for (Map.Entry&lt;Integer,Integer&gt; o : out)
            hash += o.hashCode();
        hole.consume(hash);
        if (out.size() != set.size())
            throw new RuntimeException(out.size() + &quot; != &quot; + set.size());
    }

    @Benchmark
    public void writeToCOWAS(Blackhole hole) {
        Set&lt;Map.Entry&lt;Integer,Integer&gt;&gt; out = new CopyOnWriteArraySet&lt;&gt;(set);
        eliminateDeadCode(out, hole);
    }

    @Benchmark
    public void writeToHashSet(Blackhole hole) {
        Set&lt;Map.Entry&lt;Integer,Integer&gt;&gt; out = new HashSet&lt;&gt;(set);
        eliminateDeadCode(out, hole);
    }

    public static void main(String[] args) throws RunnerException {
        Options opt = new OptionsBuilder()
                .include(A.class.getSimpleName())
                .build();
        new Runner(opt).run();
    }
}
</code></pre>
","73188382","<p>Hulk's answer is very instructive. However the problem is not necessarily the <code>Map.entry()</code> hashCode implementation, which is this, at least in Java 11:</p>
<pre class=""lang-java prettyprint-override""><code>public int hashCode() {
    return key.hashCode() ^ value.hashCode();
}
</code></pre>
<p>The problem is that the hash codes of key and value are always the same, both in the OP's test, and in Hulk's test, hence the hash codes combined via XOR will always end up as 0. Change it so that key and value are different, and performance will change.</p>
"
"73226675","1","Why does this test take longer without garbage collection overhead?","<p>I ran into this scenario in the process of developing a lightweight library for asynchronous messaging. Trying to get an idea of the cost of creating lots of medium sized objects with short lifetimes, I wrote the following test:</p>
<pre class=""lang-java prettyprint-override""><code>import java.nio.ByteBuffer;
import java.util.Random;


public class MemPressureTest {
    static final int SIZE = 4096;
    static final class Bigish {
        final ByteBuffer b;


        public Bigish() {
            this(ByteBuffer.allocate(SIZE));
        }

        public Bigish(ByteBuffer b) {
            this.b = b;
        }

        public void fill(byte bt) {
            b.clear();
            for (int i = 0; i &lt; SIZE; ++i) {
                b.put(bt);
            }
        }
    }


    public static void main(String[] args) {
        Random random = new Random(1);
        Bigish tmp = new Bigish();
        for (int i = 0; i &lt; 3e7; ++i) {
            tmp.fill((byte)random.nextInt(255));
        }
    }
}
</code></pre>
<p>On my laptop, with default GC settings, it runs in about 95 seconds:</p>
<pre><code>/tmp$ time java -Xlog:gc MemPressureTest
[0.006s][info][gc] Using G1

real    1m35.552s
user    1m33.658s
sys 0m0.428s
</code></pre>
<p>This is where things get strange. I tweaked the program to allocate a new object for each iteration:</p>
<pre class=""lang-java prettyprint-override""><code>...
        Random random = new Random(1);
        for (int i = 0; i &lt; 3e7; ++i) {
            Bigish tmp = new Bigish();
            tmp.fill((byte)random.nextInt(255));
        }
...
</code></pre>
<p>In theory, this should add some small overhead, but none of the objects should ever be promoted out of Eden. At best, I'd expect the runtimes to be close to identical. However, this test completes in ~17 seconds:</p>
<pre><code>/tmp$ time java -Xlog:gc MemPressureTest
[0.007s][info][gc] Using G1
[0.090s][info][gc] GC(0) Pause Young (Normal) (G1 Evacuation Pause) 23M-&gt;1M(130M) 1.304ms
[0.181s][info][gc] GC(1) Pause Young (Normal) (G1 Evacuation Pause) 76M-&gt;1M(130M) 0.870ms
[0.247s][info][gc] GC(2) Pause Young (Normal) (G1 Evacuation Pause) 76M-&gt;0M(130M) 0.844ms
[0.317s][info][gc] GC(3) Pause Young (Normal) (G1 Evacuation Pause) 75M-&gt;0M(130M) 0.793ms
[0.381s][info][gc] GC(4) Pause Young (Normal) (G1 Evacuation Pause) 75M-&gt;0M(130M) 0.859ms
[lots of similar GC pauses, snipped for brevity]
[16.608s][info][gc] GC(482) Pause Young (Normal) (G1 Evacuation Pause) 254M-&gt;0M(425M) 0.765ms
[16.643s][info][gc] GC(483) Pause Young (Normal) (G1 Evacuation Pause) 254M-&gt;0M(425M) 0.580ms
[16.676s][info][gc] GC(484) Pause Young (Normal) (G1 Evacuation Pause) 254M-&gt;0M(425M) 0.841ms

real    0m16.766s
user    0m16.578s
sys 0m0.576s
</code></pre>
<p>I ran both versions several times, with near identical results to the above. I feel like I must be missing something very obvious. Am I going insane? What could explain this difference in performance?</p>
<p>=== EDIT ===</p>
<p>I rewrote the test using JMH as per apangin and dan1st's suggestions:</p>
<pre class=""lang-java prettyprint-override""><code>import org.openjdk.jmh.annotations.*;
import org.openjdk.jmh.infra.Blackhole;

import java.nio.ByteBuffer;
import java.util.Random;


public class MemPressureTest {
    static final int SIZE = 4096;

    @State(Scope.Benchmark)
    public static class Bigish {
        final ByteBuffer b;
        private Blackhole blackhole;


        @Setup(Level.Trial)
        public void setup(Blackhole blackhole) {
            this.blackhole = blackhole;
        }

        public Bigish() {
            this.b = ByteBuffer.allocate(SIZE);
        }

        public void fill(byte bt) {
            b.clear();
            for (int i = 0; i &lt; SIZE; ++i) {
                b.put(bt);
            }
            blackhole.consume(b);
        }
    }

    static Random random = new Random(1);


    @Benchmark
    public static void test1(Blackhole blackhole) {
        Bigish tmp = new Bigish();
        tmp.setup(blackhole);
        tmp.fill((byte)random.nextInt(255));
        blackhole.consume(tmp);
    }

    @Benchmark
    public static void test2(Bigish perm) {
        perm.fill((byte) random.nextInt(255));
    }
}
</code></pre>
<p>Still, the second test much slower:</p>
<pre><code>&gt; Task :jmh
# JMH version: 1.35
# VM version: JDK 18.0.1.1, OpenJDK 64-Bit Server VM, 18.0.1.1+2-6
# VM invoker: /Users/xxx/Library/Java/JavaVirtualMachines/openjdk-18.0.1.1/Contents/Home/bin/java
# VM options: -Dfile.encoding=UTF-8 -Djava.io.tmpdir=/Users/xxx/Dev/MemTests/build/tmp/jmh -Duser.country=US -Duser.language=en -Duser.variant
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.xxx.MemPressureTest.test1

# Run progress: 0.00% complete, ETA 00:16:40
# Fork: 1 of 5
# Warmup Iteration   1: 2183998.556 ops/s
# Warmup Iteration   2: 2281885.941 ops/s
# Warmup Iteration   3: 2239644.018 ops/s
# Warmup Iteration   4: 1608047.994 ops/s
# Warmup Iteration   5: 1992314.001 ops/s
Iteration   1: 2053657.571 ops/s3s]
Iteration   2: 2054957.773 ops/sm 3s]
Iteration   3: 2051595.233 ops/sm 13s]
Iteration   4: 2054878.239 ops/sm 23s]
Iteration   5: 2031111.214 ops/sm 33s]

# Run progress: 10.00% complete, ETA 00:15:04
# Fork: 2 of 5
# Warmup Iteration   1: 2228594.345 ops/s
# Warmup Iteration   2: 2257983.355 ops/s
# Warmup Iteration   3: 2063130.244 ops/s
# Warmup Iteration   4: 1629084.669 ops/s
# Warmup Iteration   5: 2063018.496 ops/s
Iteration   1: 1939260.937 ops/sm 33s]
Iteration   2: 1791414.018 ops/sm 43s]
Iteration   3: 1914987.221 ops/sm 53s]
Iteration   4: 1969484.898 ops/sm 3s]
Iteration   5: 1891440.624 ops/sm 13s]

# Run progress: 20.00% complete, ETA 00:13:23
# Fork: 3 of 5
# Warmup Iteration   1: 2228664.719 ops/s
# Warmup Iteration   2: 2263677.403 ops/s
# Warmup Iteration   3: 2237032.464 ops/s
# Warmup Iteration   4: 2040040.243 ops/s
# Warmup Iteration   5: 2038848.530 ops/s
Iteration   1: 2023934.952 ops/sm 14s]
Iteration   2: 2041874.437 ops/sm 24s]
Iteration   3: 2002858.770 ops/sm 34s]
Iteration   4: 2039727.607 ops/sm 44s]
Iteration   5: 2045827.670 ops/sm 54s]

# Run progress: 30.00% complete, ETA 00:11:43
# Fork: 4 of 5
# Warmup Iteration   1: 2105430.688 ops/s
# Warmup Iteration   2: 2279387.762 ops/s
# Warmup Iteration   3: 2228346.691 ops/s
# Warmup Iteration   4: 1438607.183 ops/s
# Warmup Iteration   5: 2059319.745 ops/s
Iteration   1: 1112543.932 ops/sm 54s]
Iteration   2: 1977077.976 ops/sm 4s]
Iteration   3: 2040147.355 ops/sm 14s]
Iteration   4: 1975766.032 ops/sm 24s]
Iteration   5: 2003532.092 ops/sm 34s]

# Run progress: 40.00% complete, ETA 00:10:02
# Fork: 5 of 5
# Warmup Iteration   1: 2240203.848 ops/s
# Warmup Iteration   2: 2245673.994 ops/s
# Warmup Iteration   3: 2096257.864 ops/s
# Warmup Iteration   4: 2046527.740 ops/s
# Warmup Iteration   5: 2050379.941 ops/s
Iteration   1: 2050691.989 ops/sm 35s]
Iteration   2: 2057803.100 ops/sm 45s]
Iteration   3: 2058634.766 ops/sm 55s]
Iteration   4: 2060596.595 ops/sm 5s]
Iteration   5: 2061282.107 ops/sm 15s]


Result &quot;com.xxx.MemPressureTest.test1&quot;:
  1972203.484 ±(99.9%) 142904.698 ops/s [Average]
  (min, avg, max) = (1112543.932, 1972203.484, 2061282.107), stdev = 190773.683
  CI (99.9%): [1829298.786, 2115108.182] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 18.0.1.1, OpenJDK 64-Bit Server VM, 18.0.1.1+2-6
# VM invoker: /Users/xxx/Library/Java/JavaVirtualMachines/openjdk-18.0.1.1/Contents/Home/bin/java
# VM options: -Dfile.encoding=UTF-8 -Djava.io.tmpdir=/Users/xxx/Dev/MemTests/build/tmp/jmh -Duser.country=US -Duser.language=en -Duser.variant
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.xxx.MemPressureTest.test2

# Run progress: 50.00% complete, ETA 00:08:22
# Fork: 1 of 5
# Warmup Iteration   1: 282751.407 ops/s
# Warmup Iteration   2: 283333.984 ops/s
# Warmup Iteration   3: 293785.079 ops/s
# Warmup Iteration   4: 268403.105 ops/s
# Warmup Iteration   5: 280054.277 ops/s
Iteration   1: 279093.118 ops/s9m 15s]
Iteration   2: 282782.996 ops/s9m 25s]
Iteration   3: 282688.921 ops/s9m 35s]
Iteration   4: 291578.963 ops/s9m 45s]
Iteration   5: 294835.777 ops/s9m 55s]

# Run progress: 60.00% complete, ETA 00:06:41
# Fork: 2 of 5
# Warmup Iteration   1: 283735.550 ops/s
# Warmup Iteration   2: 283536.547 ops/s
# Warmup Iteration   3: 294403.173 ops/s
# Warmup Iteration   4: 284161.042 ops/s
# Warmup Iteration   5: 281719.077 ops/s
Iteration   1: 276838.416 ops/s10m 56s]
Iteration   2: 284063.117 ops/s11m 6s]
Iteration   3: 282361.985 ops/s11m 16s]
Iteration   4: 289125.092 ops/s11m 26s]
Iteration   5: 294236.625 ops/s11m 36s]

# Run progress: 70.00% complete, ETA 00:05:01
# Fork: 3 of 5
# Warmup Iteration   1: 284567.336 ops/s
# Warmup Iteration   2: 283548.713 ops/s
# Warmup Iteration   3: 294317.511 ops/s
# Warmup Iteration   4: 283501.873 ops/s
# Warmup Iteration   5: 283691.306 ops/s
Iteration   1: 283462.749 ops/s12m 36s]
Iteration   2: 284120.587 ops/s12m 46s]
Iteration   3: 264878.952 ops/s12m 56s]
Iteration   4: 292681.168 ops/s13m 6s]
Iteration   5: 295279.759 ops/s13m 16s]

# Run progress: 80.00% complete, ETA 00:03:20
# Fork: 4 of 5
# Warmup Iteration   1: 284823.519 ops/s
# Warmup Iteration   2: 283913.207 ops/s
# Warmup Iteration   3: 294401.483 ops/s
# Warmup Iteration   4: 283998.027 ops/s
# Warmup Iteration   5: 283987.408 ops/s
Iteration   1: 278014.618 ops/s14m 17s]
Iteration   2: 283431.491 ops/s14m 27s]
Iteration   3: 284465.945 ops/s14m 37s]
Iteration   4: 293202.934 ops/s14m 47s]
Iteration   5: 290059.807 ops/s14m 57s]

# Run progress: 90.00% complete, ETA 00:01:40
# Fork: 5 of 5
# Warmup Iteration   1: 285598.809 ops/s
# Warmup Iteration   2: 284434.916 ops/s
# Warmup Iteration   3: 294355.547 ops/s
# Warmup Iteration   4: 284307.860 ops/s
# Warmup Iteration   5: 284297.362 ops/s
Iteration   1: 283676.043 ops/s15m 57s]
Iteration   2: 283609.750 ops/s16m 7s]
Iteration   3: 284575.124 ops/s16m 17s]
Iteration   4: 293564.269 ops/s16m 27s]
Iteration   5: 216267.883 ops/s16m 37s]


Result &quot;com.xxx.MemPressureTest.test2&quot;:
  282755.844 ±(99.9%) 11599.112 ops/s [Average]
  (min, avg, max) = (216267.883, 282755.844, 295279.759), stdev = 15484.483
  CI (99.9%): [271156.731, 294354.956] (assumes normal distribution)
</code></pre>
<p>The JMH Blackhole should prevent code removal and the fact that JMH is now in charge of running separate iterations should prevent parallelization, right? Shouldn't Blackhole also stop the object from being confined to the stack? Also, wouldn't there be more variation between warmup iterations if hotspot were still doing a significant amount of optimization?</p>
","73268952","<p>Creating a new ByteBuffer right before filling, indeed helps JIT compiler to produce better optimized code, when you use relative <code>put</code> methods, and here is why.</p>
<ol>
<li>JIT compilation unit is a method. HotSpot JVM does not perform a whole-program optimization, which is quite hard even in theory due to dynamic nature of Java and the open world runtime environment.</li>
<li>When the JVM compiles <code>test1</code> method, buffer instantiation appears in the same compilation scope as filling:</li>
</ol>
<pre><code>Bigish tmp = new Bigish();
tmp.setup(blackhole);
tmp.fill((byte)random.nextInt(255));
</code></pre>
<p>The JVM knows everything about the created buffer: its exact size and its backing array, it knows the buffer has not been published yet, no other thread sees it. So, the JVM can agressively optimize the fill loop: vectorize it using AVX instructions and unroll it to set 512 bytes at a time:</p>
<pre><code>  0x000001cdf60c9ae0:   mov    %r9d,%r8d
  0x000001cdf60c9ae3:   movslq %r8d,%r9
  0x000001cdf60c9ae6:   add    %r11,%r9
  0x000001cdf60c9ae9:   vmovdqu %ymm0,0x10(%rcx,%r9,1)
  0x000001cdf60c9af0:   vmovdqu %ymm0,0x30(%rcx,%r9,1)
  0x000001cdf60c9af7:   vmovdqu %ymm0,0x50(%rcx,%r9,1)
  0x000001cdf60c9afe:   vmovdqu %ymm0,0x70(%rcx,%r9,1)
  0x000001cdf60c9b05:   vmovdqu %ymm0,0x90(%rcx,%r9,1)
  0x000001cdf60c9b0f:   vmovdqu %ymm0,0xb0(%rcx,%r9,1)
  0x000001cdf60c9b19:   vmovdqu %ymm0,0xd0(%rcx,%r9,1)
  0x000001cdf60c9b23:   vmovdqu %ymm0,0xf0(%rcx,%r9,1)
  0x000001cdf60c9b2d:   vmovdqu %ymm0,0x110(%rcx,%r9,1)
  0x000001cdf60c9b37:   vmovdqu %ymm0,0x130(%rcx,%r9,1)
  0x000001cdf60c9b41:   vmovdqu %ymm0,0x150(%rcx,%r9,1)
  0x000001cdf60c9b4b:   vmovdqu %ymm0,0x170(%rcx,%r9,1)
  0x000001cdf60c9b55:   vmovdqu %ymm0,0x190(%rcx,%r9,1)
  0x000001cdf60c9b5f:   vmovdqu %ymm0,0x1b0(%rcx,%r9,1)
  0x000001cdf60c9b69:   vmovdqu %ymm0,0x1d0(%rcx,%r9,1)
  0x000001cdf60c9b73:   vmovdqu %ymm0,0x1f0(%rcx,%r9,1)
  0x000001cdf60c9b7d:   mov    %r8d,%r9d
  0x000001cdf60c9b80:   add    $0x200,%r9d
  0x000001cdf60c9b87:   cmp    %r10d,%r9d
  0x000001cdf60c9b8a:   jl     0x000001cdf60c9ae0
</code></pre>
<ol start=""3"">
<li>You use relative <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/nio/ByteBuffer.html#put(byte)"" rel=""noreferrer""><code>put</code></a> method. It not only sets a byte in a ByteBuffer, but also updates the <code>position</code> field. Note that the above vectorized loop does not update the position in memory. JVM sets it just once after the loop - it is allowed to do so as long as nobody can observe an inconsistent state of the buffer.</li>
<li>Now try to publish ByteBuffer before filling:</li>
</ol>
<pre><code>Bigish tmp = new Bigish();
volatileField = tmp;  // publish
tmp.setup(blackhole);
tmp.fill((byte)random.nextInt(255));
</code></pre>
<p>The loop optimization breaks; now the array bytes are filled one by one, and the position field is incremented accordingly.</p>
<pre><code>  0x000001829b18ca5c:   nopl   0x0(%rax)
  0x000001829b18ca60:   cmp    %r11d,%esi
  0x000001829b18ca63:   jge    0x000001829b18ce34           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::nextPutIndex@10 (line 721)
                                                            ; - java.nio.HeapByteBuffer::put@6 (line 209)
                                                            ; - bench.MemPressureTest$Bigish::fill@22 (line 33)
                                                            ; - bench.MemPressureTest::test1@28 (line 47)
  0x000001829b18ca69:   mov    %esi,%ecx
  0x000001829b18ca6b:   add    %edx,%ecx                    ;*getfield position {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::nextPutIndex@1 (line 720)
                                                            ; - java.nio.HeapByteBuffer::put@6 (line 209)
                                                            ; - bench.MemPressureTest$Bigish::fill@22 (line 33)
                                                            ; - bench.MemPressureTest::test1@28 (line 47)
  0x000001829b18ca6d:   mov    %esi,%eax
  0x000001829b18ca6f:   inc    %eax                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bench.MemPressureTest$Bigish::fill@26 (line 32)
                                                            ; - bench.MemPressureTest::test1@28 (line 47)
  0x000001829b18ca71:   mov    %eax,0x18(%r10)              ;*putfield position {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.Buffer::nextPutIndex@25 (line 723)
                                                            ; - java.nio.HeapByteBuffer::put@6 (line 209)
                                                            ; - bench.MemPressureTest$Bigish::fill@22 (line 33)
                                                            ; - bench.MemPressureTest::test1@28 (line 47)
  0x000001829b18ca75:   cmp    %r8d,%ecx
  0x000001829b18ca78:   jae    0x000001829b18ce14
  0x000001829b18ca7e:   movslq %esi,%r9
  0x000001829b18ca81:   add    %r14,%r9
  0x000001829b18ca84:   mov    %bl,0x10(%rdi,%r9,1)         ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.nio.HeapByteBuffer::put@13 (line 209)
                                                            ; - bench.MemPressureTest$Bigish::fill@22 (line 33)
                                                            ; - bench.MemPressureTest::test1@28 (line 47)
  0x000001829b18ca89:   cmp    $0x1000,%eax
  0x000001829b18ca8f:   jge    0x000001829b18ca95           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - bench.MemPressureTest$Bigish::fill@14 (line 32)
                                                            ; - bench.MemPressureTest::test1@28 (line 47)
  0x000001829b18ca91:   mov    %eax,%esi
  0x000001829b18ca93:   jmp    0x000001829b18ca5c
</code></pre>
<p>That's exactly what happens in <code>test2</code>. Since the ByteBuffer object is external to the compilation scope, JIT can't optimize it as freely as a local not-yet-published object.</p>
<ol start=""5"">
<li>Is it possible at all to optimize the fill loop in case of an external buffer?</li>
</ol>
<p>The good news, it is possible. Just use the absolute <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/nio/ByteBuffer.html#put(int,byte)"" rel=""noreferrer""><code>put</code></a> method instead of relative. In this case, <code>position</code> field remains unchanged, and JIT can easily vectorize the loop without a risk of breaking ByteBuffer invariants.</p>
<pre><code>for (int i = 0; i &lt; SIZE; ++i) {
    b.put(i, bt);
}
</code></pre>
<p>With this change, the loop will be vectorized in both cases. Even better, now <code>test2</code> becomes a lot faster than <code>test1</code>, proving that an object creation indeed has a performance overhead.</p>
<pre><code>Benchmark               Mode  Cnt      Score     Error   Units
MemPressureTest.test1  thrpt   10   2447,370 ± 146,804  ops/ms
MemPressureTest.test2  thrpt   10  15677,575 ± 136,075  ops/ms
</code></pre>
<h3>Conclusion</h3>
<ol>
<li>The counterintuitive performance difference was caused by the JVM inability to vectorize the fill loop when the ByteBuffer object creation is not in the compilation scope.</li>
<li>Prefer absolute get/put methods to relative ones where possible. Absolute methods are usually much faster, since they do not update the internal state of ByteBuffer, and JIT can apply more agressive optimizations.</li>
<li>Object creation indeed has an overhead, as the modified benchmark shows.</li>
</ol>
"
"73470158","1","Stream.peek() can be skipped for optimization","<p>I've come across a <a href=""https://rules.sonarsource.com/java/RSPEC-3864"" rel=""noreferrer"">rule in Sonar</a> which says:</p>
<blockquote>
<p>A key difference with other intermediate Stream operations is that the Stream implementation is free to skip calls to <code>peek()</code> for optimization purpose. This can lead to <code>peek()</code> being unexpectedly called only for some or none of the elements in the Stream.</p>
</blockquote>
<p>Also, it's mentioned in the <a href=""https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#peek-java.util.function.Consumer-"" rel=""noreferrer"">Javadoc</a> which says:</p>
<blockquote>
<p>This method exists mainly to support debugging, where you want to see the elements as they flow past a certain point in a pipeline</p>
</blockquote>
<p>In which case can <code>java.util.Stream.peek()</code> be skipped? Is it related to debugging?</p>
","73470740","<p>Not only <code>peek</code> but also <code>map</code> can be skipped. It is for sake of optimization.
For example, when the terminal operation <code>count()</code> is called, it makes no sense to <code>peek</code> or <code>map</code> the individual items as such operations do not change the number/count of the present items.</p>
<p>Here are two examples:</p>
<hr />
<p><strong>1.</strong> Map and peek <strong>are not skipped</strong> because the filter can change the number of items beforehand.</p>
<pre><code>long count = Stream.of(&quot;a&quot;, &quot;aa&quot;)
    .peek(s -&gt; System.out.println(&quot;#1&quot;))
    .filter(s -&gt; s.length() &lt; 2)
    .peek(s -&gt; System.out.println(&quot;#2&quot;))
    .map(s -&gt; {
        System.out.println(&quot;#3&quot;);
        return s.length();
    })
    .count();
</code></pre>
<blockquote>
<pre><code>#1
#2
#3
#1
1
</code></pre>
</blockquote>
<hr />
<p><strong>2.</strong> Map and peek <strong>are skipped</strong> because the number of items is unchanged.</p>
<pre><code>long count = Stream.of(&quot;a&quot;, &quot;aa&quot;)
    .peek(s -&gt; System.out.println(&quot;#1&quot;))
  //.filter(s -&gt; s.length() &lt; 2)
    .peek(s -&gt; System.out.println(&quot;#2&quot;))
    .map(s -&gt; {
        System.out.println(&quot;#3&quot;);
        return s.length();
    })
    .count();
</code></pre>
<blockquote>
<pre><code>2
</code></pre>
</blockquote>
<hr />
<p><strong>Important:</strong> The methods should have no <a href=""https://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html#Statelessness"" rel=""noreferrer"">side-effects</a> (they do above, but only for the sake of example).</p>
<blockquote>
<p>Side-effects in behavioral parameters to stream operations are, in general, discouraged, as they can often lead to unwitting violations of the statelessness requirement, as well as other thread-safety hazards.</p>
</blockquote>
<p>The following implementation is dangerous. Assuming <code>callRestApi</code> method performs a REST call, it won't be performed as the Stream violates the side-effect.</p>
<pre><code>long count = Stream.of(&quot;url1&quot;, &quot;url2&quot;)
    .map(string -&gt; callRestApi(HttpMethod.POST, string))
    .count();
</code></pre>
<pre><code>/**
 * Performs a REST call
 */
public String callRestApi(HttpMethod httpMethod, String url);
</code></pre>
"
"73414289","1","Granular media permissions Android 13 API 33","<p>I've been upgrading my project to SDK 33.</p>
<p>I changed the permissions where I needed to access media files, such as photos, with the new permission READ_MEDIA_IMAGES and it is working fine.</p>
<p>But I need to access documents such as PDF files in order to upload them to the server, but I cannot find any information concerning android 13 and documents.</p>
<p>Before the upgrade I had READ_EXTERNAL_STORAGE permission and I accessed all the files.</p>
<p>In the andorid documentation on the link below, only these three permissions are provided READ_MEDIA_IMAGES, READ_MEDIA_VIDEO, READ_MEDIA_AUDIO instead of using READ_EXTERNAL_STORAGE.</p>
<p><a href=""https://developer.android.com/about/versions/13/behavior-changes-13#granular-media-permissions"" rel=""noreferrer"">https://developer.android.com/about/versions/13/behavior-changes-13#granular-media-permissions</a></p>
<p>Any ideas on how to fix this and what steps to follow?</p>
","73535271","<p>According to Google storage documentation. It seems that for non-media files no permission is needed. <a href=""https://developer.android.com/training/data-storage"" rel=""noreferrer"">https://developer.android.com/training/data-storage</a>.</p>
"
"73457793","1","ClassCastException when stopping Tomcat 10 inside Eclipse","<p>I am using Eclipse 2022-06 and Tomcat 10.0.10.</p>
<p>Often, when shutting down Tomcat running inside Eclipse, I get</p>
<pre><code>WARNUNG: Failed to clear soft references from ObjectStreamClass$Caches for web application [ROOT]
java.lang.ClassCastException: class java.io.ObjectStreamClass$Caches$1 cannot be cast to class java.util.Map (java.io.ObjectStreamClass$Caches$1 and java.util.Map are in module java.base of loader 'bootstrap')
    at org.apache.catalina.loader.WebappClassLoaderBase.clearCache(WebappClassLoaderBase.java:2363)
</code></pre>
<p>...</p>
<p>I have found <a href=""https://stackoverflow.com/questions/34553583/java-lang-classcastexception-java-io-objectstreamclass-cannot-be-cast-to-java-l"">this</a> question, but it does not really apply: It's a different class (Map instead of String) and I cannot find a file called &quot;SESSIONS.ser&quot;. I also have already removed everything from the actual web service part (so the code is doing nothing). I just have not started to remove all the jar files linked that are probably loaded automatically.</p>
<p>Is there any way to find out which class actually causes the problem?</p>
<p>By the way, if by deploying a WAR file to a Tomcat installation outside Eclipse, I was not able to reproduce the error in the log. I am unsure whether that means it does not appear.</p>
","73551982","<p>I got the same problem after upgrading my IDE.<br />
After comparing the both tomcat logs, I saw that there were using 2 different jvm's.
Indeed I had upgraded the jdk and the ide!</p>
<p>The problem is appeared with jvm11.0.16, no exception with jvm11.0.11 even on the latest ide version.</p>
<p>This is the explanation, but the solution consisting to keep the old jvm may be not very good...</p>
<p>So I did <strong>upgrade Tomcat to the latest version</strong> (8.5.82 in my case) and it solved the problem. I guess it is due to this feature (see tomcat changelog):</p>
<blockquote>
<p>Disable the memory leak correction code enabled by the Context
attribute clearReferencesObjectStreamClassCaches when running on a JRE
that includes a fix for the underlying memory leak. (markt)</p>
</blockquote>
"
"73573742","1","Large size of HashSet throwing StackOverflow Error","<p>I have 81K records of Long object and I am trying to store it in HashSet. My code snippet looks like this:</p>
<pre><code>private static HashSet&lt;Long&gt; hashSet = new HashSet&lt;&gt;(Arrays.asList(*81K records*));
</code></pre>
<p>While compiling this is giving me <code>StackOverflow Error</code>. I am not understanding why only 81K records are being problem here? Solutions are appreciated.</p>
<p>Java version. :</p>
<pre><code>openjdk version &quot;1.8.0_322&quot;
OpenJDK Runtime Environment Corretto-8.322.06.1 (build 1.8.0_322-b06)
OpenJDK 64-Bit Server VM Corretto-8.322.06.1 (build 25.322-b06, mixed mode)
</code></pre>
<p>Stack Trace:</p>
<pre><code>[javac] 
    [javac] 
    [javac] The system is out of resources.
    [javac] Consult the following stack trace for details.
    [javac] java.lang.StackOverflowError
    [javac]     at com.sun.tools.javac.code.Type.map(Type.java:220)
    [javac]     at com.sun.tools.javac.code.Type.map(Type.java:220)
    [javac]     at com.sun.tools.javac.code.Type.map(Type.java:220)
    [javac]     at com.sun.tools.javac.code.Type.map(Type.java:220)
    [javac]     at com.sun.tools.javac.code.Type.map(Type.java:220)
    [javac]     at com.sun.tools.javac.code.Type.map(Type.java:220)
    [javac]     at com.sun.tools.javac.code.Type.map(Type.java:220)
    [javac]     at com.sun.tools.javac.code.Type.map(Type.java:220)
    [javac]     at com.sun.tools.javac.code.Type.map(Type.java:220)
    [javac]     at com.sun.tools.javac.code.Type.map(Type.java:220)
    [javac]     at com.sun.tools.javac.code.Type.map(Type.java:220)
    [javac]     at com.sun.tools.javac.code.Type.map(Type.java:220)
    [javac]     at com.sun.tools.javac.code.Type.map(Type.java:220)
    [javac]     at com.sun.tools.javac.code.Type.map(Type.java:220)
    [javac]     at com.sun.tools.javac.code.Type.map(Type.java:220)
    [javac]     at com.sun.tools.javac.code.Type.map(Type.java:220)
    [javac]     at com.sun.tools.javac.code.Type.map(Type.java:220)
    [javac]     at com.sun.tools.javac.code.Type.map(Type.java:220)
    [javac]     at com.sun.tools.javac.code.Type.map(Type.java:220)
    [javac]     at com.sun.tools.javac.code.Type.map(Type.java:220)
    [javac]     at com.sun.tools.javac.code.Type.map(Type.java:220)
    [javac]     at com.sun.tools.javac.code.Type.map(Type.java:220)

</code></pre>
<p>Line 220 of <code>Type</code>:</p>
<pre><code> 208     /**
 209      * Return the least specific subtype of t that starts with symbol
 210      * sym.  If none exists, return null.  The least specific subtype
 211      * is determined as follows:
 212      *
 213      * &lt;p&gt;If there is exactly one parameterized instance of sym that is a
 214      * subtype of t, that parameterized instance is returned.&lt;br&gt;
 215      * Otherwise, if the plain type or raw type `sym' is a subtype of
 216      * type t, the type `sym' itself is returned.  Otherwise, null is
 217      * returned.
 218      */
 219     public Type asSub(Type t, Symbol sym) {
 220         return asSub.visit(t, sym);
 221     }
 222     // where
 223         private final SimpleVisitor&lt;Type,Symbol&gt; asSub = new SimpleVisitor&lt;Type,Symbol&gt;() {
</code></pre>
","73574421","<p>The <code>HashSet</code> is irrelevant here. The problematic part is the <em>varargs</em> invocation of <code>Arrays.asList</code> with 81,000 elements.</p>
<p>To reproduce the issue, we can use the following code</p>
<pre class=""lang-java prettyprint-override""><code>class Tmp {
  static final String ARGUMENTS = &quot;&lt;&lt;INSERT ARGUMENTS HERE&gt;&gt;&quot;;

  static final List&lt;String&gt; TEMPLATE = Arrays.asList(
      &quot;import java.util.Arrays;&quot;,
      &quot;import java.util.List;&quot;,
      &quot;&quot;,
      &quot;class Tmp {&quot;,
      &quot;  static final List&lt;Integer&gt; L = Arrays.asList(&quot;,
           ARGUMENTS,
      &quot;  );&quot;,
      &quot;}&quot;);

  public static void main(String[] args) throws IOException {
    Path p = Files.createTempFile(&quot;Test&quot;, &quot;.java&quot;);
    Files.write(p, () -&gt; TEMPLATE.stream()
        .flatMap(line -&gt; line.equals(ARGUMENTS)? varargsArgument(): Stream.of(line))
        .iterator());
    JavaCompiler c = ToolProvider.getSystemJavaCompiler();
    c.run(System.in, System.out, System.err, p.toString());
  }

  static Stream&lt;CharSequence&gt; varargsArgument() {
    return IntStream.range(0, 8100).mapToObj(i -&gt; IntStream.range(0, 10)
            .mapToObj(j -&gt; i * 10 + j + (i &lt; 8099 || j &lt; 9? &quot;, &quot;: &quot;&quot;))
            .collect(Collectors.joining()));
  }
}
</code></pre>
<p>With <a href=""https://tio.run/##dVRNc5swEL37V@xwEi3ROLc4oc54PLR1x048Nj11elCwbIuCRCXhJJP4t7sroJgkNjPAsvv26/EgZTt2oQou09Wfw6En8kJpCyl6qVB0ch89JbywQsmbNzGJwbXIOP2KF3MmNmd2@zZUWpHRkdbs2ZwITIWxJ9zGas5yOlZZxhOrtDmPmUi7rKzzkP/xLuCJWqUyQ3@gPVZ5gcPrm1OAGK9zrXZi5QC9JGPGQJwX8NIDMJZZkcBaSJYBthFyA6PFt5@z6C5ewhfwwnByt4wWccf7PVpEw6GHtd7lOy7CusgQ4mg2n47iCIvU5FFmHIBglju8cxx7wVlERfYxfrQ6Sx2dp6ZDsvmG6yFMP8zVJlZHu26nnN/pvff8ioCifMiwRdNpp8QKciYkqWn49RuY3hgf7FarRwMdbVb0Azi9QYHDVKKkCb5oy2OeF@6ZeDE31gvAo44E19Ll1NBHLSwnRQDEh4sj341miN9uQ9cZszNWkExI7qDuTvnfkmWGtHv6t7Bj2k070psy59IS/xpq5VG1rpL9TlFsrhkqm/jNVF0hQoIbdYVHN9wun43leRdGmtSE6hIpq@JUyAAaU5W2tbnWARSo6ZrZpu2@I8J61nC8ZXqJ23GZ8OHHnRreNbelltB@fFQzueGkH8DVZb/v05wVsbp/SIlwjJ2AXfb9rl7gmJG6DAGfEAKfIcUTi4Rw1R8M4PUVHSEMbsG91WvUsP@uTFL/Msjx10FTJWS9crPz/nD4Bw"" rel=""noreferrer"" title=""Java (OpenJDK 8) – Try It Online"">OpenJDK 8</a>, it produces the</p>
<pre class=""lang-none prettyprint-override""><code>java.lang.StackOverflowError
    at com.sun.tools.javac.code.Type.map(Type.java:220)
   …
</code></pre>
<p>On recent JDKs, e.g. <a href=""https://tio.run/##dVRNc5swEL37V@xwEi3ROLc4oc54PLR1x048Nj11elCwbIuCRCXhJJP4t7sroJgkNjPAsvv26/EgZTt2ka7@HA49kRdKW0jRQ4Wik/voKeGFFUrevIlJDK5FxulXvJgzsTmz27eh0oqMjrRmz@ZEYCqMPeE2VnOW07HKMp5Ypc15zETaZWWdh/yPdwFP1CqVGfoD7bHKCxxe35wCxHida7UTKwfoJRkzBuK8gJcegLHMigTWQrIMsI2QGxgtvv2cRXfxEr6AF4aTu2W0iDve79EiGg49rPUu33ER1kWGEEez@XQUR1ikJo8y4wAEs9zhnePYC84iKrKP8aPVWeroPDUdks03XA9h@mGuNrE62nU75fxO773nVwQU5UOGLZpOOyVWkDMhSU3Dr9/A9Mb4YLdaPRroaLOiH8DpDQocphIlTfBFWx7zvHDPxIu5sV4AHnUkuJYup4Y@amE5KQIgPlwc@W40Q/x2G7rOmJ2xgmRCcgd1d8r/liwzpN3Tv4Ud027akd6UOZeW@NdQK4@qdZXsd4pic81Q2cRvpuoKERLcqCs8uuF2@Wwsz7sw0qQmVJdIWRWnQgbQmKq0rc21DqBATdfMNm33HRHWs4bjLdNL3I7LhA8/7tTwrrkttYT246OayQ0n/QCuLvt9n@asiNX9Q0qEY@wE7LLvd/UCx4zUZQj4hBD4DCmeWCSEq/5gAK@v6AhhcAvurV6jhv13ZZL6l0GOvw6aKiHrlZud94fDPw"" rel=""noreferrer"" title=""Java (JDK) – Try It Online"">JDK 12</a>, it produces</p>
<pre class=""lang-none prettyprint-override""><code>/tmp/Test14992292170362927520.java:6: error: code too large
  static final List&lt;Integer&gt; L = Arrays.asList(
                             ^
</code></pre>
<p>showing that even when the compiler bug has been fixed, such code can’t get compiled.</p>
<p>Such amount of data should be included as embedded resource which you read in once at startup.</p>
"
"73603358","1","Understanding javadoc for ZonedDateTime::plusDays","<p>I am not able to understand one specific part of doc provided for the plusDays() method in ZonedDateTimeClass. Doc states:</p>
<blockquote>
<p>Returns a copy of this ZonedDateTime with the specified number of days
added.</p>
<p>This operates on the local time-line, adding days to the local
date-time. This is then converted back to a ZonedDateTime, using the
zone ID to obtain the offset.</p>
<p>When converting back to ZonedDateTime, if the local date-time is in an
overlap, then the offset will be retained if possible, otherwise the
earlier offset will be used. If in a gap, the local date-time will be
adjusted forward by the length of the gap.</p>
<p>This instance is immutable and unaffected by this method call.</p>
<p>Params: days – the days to add, may be negative</p>
<p>Returns: a ZonedDateTime based on this date-time with the days added,
not null</p>
<p>Throws: DateTimeException – if the result exceeds the supported date
range</p>
</blockquote>
<p>How I understand this: Assume we have ZonedDateTime object representing <code>September 4, 2022 6 PM in America/New_York TimeZone</code>. So this method will first convert it to LocalDateTime, that is, it will lose timezone information and just retain <code>September 4, 2022 6 PM</code>. It will add some number of days to it, let's say 7, so that the result is <code>September 11, 2022 6 PM</code>, and now it will convert it back to ZonedDateTime object by providing back the information related to timezone.</p>
<p>However, I am not able to understand the latter part of documentation, that is,</p>
<blockquote>
<p>When converting back to ZonedDateTime, if the local date-time is in an
overlap, then the offset will be retained if possible, otherwise the
earlier offset will be used. If in a gap, the local date-time will be
adjusted forward by the length of the gap.</p>
</blockquote>
<p>What do they mean by <code>local date-time is in an overlap</code>? <code>...then the offset will be retained if possible, otherwise the earlier offset will be used.</code> - what are these two different offsets? <code>If in a gap...</code> - what is this gap?</p>
","73604362","<p>The &quot;gap&quot; and &quot;overlap&quot; terms are defined in the class-level Javadoc of the <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/time/ZonedDateTime.html"" rel=""nofollow noreferrer""><code>ZonedDateTime</code></a> class:</p>
<blockquote>
<p>This class handles conversion from the local time-line of <code>LocalDateTime</code> to the instant time-line of <code>Instant</code>. The difference between the two time-lines is the offset from <code>UTC/Greenwich</code>, represented by a <code>ZoneOffset</code>.</p>
<p>Converting between the two time-lines involves calculating the offset using the rules accessed from the ZoneId. Obtaining the offset for an instant is simple, as there is exactly one valid offset for each instant. By contrast, obtaining the offset for a local date-time is not straightforward. There are three cases:</p>
<ul>
<li>Normal, with one valid offset. For the vast majority of the year, the normal case applies, where there is a single valid offset for the local date-time.</li>
<li>Gap, with zero valid offsets. This is when clocks jump forward typically due to the spring daylight savings change from &quot;winter&quot; to &quot;summer&quot;. In a gap there are local date-time values with no valid offset.</li>
<li>Overlap, with two valid offsets. This is when clocks are set back typically due to the autumn daylight savings change from &quot;summer&quot; to &quot;winter&quot;. In an overlap there are local date-time values with two valid offsets.</li>
</ul>
</blockquote>
<h2>Example</h2>
<p>Let's use your specific example of the <code>America/New_York</code> time zone.  Per <a href=""https://www.timeanddate.com/time/change/usa/new-york-state?year=2022"" rel=""nofollow noreferrer"">timeanddate.com</a>, the daylight saving time changes in New York for 2022 are:</p>
<blockquote>
<h2>Mar 13, 2022 - Daylight Saving Time Started</h2>
<p>When local standard time was about to reach<br />
Sunday, March 13, 2022, <strong>2:00:00</strong> am clocks were turned <strong>forward</strong> 1 hour to<br />
Sunday, March 13, 2022, <strong>3:00:00</strong> am local daylight time instead.</p>
<h2>Nov 6, 2022 - Daylight Saving Time Ends</h2>
<p>When local daylight time is about to reach<br />
Sunday, November 6, 2022, <strong>2:00:00</strong> am clocks are turned <strong>backward</strong> 1 hour to<br />
Sunday, November 6, 2022, <strong>1:00:00</strong> am local standard time instead.</p>
</blockquote>
<p>Therefore, there are no times between 2:00 and 2:59 on March 13 in the New York time zone.  1:59 occurs in standard time.  When that minute ends, no 2:00 hour occurs, and instead the local time jumps to 3:00 daylight time.</p>
<p>Additionally, the times between 1:00 and 1:59 occur twice on November 6: one in daylight time and then one in standard time.</p>
<h3>Java <code>ZonedDateTime</code> example</h3>
<pre class=""lang-java prettyprint-override""><code>ZoneId zone = ZoneId.of(&quot;America/New_York&quot;);

// 2022-03-13T03:15:30-04:00[America/New_York] (no 2:15)
System.out.println(
        ZonedDateTime.of(LocalDateTime.parse(&quot;2022-03-12T02:15:30&quot;), zone)
        .plusDays(1));
</code></pre>
<p>Since 2:15 AM on March 12 doesn't exist and is within a 1-hour gap, the following logic you quoted applies, adding 1 hour to the local time:</p>
<blockquote>
<p>If in a gap, the local date-time will be adjusted forward by the length of the gap.</p>
</blockquote>
<p>Therefore, 3:15 AM is used when adding 1 day to March 11 at 1:15 AM.</p>
<pre class=""lang-java prettyprint-override""><code>ZoneId zone = ZoneId.of(&quot;America/New_York&quot;);

// 2022-11-06T01:15:30-04:00[America/New_York] (First 1:15)
System.out.println(
        ZonedDateTime.of(LocalDateTime.parse(&quot;2022-11-05T01:15:30&quot;), zone)
        .plusDays(1));

// 2022-11-06T01:15:30-05:00[America/New_York] (Second 1:15)
System.out.println(
        ZonedDateTime.of(LocalDateTime.parse(&quot;2022-11-05T01:15:30&quot;), zone)
        .plusDays(1).plusHours(1));
</code></pre>
<p>Since 1:15 AM is during an overlap — 1:15 AM occurs twice on November 6 — the following logic you quoted applies, using the same -04:00 zone offset as 1:15 AM on November 5:</p>
<blockquote>
<p>if the local date-time is in an overlap, then the offset will be retained if possible</p>
</blockquote>
<p>Therefore, adding 1 day to November 5 at 1:15 uses the first 1:15 on November 6.  This is made more evident by the second call, which shows that adding an hour to this timestamp returns the second 1:15 of November 6.  The fact that these are different points on the timeline despite both being 1:15 local time is evident by their differing zone offsets: -04:00 &amp; -05:00.</p>
"
"73630599","1","Java regex inside text blocks","<p>I surely hoped that this would be supported:</p>
<pre><code>private static void regex() {
    String plain = &quot;\\w+&quot;;
    String withTextBlocks = &quot;&quot;&quot;
        \w+
    &quot;&quot;&quot;;
}
</code></pre>
<p>but <code>withTextBlocks</code> does not compile under Java-17. Isn’t it the point of text blocks that we should not escape? I have been through the <a href=""https://openjdk.org/jeps/378"" rel=""nofollow noreferrer"">JEP</a> and maybe the explanation is there, but I can't grok through it. And a second question in case someone knows, is there a future JEP for this? Thank you.</p>
","73639221","<p>You are conflating <em>text blocks</em> with <em>raw strings</em>.  These are different features, though they were explored together and this may explain why you mentally folded them together.  There is no support yet for raw strings (which turn out to be somewhat more slippery than they might first appear.)</p>
<blockquote>
<p>Isn’t it the point of text blocks that we should not escape?</p>
</blockquote>
<p>No, that is not the point of text blocks.  The point of text blocks is to allow us to represent <em>two dimensional</em> blocks of text in code, preserving the block's relative indentation but not absolute indentation.  This allows us to freely indent the source representation of the text block itself to match surrounding code, without affecting the indentation of the string the text block describes.</p>
<p>An additional design goal is that text blocks should differ from ordinary string literals only in ways that pertain to their two-dimensional nature.  There should not be a different set of escape characters, or different escaping rules.  (If we ever do raw strings, it should apply equally to text blocks and traditional string literals.)  If text blocks worked the way you wanted, you'd probably be complaining that you can't do the same with single-line strings.  These aspects are orthogonal and the language should treat them orthogonally.</p>
"
"73841877","1","Regex (?U)\p{Punct} is missing some Unicode punctuation signs in Java","<p>First of all, I want to remove all punctuation signs in a String. I wrote the following code.</p>
<pre><code>Pattern pattern = Pattern.compile(&quot;\\p{Punct}&quot;);
Matcher matcher = pattern.matcher(&quot;!\&quot;#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~（hello）&quot;);
if (matcher.find())
    System.out.println(matcher.replaceAll(&quot;&quot;));
</code></pre>
<p>After replacement I got this output: <code>（hello）</code>.</p>
<p>So the pattern matches the one of <code>!&quot;#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_</code>{|}~`, which matches the <a href=""https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html"" rel=""nofollow noreferrer"">official docs</a>.</p>
<p>But I want to remove &quot;（&quot; <code>Fullwidth Left Parenthesis U+FF08*</code> and &quot;）&quot; <code>Fullwidth Right Parenthesis U+FF09</code> as well, so I changed my code to this:</p>
<pre><code>Pattern pattern = Pattern.compile(&quot;(?U)\\p{Punct}&quot;);
        Matcher matcher = pattern.matcher(&quot;!\&quot;#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~（）&quot;);
        if (matcher.find())
            System.out.println(matcher.replaceAll(&quot;&quot;));
</code></pre>
<p>After replacement, I got this output: <code>$+&lt;=&gt;^</code>|~`</p>
<p>It indeed matched &quot;（&quot; <code>Fullwidth Left Parenthesis U+FF08*</code> and &quot;）&quot; <code>Fullwidth Right Parenthesis U+FF09</code>, bit it missed <code>$+&lt;=&gt;^</code>|~`.</p>
<p>I am so confused. Why did that happen? Can anyone give some help?</p>
","73841931","<p>Unicode (that is when you use <code>(?U)</code>) and POSIX (when not using <code>(?U)</code>) disagrees on what counts as a punctuation.</p>
<p>When you don't use <code>(?U)</code>, <code>\p{Punct}</code> matches the <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/regex/Pattern.html#posix"" rel=""noreferrer"">POSIX punctuation character class</a>, which is just</p>
<pre><code>!&quot;#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~
</code></pre>
<p>When you use <code>(?U)</code>, <code>\p{Punct}</code> matches the <a href=""https://www.compart.com/en/unicode/category"" rel=""noreferrer"">Unicode Punctuation category</a>, which does not include some of the characters in the above list, namely:</p>
<pre><code>$+&lt;=&gt;^`|~
</code></pre>
<p>For example, the Unicode category for <code>$</code> is &quot;Symbol, Currency&quot;, or Sc. See <a href=""https://www.fileformat.info/info/unicode/char/0024/index.htm"" rel=""noreferrer"">here</a>.</p>
<p>If you want to match $+&lt;=&gt;^`|~, plus all the Unicode punctuations, you can put them both in a character class. You can also just directly use the Unicode category &quot;P&quot;, rather than turning on Unicode mode with <code>(?U)</code>.</p>
<pre><code>Pattern pattern = Pattern.compile(&quot;[\\p{P}$+&lt;=&gt;^`|~]&quot;);
Matcher matcher = pattern.matcher(&quot;!\&quot;#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~（）&quot;);
// you don't need &quot;find&quot; first
System.out.println(matcher.replaceAll(&quot;&quot;));
</code></pre>
"
"73911550","1","How can I reduce the time complexity from O(n^2) to O(n)","<p>I recently attended an interview and they asked me to solve the below problem by using <code>O(n)</code> time complexity. (Hackerranker)</p>
<p><strong>Problem:</strong></p>
<p>Given an integer array and there will be <code>l</code> integer and <code>r</code> integer. Need to find the which are all the pair of elements sum will be equal and in between <code>l</code> and <code>r</code> value;</p>
<blockquote>
<p>Example:</p>
<pre><code>int[] array = {2,3,4,5}; int l=5, int r=7;
</code></pre>
<p>Output: 4</p>
</blockquote>
<p>Input properties:</p>
<ul>
<li>The input is unsorted.</li>
<li>The input will have duplicate elements.</li>
<li>The input array is non-negative.</li>
</ul>
<p>The below combination will return the sum which will be equal and in between <code>l</code> and <code>r</code> range value, where if the pair is less than <code>l</code> or greater than <code>r</code> it should be skipped. And pairs can't be duplicated:</p>
<pre><code>array[0] + array[1] = 5 -&gt; counter++
array[0] + array[2] = 6 -&gt; counter++
array[0] + array[3] = 7 -&gt; counter++
array[1] + array[2] = 7 -&gt; counter++
array[1] + array[3] = 8 -&gt; greater than r, no counter increment
</code></pre>
<p>I tried the below approach and it works fine but its time complexity is O(n^2):</p>
<pre><code> public static int sumPairs(int[] array,int l, int r)
    {
        int counter=0;
        for(int i=0;i&lt;array.length;i++)
        {
            for(int j=i+1;j&lt;array.length;j++)
            {
                int sum = array[i]+array[j];
                
                if(sum&lt;=r &amp;&amp; sum&gt;=l)
                {
                    counter++;
                }
            }
        }
        
        return counter;
    }
</code></pre>
<p>Can someone help me to find a way to optimize the above code to become <code>O(n)</code> time complexity?</p>
","73922249","<p>Here's my approach using a cumulative histogram instead of a sort. In c++, sorry.</p>
<pre><code>static int sumPairsLinear(int *pArray,int iArraySize, int l, int r)
{
    int iResult = 0;
    // 1. Iterate the array and toss any entries larger than r
    for (int i=0;i&lt;iArraySize;)
    {
        if (pArray[i] &gt; r)
            pArray[i] = pArray[--iArraySize];
        else
            i++;
    }
    // 2. Allocate a zero initialised array of ints, of size `r+1`.
    int *pHistogram = new int[r+1];
    memset(pHistogram, 0, sizeof(int)*(r+1));
    // 3. Fill the histogram
    for (int i=0;i&lt;iArraySize;i++)
    {
        pHistogram[pArray[i]]++;
    }
    // 4. Convert it to a cumulative histogram. 
    for (int i=1;i&lt;=r;i++)
    {
        pHistogram[i] += pHistogram[i-1];
    }
    // 5. Iterate through the values again. Use the cumulative histogram to calculate the number of valid pairs.
    for (int i=0;i&lt;iArraySize;i++)
    {
        int iVal = pArray[i];
        int iIndex = l-iVal-1;
        iResult += pHistogram[r-iVal] - ((iIndex &gt;= 0) ? pHistogram[iIndex] : 0);
        // Don't pair with self
        iVal *= 2;
        if (iVal &lt;= r &amp;&amp;
            iVal &gt;= l)
        {
            iResult--;
        }
    }
    // 6. Half iResult because we counted each pair twice.
    iResult /= 2;

    delete[] pHistogram;
    return iResult;
}
</code></pre>
<p>Horrible performance if <code>r</code> is large but otherwise reasonable and still O(N).</p>
"
"74045604","1","can not create a maven archetype project, the progress bar get stuck in 33%","<p>I installed Eclipse IDE for Enterprise Java and Web Developers (includes Incubating components)
Version: 2022-09 (4.25.0)
Build id: 20220908-1902
It includes already maven, and I have tried to create some maven archetype projects, but without success, always get stuck in the progress bar.
Anyone has some clues? Thank you!</p>
<p><img src=""https://i.stack.imgur.com/XJWnD.png"" alt=""can not create a maven archetype project, the progress bar get stuck in 33%"" /></p>
","74086551","<p>I had this too, it took me a long time to spot the very simple fix.  If you look in the console you'll see that the maven project generation is in interactive mode.  You just need to click Y (yes) in the console to confirm that you are happy with the configuration and it will finish.</p>
"
"71142680","1","co.elastic.clients.transport.TransportException: [es/search] Missing [X-Elastic-Product] header","<p>I'm following the tutorial from elastic search java api client here: <a href=""https://www.elastic.co/guide/en/elasticsearch/client/java-api-client/current/connecting.html"" rel=""noreferrer"">https://www.elastic.co/guide/en/elasticsearch/client/java-api-client/current/connecting.html</a></p>
<p>My code is as following.</p>
<pre><code>// Create the low-level client
RestClient restClient = RestClient.builder(
 new HttpHost(&quot;localhost&quot;, 9200)).build();

// Create the transport with a Jackson mapper
ElasticsearchTransport transport = new RestClientTransport(
 restClient, new JacksonJsonpMapper());

// And create the API client
ElasticsearchClient client = new ElasticsearchClient(transport);

try {
 SearchResponse&lt;Object&gt; search = client.search(s -&gt; s
   .index(&quot;*:*&quot;),
   Object.class);
} catch (IOException e) {
 System.out.println(e.getMessage());
}
</code></pre>
<p>This code is throwing out the following exception:</p>
<pre><code>co.elastic.clients.transport.TransportException: [es/search] Missing [X-Elastic-Product] header. Please check that you are connecting to an Elasticsearch instance, and that any networking filters are preserving that header.
</code></pre>
<p>I've tried manually putting this header via the <code>setDefaultHeaders</code> method like this:</p>
<pre><code>RestClientBuilder builder = RestClient.builder(
 new HttpHost(&quot;localhost&quot;, 9200, &quot;http&quot;));
Header[] defaultHeaders = new Header[]{new BasicHeader(&quot;X-Elastic-Product&quot;, &quot;Elasticsearch&quot;)};
builder.setDefaultHeaders(defaultHeaders);
RestClient restClient = builder.build();
</code></pre>
<p>But the error is the same.</p>
<p>I've tried both version 7.16 and 8.0.0, same result.</p>
","74102828","<p>The default headers the <code>RestClientBuilder</code> allows you to specify are the <em>request</em> headers, not the response headers. The error you are getting is because older Elasticsearch [server] versions do not include the <code>X-Elastic-Product=Elasticsearch</code> header in any of the API responses, but the recent distributions do (7.14+?), so the newer versions of <code>elasticsearch-java</code> (i.e. client) expects them.</p>
<p>I am in the same boat — I use 8.4.2 of <code>elasticsearch-java</code> with an Elasticsearch server version of 7.2.0.</p>
<p>I ran into two format-based compatibility issues:</p>
<ol>
<li>The client passing a <code>Content-Type</code> not known to the server, and so its request getting rejected with a 406</li>
<li>The client validating if the response has <code>X-Elastic-Product=Elasticsearch</code> header</li>
</ol>
<p>Fortunately, the <code>RestClientBuilder</code> allows you to customize the underlying http client through: <code>setHttpClientConfigCallback</code>. The callback looks like this, so basically you can intercept the request and responses, manipulate headers, and thereby get around these issues:</p>
<pre><code>    public interface HttpClientConfigCallback {
        /**
         * Allows to customize the {@link CloseableHttpAsyncClient} being created and used by the {@link RestClient}.
         * Commonly used to customize the default {@link org.apache.http.client.CredentialsProvider} for authentication
         * or the {@link SchemeIOSessionStrategy} for communication through ssl without losing any other useful default
         * value that the {@link RestClientBuilder} internally sets, like connection pooling.
         */
        HttpAsyncClientBuilder customizeHttpClient(HttpAsyncClientBuilder httpClientBuilder);
    }
</code></pre>
<p>Specifically, here's what worked for me:</p>
<pre><code>var httpClientConfigCallback = httpClientBuilder -&gt;
        httpClientBuilder
            .setDefaultCredentialsProvider(credentialsProvider)
            // this request &amp; response header manipulation helps get around newer (&gt;=7.16) versions
            // of elasticsearch-java client not working with older (&lt;7.14) versions of Elasticsearch
            // server
            .setDefaultHeaders(
                List.of(
                    new BasicHeader(
                        HttpHeaders.CONTENT_TYPE, ContentType.APPLICATION_JSON.toString())))
            .addInterceptorLast(
                (HttpResponseInterceptor)
                    (response, context) -&gt;
                        response.addHeader(&quot;X-Elastic-Product&quot;, &quot;Elasticsearch&quot;));
var restClient =
        RestClient.builder(elasticsearchHosts)
            .setHttpClientConfigCallback(httpClientConfigCallback)
            .build();

</code></pre>
<p>Note that there could still be behavioral differences between the aforementioned product and API versions as they are way too apart. The above only fixes format-based incompatibilities. For this reason, it's always best to use at least the same major versions of these components, if not the exact versions.</p>
"
"74081398","1","Android Studio : Cause: dagger/hilt/android/plugin/HiltGradlePlugin has been compiled by a more recent version of the Java Runtime","<p>I am getting this error while opening a project</p>
<p>Cause: dagger/hilt/android/plugin/HiltGradlePlugin has been compiled by a more recent version of the Java Runtime (class file version 55.0), this version of the Java Runtime only recognizes class file versions up to 52.0</p>
<p>What i tried are :</p>
<p><a href=""https://stackoverflow.com/questions/69511275/plugin-id-dagger-hilt-android-plugin-was-not-found-in-any-of-the-following"">Plugin [id: &#39;dagger.hilt.android.plugin&#39;] was not found in any of the following sources</a></p>
<p><a href=""https://github.com/google/dagger/issues/3495"" rel=""noreferrer"">https://github.com/google/dagger/issues/3495</a></p>
<p><a href=""https://stackoverflow.com/questions/73061190/dagger-hilt-error-while-compiling-project"">Dagger-hilt error while compiling project</a></p>
<p><a href=""https://stackoverflow.com/questions/47457105/class-has-been-compiled-by-a-more-recent-version-of-the-java-environment"">Class has been compiled by a more recent version of the Java Environment</a></p>
<p><a href=""https://stackoverflow.com/questions/70600315/how-to-resovle-java-runtime-class-file-version-55-0-this-version-of-the-java"">How to resovle Java Runtime (class file version 55.0), this version of the Java Runtime only recognizes class file versions up to 52.0 error?</a></p>
<p><a href=""https://stackoverflow.com/questions/72264871/java-lang-unsupportedclassversionerror-while-integrating-firebase-performance-li"">java.lang.UnsupportedClassVersionError while integrating firebase performance library in react native app</a></p>
<p><a href=""https://stackoverflow.com/questions/68041148/java-lang-unsupportedclassversionerror-in-gradle-build"">java.lang.unsupportedclassversionerror in gradle build</a></p>
<p><a href=""https://stackoverflow.com/questions/62882730/the-hilt-android-gradle-plugin-is-applied-but-no-com-google-daggerhilt-android"">The Hilt Android Gradle plugin is applied but no com.google.dagger:hilt-android-compiler dependency was found</a></p>
","74247022","<p>The <a href=""https://www.youtube.com/watch?v=6h2jdDdmU3Y"" rel=""noreferrer"">youtube link</a> solution reported fixed the issue in my case, however here the instructions for the very latest Android Studio version (Android Studio Dolphin | 2021.3.1 Patch 1) on MacOS</p>
<ol>
<li>Select your project App main folder in the Android Studio Project panel</li>
<li>Right click -&gt; Open Module Settings</li>
<li>Select the Project entry below the Project Settings section</li>
<li>In the dropdown menu next to SDK, select the Java 11 version</li>
<li>Click on Apply and OK</li>
<li>Rebuild the project</li>
</ol>
<p>If this doesn't work could be something deeper messed up in your machine JDK configuration or IDE configuration, would be easier I think to uninstall completely the IDE, clean the configuration file and install from scratch.
It could be overkill but sometime this is the most reliable way especially when nothing works.</p>
"
"74837939","1","How to delete an ""Island"" of numbers in a 2D array in Java","<p>I'm creating a method that takes a 2D array and scans throughout the array to find &quot;Chunks&quot; of numbers that are completely surrounded by zeros and convert those Chunks (I call them the islands) into zeros.</p>
<p>I'm trying to delete all of the &quot;islands&quot; except for the largest one.</p>
<p>For example, for this 2D array</p>
<pre><code>1 2 3 2 2 1 
3 2 2 1 2 3
3 2 2 1 3 2
2 3 2 3 2 2
2 2 3 1 1 2
3 2 1 2 3 2
2 3 1 2 3 2
2 2 0 0 0 0
0 0 0 1 2 0
0 0 0 0 0 0 
</code></pre>
<p>After the method the 2D array should now be:</p>
<pre><code>1 2 3 2 2 1 
3 2 2 1 2 3
3 2 2 1 3 2
2 3 2 3 2 2
2 2 3 1 1 2
3 2 1 2 3 2
2 3 1 2 3 2
2 2 0 0 0 0
0 0 0 0 0 0
0 0 0 0 0 0 
</code></pre>
<p>the small chunk of <code>1 2 </code> is &quot;deleted&quot;</p>
<p>Here is a second example, as the method should also take chunks of numbers that are not part of the &quot;main&quot; chunk as Islands and that are on the edges as well.</p>
<p>The original array would be:</p>
<pre><code>1 2 3 2 2 1 
3 2 2 1 2 3
3 2 2 1 3 2
2 3 2 3 2 2
2 2 3 1 1 2
3 2 1 2 3 2
2 3 1 2 3 2
2 2 0 0 0 0
0 0 0 1 2 3
0 0 0 0 3 2 
</code></pre>
<p>After the method execution, it should be:</p>
<pre><code>1 2 3 2 2 1 
3 2 2 1 2 3
3 2 2 1 3 2
2 3 2 3 2 2
2 2 3 1 1 2
3 2 1 2 3 2
2 3 1 2 3 2
2 2 0 0 0 0
0 0 0 0 0 0
0 0 0 0 0 0 
</code></pre>
<p>In this case, the island</p>
<pre><code>1 2 3 
  3 2
</code></pre>
<p>is deleted because it is separate from the big chunk and is surrounded by zeros.</p>
<p>The following code is the one I have so far, and it does not work as intended. It's wrong because I believe that it's taking the main chunk as an Island, and what happens is that it converts the entire array into zeros instead of deleting only the small Islands. It includes an example, and you should see what It does when you run it.</p>
<pre><code>public class destroyIslands {
    public static void main(String[] args) {
        int[][] example = { {1, 2, 3, 1, 2},
                            {2, 3, 2, 1, 2},
                            {3, 2, 1, 2, 2},
                            {0, 2, 0, 0, 0},
                            {0, 0, 0, 2, 1} };
        
        example = deleteIslandBoard(example);
        printGrid(example);
    }
    
    public static int[][] deleteIslandBoard(int[][] array) {
      // Create a boolean array to track which cells have been visited
      boolean[][] visited = new boolean[array.length][array[0].length];
    
      // Iterate 
      for (int i = 0; i &lt; array.length; i++) {
        for (int j = 0; j &lt; array[0].length; j++) {
            // If the cell is not visited and is part of an island
            if (!visited[i][j] &amp;&amp; array[i][j] != 0) {
                // Delete the island by setting all cells to 0
                deleteIsland(array, i, j, visited);
            }
        }
      }
      // Return the modified array
      return array;
    }

    public static void deleteIsland(int[][] array, int i, int j, boolean[][] visited) {
      // Check if the current cell is out of board or if it has already been visited
      if (i &lt; 0 || i &gt;= array.length || j &lt; 0 || j &gt;= array[0].length || visited[i][j]) {
        return;
      }
      // Mark the current cell as visited
      visited[i][j] = true; // If the current cell is part of the island, set it to 0
      if (array[i][j] != 0) {
        array[i][j] = 0;
        // Recursively delete the neighboring cells that are part of the island
        deleteIsland(array, i - 1, j, visited);
        deleteIsland(array, i + 1, j, visited);
        deleteIsland(array, i, j - 1, visited);
        deleteIsland(array, i, j + 1, visited);
      }
    }
    
    public static void printGrid(int[][] grid) {
        for(int i = 0; i &lt; grid.length; i++) {
            for(int j = 0; j &lt; grid[i].length; j++) {
                System.out.print(grid[i][j] + &quot; &quot;);
            }
            System.out.println();
        }
    }
}
</code></pre>
<p>Any idea of what should I change?</p>
","74839246","<p>This problem can be solved in linear time <strong>O(n)</strong> by treating the cells of the given Matrix as the Vertexes of an <em>undirected disjointed</em> <a href=""https://en.wikipedia.org/wiki/Graph_(discrete_mathematics)"" rel=""nofollow noreferrer""><em>Graph</em></a>.</p>
<p>The task boils down to exploring all <a href=""https://en.wikipedia.org/wiki/Component_(graph_theory)"" rel=""nofollow noreferrer""><em>Connected components</em></a> (<em>islands</em>) in a Graph, and comparing them with each other.</p>
<p>And for that we would need to implement of the Graph-traversal algorithms. I've chosen the <a href=""https://en.wikipedia.org/wiki/Depth-first_search"" rel=""nofollow noreferrer""><em>Depth first search</em></a> algorithm for that purpose.</p>
<p>To keep things simple, a Vertex of a graph would be represented as an array <code>int[]</code> of two elements containing coordinates of a cell (<em>feel free to reimplement it by defining a separate class for a Vertex to make each vertex aware of it neighbors by holding a reference to a collection of Vertices</em>)</p>
<p>For convenience, I've made several changes to your <code>DestroyIslands</code> class:</p>
<ul>
<li>Introduced an inner class <code>Island</code>, which wraps a list of cells that constitute an Island (<em>Connected component of the Graph</em>). This class implements <code>Comparable</code> in based on size of the cells to make it easier to find the largest Island. And defines the method <code>destroy()</code> to nullify the rest Islands.</li>
<li>Introduced a <code>static</code> array <code>NEIGHBOURS</code> of type <code>int[][]</code> representing all possible adjacent cells, which should be considered while iterating through the matrix from left to right and from top to bottom.</li>
<li>Reference to the Matrix is stored in the instance field <code>grid</code>, and all methods of <code>DestroyIslands</code> are defined as instance methods (<em>if you want to keep them <code>static</code>, fill free to change them as you see fit, it would be easy if you grasp the algorithm itself</em>).</li>
</ul>
<p>That's how implementation might look like:</p>
<pre><code>public class DestroyIslands {
    public static final int[][] NEIGHBOURS = // adjacent cells
        {{0, 1},   // horizontal -
         {1, 0},   // vertical   |
         {1, 1},   // diagonal   \
         {1, -1}}; // diagonal   /

    private List&lt;Island&gt; islands = new ArrayList&lt;&gt;(); // collection of Islands
    private int[][] grid; // matrix
    
    public DestroyIslands(int[][] grid) {
        this.grid = grid;
    }
    
    public class Island implements Comparable&lt;Island&gt; {
        private List&lt;int[]&gt; cells = new ArrayList&lt;&gt;();
        
        public void addCell(int[] cell) {
            cells.add(cell);
        }
        
        public void destroy() {
            cells.forEach(cell -&gt; grid[cell[0]][cell[1]] = 0);
        }
        
        @Override
        public int compareTo(Island other) {
            return Integer.compare(cells.size(), other.cells.size());
        }
    }
    
    public void deleteIslandBoard() {
        exploreIslands();
        deleteSmallerIslands();
    }
    
    public void exploreIslands() {
        boolean[][] visited = new boolean[grid.length][grid[0].length];
        
        for (int i = 0; i &lt; grid.length; i++) {
            for (int j = 0; j &lt; grid[0].length; j++) {
                
                if (!visited[i][j] &amp;&amp; grid[i][j] != 0) { // if a New Island was found
                    exploreIsland(new int[]{i, j}, visited); // explore the Island, i.e. index all its cell and mark them as visited
                }
            }
        }
    }
    
    /**
     * Depth first search implementation
     */
    public void exploreIsland(int[] cell, boolean[][] visited) {
        Island island = new Island();
        islands.add(island); // updating the list of Islands
        
        Deque&lt;int[]&gt; stack = new ArrayDeque&lt;&gt;();
        stack.push(cell);
        
        while (!stack.isEmpty()) {
            int[] next = stack.poll();
            island.addCell(next);
            
            for (int[] shift : NEIGHBOURS) {
                int row = next[0] + shift[0];
                int col = next[1] + shift[1];
                
                if (isValid(row, col) &amp;&amp; !visited[row][col]) { // if cell exist, non-zero and not visited yet
                    stack.push(new int[]{row, col});
                    visited[row][col] = true;
                }
            }
        }
    }
    
    public boolean isValid(int row, int col) {
        return row &gt;= 0 &amp;&amp; row &lt; grid.length
            &amp;&amp; col &gt;= 0 &amp;&amp; col &lt; grid[0].length
            &amp;&amp; grid[row][col] != 0;
    }
    
    public void deleteSmallerIslands() {
        if (islands.isEmpty()) return; // otherwise Collections.max() would throw NoSuchElementException

        Island largest = Collections.max(islands);
        for (Island next : islands) {
            if (next != largest) next.destroy();
        }
    }
    
    public void printGrid() {
        for (int i = 0; i &lt; grid.length; i++) {
            for (int j = 0; j &lt; grid[i].length; j++) {
                System.out.print(grid[i][j] + &quot; &quot;);
            }
            System.out.println();
        }
    }
}
</code></pre>
<p><code>main()</code></p>
<pre><code>public static void main(String[] args) {
        int[][] example = {
            {1, 2, 3, 1, 2},
            {2, 3, 2, 1, 2},
            {3, 2, 1, 2, 2},
            {0, 2, 0, 0, 0},
            {0, 0, 0, 2, 1}};
        
        DestroyIslands destroyIslands = new DestroyIslands(example);
        destroyIslands.deleteIslandBoard();
        destroyIslands.printGrid();
    }
</code></pre>
<p><em>Output:</em></p>
<pre><code>1 2 3 1 2 
2 3 2 1 2 
3 2 1 2 2 
0 2 0 0 0 
0 0 0 0 0
</code></pre>
<p><a href=""https://www.jdoodle.com/ia/BoG"" rel=""nofollow noreferrer""><em>A link to Online Demo</em></a></p>
"
"74847682","1","Why have nothing to override, but still can put @Override without syntax error?","<p>I am using Java language level 17 on JDK 19. I have</p>
<pre class=""lang-java prettyprint-override""><code>package ocp17.ch07;

public record BeardedDragon(boolean fun) {
    
    @Override
    public boolean fun() {
        return false;
    }
    
}
</code></pre>
<p><a href=""https://i.stack.imgur.com/o5jVP.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/o5jVP.png"" alt=""enter image description here"" /></a></p>
<p>Why have nothing to override, but still can put <code>@Override</code> without syntax error?</p>
","74847710","<p>You are indeed overriding the <code>fun</code> method (which is bad in this case<sup>1</sup>). With Java records, the accessor name (which it automatically gives for you) doesn't have the <code>get</code> prefix - it is <code>fun()</code> and not <code>getFun()</code> or <code>isFun()</code>.</p>
<p>The <a href=""https://docs.oracle.com/javase/specs/jls/se17/html/jls-8.html#jls-8.10.3"" rel=""noreferrer"">Record Members section of JLS states</a></p>
<blockquote>
<p>Furthermore, for each record component, a record class has a method with the same name as the record component and an empty formal parameter list. This method, which is declared explicitly or implicitly, is known as an accessor method.</p>
</blockquote>
<p>The <a href=""https://openjdk.org/jeps/395"" rel=""noreferrer"">Records JEP</a> also says,</p>
<blockquote>
<p>The meaning of the @Override annotation was extended to include the case where the annotated method is an explicitly declared accessor method for a record component.</p>
</blockquote>
<p><em>@Sweeper's answer points to the appropriate section of JLS for this</em></p>
<p>So whatever you've done now counts as overriding.</p>
<hr />
<p><sup>1</sup> Why is it bad?</p>
<p>Let's say you have an instance of <code>BeardedDragon</code> like,</p>
<pre><code>BeardedDragon dragon = new BeardedDragon(true);
if (dragon.fun()) {
     System.out.println(&quot;Yay!!&quot;);
} else {
    System.out.println(&quot;Dang it.. It was supposed to be fun&quot;);
}
</code></pre>
<p>It will return <em>false</em> when you call <code>fun()</code>. I'm not sure if that is what you want.</p>
<p>Also, it violates the below requirement from the JLS.</p>
<blockquote>
<p>Consider a record class R that has components c1, ..., cn, and an
implicitly declared accessor method for every component, and an
implicitly declared equals method. If an instance r1 of R is copied in
the following way:</p>
<p>R r2 = new R(r1.c1(), r1.c2(), ..., r1.cn());</p>
<p>then, assuming r1 is not the null reference, it is always the case
that the expression r1.equals(r2) will evaluate to true. Explicitly
declared accessor methods and equals methods should respect this
invariant. It is not generally possible for a compiler to check
whether explicitly declared methods respect the invariant.</p>
</blockquote>
<p>Using the example from @Johannes Kuhn (from the comments).</p>
<pre><code>var b1 = new BeardedDragon(true); 
var b2 = new BeardedDragon(b1.fun()); 
assert b1.equals(b2); // This will fail 
</code></pre>
"
"74752707","1","GitHub Actions : How to resolve : ""The process '/usr/bin/gpg' failed with exit code 2"" problem on actions/setup-java@v3","<h2>Introduction</h2>
<p>Currently, I'm trying to contribute on a GitHub Action that automatically publishes a java library.
The branch where I'm developing: <a href=""https://github.com/MathieuSoysal/Java-maven-library-publisher/tree/2-add-automated-tests"" rel=""noreferrer"">https://github.com/MathieuSoysal/Java-maven-library-publisher/tree/2-add-automated-tests</a></p>
<p><strong>The yaml code of the Action</strong> :</p>
<pre class=""lang-yaml prettyprint-override""><code>name: Java maven library publisher
author: &quot;Mathieu Soysal (@MathieuSoysal)&quot;
description: &quot;Build automatically Java Maven library and publish it to GitHub Packages and Maven Central.&quot;
branding:
  icon: &quot;package&quot;
  color: &quot;gray-dark&quot;

inputs:
  nexus-username:
    description: &quot;Nexus username&quot;
    required: true
  nexus-password:
    description: &quot;Nexus password&quot;
    required: true
  gpg-private-key:
    description: &quot;GPG private key&quot;
    required: true
  gpg-passphrase:
    description: &quot;GPG passphrase&quot;
    required: true
  github-token:
    description: &quot;GitHub token&quot;
    required: true
  # Java version to use
  java-version:
    description: &quot;Java version to use&quot;
    required: true
    default: &quot;17&quot;
  # Library version
  library-version:
    description: &quot;Library version&quot;
    required: false
    default: &quot;&quot;

runs:
  using: &quot;composite&quot;

  steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up JDK 17 for deploy to OSSRH
      uses: actions/setup-java@v3
      with:
        distribution: &quot;adopt&quot;
        java-version: ${{ inputs.java-version }}
        server-id: ossrh
        server-username: ${{ inputs.nexus-username }}
        server-password: ${{ inputs.nexus-password }}
        gpg-private-key: ${{ inputs.gpg-private-key }}
        gpg-passphrase: ${{ inputs.gpg-passphrase }}

    - name: Build with Maven
      run: mvn -B package --file pom.xml
      shell: bash

    - name: Update package version
      if: ${{ inputs.library-version != '' }}
      run: mvn versions:set -DnewVersion=${{ inputs.library-version }}
      shell: bash

    - name: Prepare Maven environnement with Java 17 for deployment to OSSRH
      run: export MAVEN_OPTS=&quot;--add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.text=ALL-UNNAMED --add-opens=java.desktop/java.awt.font=ALL-UNNAMED&quot;
      shell: bash

    - name: Publish to Apache Maven Central
      run: mvn deploy -PossrhDeploy
      shell: bash
      env:
        MAVEN_USERNAME: ${{ inputs.nexus-username }}
        MAVEN_CENTRAL_TOKEN: ${{ inputs.nexus-password }}
        MAVEN_GPG_PASSPHRASE: ${{ inputs.gpg-passphrase }}

    - name: Set up JDK 17 for deploy to github packages
      uses: actions/setup-java@v3
      with:
        distribution: &quot;adopt&quot;
        java-version: ${{ inputs.java-version }}
        server-id: github

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -PgithubDeploy
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
</code></pre>
<p><em>link to the code: <a href=""https://github.com/MathieuSoysal/Java-maven-library-publisher/blob/2-add-automated-tests/action.yaml"" rel=""noreferrer"">https://github.com/MathieuSoysal/Java-maven-library-publisher/blob/2-add-automated-tests/action.yaml</a></em></p>
<p><strong>The workflow that execute the Action</strong>:</p>
<pre class=""lang-yaml prettyprint-override""><code>name: Test Actions

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Maven Library build and publish
        uses: ./
        with:
          nexus-username: ${{ secrets.NEXUS_USERNAME }}
          nexus-password: ${{ secrets.NEXUS_PASSWORD }}
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
          library-version: $GITHUB_RUN_NUMBER
          github-token: ${{ secrets.GITHUB_TOKEN }}
          java-version: 17
</code></pre>
<p><em>Link to the code: <a href=""https://github.com/MathieuSoysal/Java-maven-library-publisher/blob/2-add-automated-tests/.github/workflows/test-action.yml"" rel=""noreferrer"">https://github.com/MathieuSoysal/Java-maven-library-publisher/blob/2-add-automated-tests/.github/workflows/test-action.yml</a></em></p>
<h2>Problem</h2>
<p>When i'm trying to execute the action I obtain this error:</p>
<pre><code>Getting action download info
Download action repository 'actions/setup-java@v3' (SHA:c3ac5dd0ed8db40fedb61c32fbe677e6b355e94c)
Run ./
Run actions/checkout@v3
Syncing repository: ***/Java-maven-library-publisher
Getting Git version info
Temporarily overriding HOME='/home/runner/work/_temp/45376e45-02aa-4aa5-b536-5f744f7e10d3' before making global git config changes
Adding repository directory to the temporary git global config as a safe directory
/usr/bin/git config --global --add safe.directory /home/runner/work/Java-maven-library-publisher/Java-maven-library-publisher
/usr/bin/git config --local --get remote.origin.url
https://github.com/***/Java-maven-library-publisher
Removing previously created refs, to avoid conflicts
Cleaning the repository
Disabling automatic garbage collection
Setting up auth
Fetching the repository
Determining the checkout info
Checking out the ref
/usr/bin/git log -1 --format='%H'
'0e8da131bf626b218ddccbd08a661c7921dfb8da'
Run actions/setup-java@v3
Installed distributions
Creating settings.xml with server-id: ossrh
Writing to /home/runner/.m2/settings.xml
Importing private gpg key
Error: The process '/usr/bin/gpg' failed with exit code 2
</code></pre>
<h2>Question</h2>
<p>Someone know how we can fix this <code>The process '/usr/bin/gpg' failed with exit code 2</code> for <em>actions/setup-java@v3</em> ?</p>
","74848449","<p>Can you make sure GPG private key is in the correct format. The key should be in the ASCII Armored format, which can be done by running the following command:</p>
<pre><code>gpg --armor --export-secret-keys &lt;key_id&gt; &gt; gpg_key.asc
</code></pre>
<p>Once the key is in the correct format, add it as an input variable in the Action and pass it to the action in the workflow.</p>
"
"74875058","1","How to get jwt token value in spring webflux? (to exchange it with Minio STS token)","<p>I have sping-boot application with rest services written using Spring web flux.</p>
<p>For now I access minio using login/password authorizaton and it works fine.</p>
<p>For now I want to exchange application JWT token with STS minio token and I implemented method to test:</p>
<pre><code>@PostMapping
public boolean test(JwtAuthenticationToken token) throws ServerException, InsufficientDataException, ErrorResponseException, IOException, NoSuchAlgorithmException, InvalidKeyException, InvalidResponseException, XmlParserException, InternalException {
    MinioClient minioClient =
            MinioClient.builder()
                    .region(...)
                    .endpoint(...)              
                    .credentialsProvider(new WebIdentityProvider(
                           
                            () -&gt; new Jwt(token.getToken().getTokenValue(), 1000),
                            String.valueOf(...),
                            null,
                            null,
                            null,
                            null,
                            null))
                    .build();
    return minioClient.bucketExists(&quot;mybucket&quot;).build());
}
</code></pre>
<p>This code successfully works and returns <code>true</code> because <code>mybucket</code> actually exists.</p>
<p>But it is only test and I need to move <code>minioClient</code> to the configuration. The issue here that I have to have credentials provider there.</p>
<p>So I've created folowing configuration:</p>
<pre><code>@Bean
public MinioClient minioClient() {
    return MinioClient.builder()
            .region(...)
            .endpoint(...)
            .credentialsProvider(new WebIdentityProvider(
                   
                    () -&gt; {
                        String block = null;
                        try {
                            block = ReactiveSecurityContextHolder
                                .getContext()
                                .map(context -&gt; {
                                            return context
                                                    .getAuthentication()
                                                    .getPrincipal();

                                        }
                                )
                                .cast(Jwt.class)
                                .map(Jwt::token)
                                .block();
                        } catch (Exception e) {
                            // it fails here     &lt;=======
                            System.out.println(e);
                        }

                        Jwt jwt = new Jwt(String.valueOf(block),
                                1000);
                        return jwt; },
                    String.valueOf(...),
                    null,
                    null,
                    null,
                    null,
                    null))
            .build();
}
</code></pre>
<p>But unfortunately method <code>block()</code> fails with exception:</p>
<pre><code>java.lang.IllegalStateException: block()/blockFirst()/blockLast() are blocking, which is not supported in thread reactor-http-nio-6 
</code></pre>
<p>Any ideas how to fix it?</p>
<p>P.S.
_</p>
<p>I tried</p>
<pre><code>.toFuture()
.get();
</code></pre>
<p>instead of .<code>block();</code></p>
<p>but it returns null</p>
","74883975","<p>As <a href=""https://stackoverflow.com/users/2625393/numichi"">Numichi</a> stated in the comment you have to stay in the reactor context.
One option is to create a bean of type <code>Mono&lt;MinioClient&gt;</code>.</p>
<pre class=""lang-java prettyprint-override""><code>    @Bean
    @Scope(BeanDefinition.SCOPE_PROTOTYPE)
    public Mono&lt;MinioClient&gt; reactiveMinio() {
        return ReactiveSecurityContextHolder.getContext()
                .map(securityContext -&gt;
                        (Jwt)securityContext.getAuthentication().getPrincipal())
                .map(jwt -&gt; MinioClient.builder()
                        .region(&quot;someRegion&quot;)
                        .endpoint(&quot;someEndpoint&quot;)
                        .credentialsProvider(webIdentityProvider(jwt.token()))
                        .build());
    }

    private WebIdentityProvider webIdentityProvider(String token) {
        return new WebIdentityProvider(() -&gt; new Jwt(token, 1000),
                &quot;stsEndpoint&quot;,
                null,
                null,
                null,
                null,
                null);
    }
</code></pre>
<p>I think bean scope should be prototype since <code>MinioClient</code> is bound to security context.</p>
<p>Here is the sample usage of reactive <code>MinioClient</code>:</p>
<pre class=""lang-java prettyprint-override""><code>
@RestController
public class MinioTest {

    private Mono&lt;MinioClient&gt; minioClient;

    public MinioTest(Mono&lt;MinioClient&gt; minioClient) {
        this.minioClient = minioClient;
    }

    @GetMapping(&quot;/minio&quot;)
    public Mono&lt;Object&gt; client() {
        return minioClient
                .map(minio -&gt; {
                    try {
                        return minio.bucketExists(BucketExistsArgs
                                .builder()
                                .bucket(&quot;my-bucketname&quot;)
                                .build());
                    } catch (Exception e) {
                        return new Exception(e);
                    }
                });
    }
}


</code></pre>
"
"73095898","1","RCTModernEventEmitter fires twice for android fabric component","<p>I am trying to create a <code>fabric</code> component for <code>android</code>, specifically I want to use the <code>onClickHandler</code> of the button component and pass a callback to <code>react-native</code> side via <code>RCTModernEventEmitter</code>. It works fine for <code>iOS</code> but for android the <code>RCTModernEventEmitter</code> emits twice every time I click the <code>button</code></p>
<p>This is my spec</p>
<pre><code>import type {HostComponent, ViewProps} from 'react-native';
import type {
  DirectEventHandler
} from 'react-native/Libraries/Types/CodegenTypes';
import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';

type Event = Readonly&lt;{
  text?: string;
}&gt;;

interface NativeProps extends ViewProps {
  text: string;
  onClickHandler?: DirectEventHandler&lt;Event&gt;; ////Event name should start with on
}

export default codegenNativeComponent&lt;NativeProps&gt;(
  'MyButtonView',
) as HostComponent&lt;NativeProps&gt;;
</code></pre>
<p>On native side I have created following files</p>
<pre><code>public class MyButtonViewManager extends SimpleViewManager&lt;MyButtonView&gt; {

    public static final String NAME = &quot;MyButtonView&quot;;
    ReactApplicationContext mCallerContext;

    public MyButtonViewManager(ReactApplicationContext reactContext) {
        mCallerContext = reactContext;
    }
 
    @NonNull
    @Override
    public String getName() {
        return NAME;
    }

    @NonNull
    @Override
    protected MyButtonView createViewInstance(@NonNull ThemedReactContext reactContext) {
        return new MyButtonView(reactContext);
    }

    @ReactProp(name = &quot;text&quot;)
    public void setQrCodeText(MyButtonView view, String text) {
        view.setText(text);
    }


    @Nullable
    @Override
    public Map&lt;String, Object&gt; getExportedCustomDirectEventTypeConstants() {
        return MapBuilder.of(&quot;topOnClickHandler&quot;,
                MapBuilder.of(&quot;registrationName&quot;, &quot;onClickHandler&quot;)
        );
    }

}

public class MyButtonClickEvent extends Event&lt;MyButtonClickEvent&gt; {

    public MyButtonClickEvent(int viewId) {
        super(viewId);
    }
 
    @Override
    public String getEventName() {
        return &quot;topOnClickHandler&quot;;
    }

//    @Override
//    public void dispatch(RCTEventEmitter rctEventEmitter) {
//        super.dispatch(rctEventEmitter);
//        rctEventEmitter.receiveEvent(getViewTag(), getEventName(), Arguments.createMap());
//    }

    @Override
    public void dispatchModern(RCTModernEventEmitter rctEventEmitter) {
        super.dispatchModern(rctEventEmitter);
        rctEventEmitter.receiveEvent(-1,
                getViewTag(),getEventName(),
                Arguments.createMap()
        );
    }

    @Nullable
    @Override
    protected WritableMap getEventData() {
        WritableMap event = Arguments.createMap();
        event.putString(&quot;message&quot;, &quot;MyMessage&quot;);
        return event;
    }
}

public class MyButtonView extends androidx.appcompat.widget.AppCompatButton {

    public MyButtonView(Context context) {
        super(context);
        configureViews();
    }

    private void configureViews(){
        setBackgroundColor(Color.YELLOW);
        setOnClickListener(view -&gt; {
            ReactContext reactContext = (ReactContext)getContext();
            EventDispatcher eventDispatcher = UIManagerHelper.getEventDispatcherForReactTag(
                    reactContext ,getId()
            );
            eventDispatcher.dispatchEvent(new MyButtonClickEvent(getId()));
        });
    }
}
</code></pre>
<p>On <code>JS</code> side</p>
<pre><code>&lt;MyButtonView
  style={{height: 100, width: 100, margin: 20}}
  onClickHandler={(value: any) =&gt; {
    console.log('Hello ok bye', value.nativeEvent);
  }}
  text=&quot;Hello&quot;
/&gt;
</code></pre>
<p>I get <code>value</code> in <code>onClickHandler</code> of <code>MyButtonView</code> twice even though I press the <code>button</code> once</p>
<p>Fullrepo is here <a href=""https://github.com/PritishSawant/ReactNativeFabricEventListenerExample"" rel=""noreferrer"">https://github.com/PritishSawant/ReactNativeFabricEventListenerExample</a></p>
<p>Edit:</p>
<p>I have updated my code to 0.71.1 and you can find it <a href=""https://github.com/PritishSawant/NewArchitectureReactNativeButtonClick0.71.1"" rel=""noreferrer"">here</a></p>
","75318050","<p>Commenting  <code>super.dispatchModern(rctEventEmitter);</code> from dispatchModern resolved the issue</p>
"